{"交通运输": {"sqlite": "CREATE TABLE 铁路运输旅客 (\n  年份 DATETIME PRIMARY KEY, -- 年份\n  铁路营业里程 INTEGER, -- 铁路营业里程\n  里程同比增长 INTEGER, -- 里程同比增长\n  高铁里程占比 INTEGER, -- 高铁里程占比\n  旅客发送量 INTEGER, -- 旅客发送量\n  旅客同比增长 INTEGER, -- 旅客同比增长\n  客运周转量 INTEGER, -- 客运周转量\n  周转量同比增长 INTEGER, -- 周转量同比增长\n  高铁承运占比 INTEGER, -- 高铁承运占比\n);\nCREATE TABLE 铁路运输货物 (\n  年份 DATETIME PRIMARY KEY, -- 年份\n  货运发送量 INTEGER, -- 货运发送量\n  发送量同比增长 INTEGER, -- 发送量同比增长\n  货运周转量 INTEGER, -- 货运周转量\n  周转量同比增长 INTEGER, -- 周转量同比增长\n);\nCREATE TABLE 民航航线 (\n  年份 DATETIME PRIMARY KEY, -- 年份\n  民用航空颁证机场数量 INTEGER, -- 民用航空颁证机场数量\n  定期通航机场数量 INTEGER, -- 定期通航机场数量\n  通航城市数量 INTEGER, -- 通航城市数量\n  飞机数量 INTEGER, -- 飞机数量\n  航线里程 INTEGER, -- 航线里程\n  地级市覆盖率 INTEGER, -- 地级市覆盖率\n  县覆盖率 INTEGER, -- 县覆盖率\n  国际航线数量 INTEGER, -- 国际航线数量\n  通航国家数量 INTEGER, -- 通航国家数量\n);\nCREATE TABLE 民航运输旅客 (\n  年份 DATETIME PRIMARY KEY, -- 年份\n  旅客运输量 INTEGER, -- 旅客运输量\n  旅客同比增长 INTEGER, -- 旅客同比增长\n  旅客周转量 INTEGER, -- 旅客周转量\n  周转量同比增长 INTEGER, -- 周转量同比增长\n);\nCREATE TABLE 民航运输货物 (\n  年份 DATETIME PRIMARY KEY, -- 年份\n  货邮运输量 INTEGER, -- 货邮运输量\n  运输量同比增长 INTEGER, -- 运输量同比增长\n  货邮周转量 INTEGER, -- 货邮周转量\n  周转量同比增长 INTEGER, -- 周转量同比增长\n);\n", "columns_en": {"年份": "年份", "铁路营业里程": "铁路营业里程", "里程同比增长": "里程同比增长", "高铁里程占比": "高铁里程占比", "旅客发送量": "旅客发送量", "旅客同比增长": "旅客同比增长", "客运周转量": "客运周转量", "周转量同比增长": "周转量同比增长", "高铁承运占比": "高铁承运占比", "货运发送量": "货运发送量", "发送量同比增长": "发送量同比增长", "货运周转量": "货运周转量", "民用航空颁证机场数量": "民用航空颁证机场数量", "定期通航机场数量": "定期通航机场数量", "通航城市数量": "通航城市数量", "飞机数量": "飞机数量", "航线里程": "航线里程", "地级市覆盖率": "地级市覆盖率", "县覆盖率": "县覆盖率", "国际航线数量": "国际航线数量", "通航国家数量": "通航国家数量", "旅客运输量": "旅客运输量", "旅客周转量": "旅客周转量", "货邮运输量": "货邮运输量", "运输量同比增长": "运输量同比增长", "货邮周转量": "货邮周转量"}, "table_en": {"铁路运输旅客": "铁路运输旅客", "铁路运输货物": "铁路运输货物", "民航航线": "民航航线", "民航运输旅客": "民航运输旅客", "民航运输货物": "民航运输货物"}}, "水果": {"sqlite": "CREATE TABLE 水果 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  特性 VARCHAR(50), -- 特性\n  适合季节 VARCHAR(50), -- 适合季节\n  每100克热量 INTEGER, -- 每100克热量\n  每100克水分 INTEGER, -- 每100克水分\n);\nCREATE TABLE 省份 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  气候 VARCHAR(50), -- 气候\n  所属区域 VARCHAR(50), -- 所属区域\n);\nCREATE TABLE 水果产地 (\n  水果id INTEGER PRIMARY KEY, -- 水果id\n  省份id INTEGER, -- 省份id\n  是否特产 BINARY, -- 是否特产\n  年平均产量 INTEGER, -- 年平均产量\n  销售形式 VARCHAR(50), -- 销售形式\n);\nCREATE TABLE 水果销售城市 (\n  水果id INTEGER PRIMARY KEY, -- 水果id\n  原产省份id INTEGER, -- 原产省份id\n  销往省份id INTEGER, -- 销往省份id\n  年销售量 INTEGER, -- 年销售量\n);\n-- 水果产地.水果id can be joined with 水果.水果\n-- 水果销售城市.原产省份id can be joined with 省份.省份\n-- 水果销售城市.销往省份id can be joined with 省份.省份\n-- 水果产地.省份id can be joined with 省份.省份\n-- 水果销售城市.水果id can be joined with 水果.水果", "columns_en": {"词条id": "词条id", "名称": "名称", "特性": "特性", "适合季节": "适合季节", "每100克热量": "每100克热量", "每100克水分": "每100克水分", "气候": "气候", "所属区域": "所属区域", "水果id": "水果id", "省份id": "省份id", "是否特产": "是否特产", "年平均产量": "年平均产量", "销售形式": "销售形式", "原产省份id": "原产省份id", "销往省份id": "销往省份id", "年销售量": "年销售量"}, "table_en": {"水果": "水果", "省份": "省份", "水果产地": "水果产地", "水果销售城市": "水果销售城市"}}, "大麦网演唱会": {"sqlite": "CREATE TABLE 演唱会 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  歌手 VARCHAR(50), -- 歌手\n  演出场次 INTEGER, -- 演出场次\n  单场演出时长 INTEGER, -- 单场演出时长\n  演出曲目 INTEGER, -- 演出曲目\n);\nCREATE TABLE 场馆 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  城市 VARCHAR(50), -- 城市\n  容纳人数 INTEGER, -- 容纳人数\n  占地面积 INTEGER, -- 占地面积\n);\nCREATE TABLE 演唱会场馆 (\n  演唱会id INTEGER PRIMARY KEY, -- 演唱会id\n  场馆id INTEGER, -- 场馆id\n  演出日期 DATETIME, -- 演出日期\n  开始时间 DATETIME, -- 开始时间\n  票数 INTEGER, -- 票数\n  售出数量 INTEGER, -- 售出数量\n  最低票价 INTEGER, -- 最低票价\n  最高票价 INTEGER, -- 最高票价\n);\n-- 演唱会场馆.演唱会id can be joined with 演唱会.演唱会\n-- 演唱会场馆.场馆id can be joined with 场馆.场馆", "columns_en": {"词条id": "词条id", "名称": "名称", "歌手": "歌手", "演出场次": "演出场次", "单场演出时长": "单场演出时长", "演出曲目": "演出曲目", "城市": "城市", "容纳人数": "容纳人数", "占地面积": "占地面积", "演唱会id": "演唱会id", "场馆id": "场馆id", "演出日期": "演出日期", "开始时间": "开始时间", "票数": "票数", "售出数量": "售出数量", "最低票价": "最低票价", "最高票价": "最高票价"}, "table_en": {"演唱会": "演唱会", "场馆": "场馆", "演唱会场馆": "演唱会场馆"}}, "食物功效": {"sqlite": "CREATE TABLE 食物 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  功效 VARCHAR(50), -- 功效\n);\nCREATE TABLE 相克食物 (\n  食物id INTEGER PRIMARY KEY, -- 食物id\n  相克食物id INTEGER, -- 相克食物id\n  原因 VARCHAR(50), -- 原因\n  是否致命 BINARY, -- 是否致命\n);\nCREATE TABLE 互补食物 (\n  食物id INTEGER PRIMARY KEY, -- 食物id\n  互补食物id INTEGER, -- 互补食物id\n  同食益处 VARCHAR(50), -- 同食益处\n  推荐做法 VARCHAR(50), -- 推荐做法\n);\n-- 相克食物.相克食物id can be joined with 食物.食物\n-- 互补食物.食物id can be joined with 食物.食物\n-- 互补食物.互补食物id can be joined with 食物.食物\n-- 相克食物.食物id can be joined with 食物.食物", "columns_en": {"词条id": "词条id", "名称": "名称", "功效": "功效", "食物id": "食物id", "相克食物id": "相克食物id", "原因": "原因", "是否致命": "是否致命", "互补食物id": "互补食物id", "同食益处": "同食益处", "推荐做法": "推荐做法"}, "table_en": {"食物": "食物", "相克食物": "相克食物", "互补食物": "互补食物"}}, "诗词": {"sqlite": "CREATE TABLE 诗人 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  姓名 VARCHAR(50), -- 姓名\n  性别 VARCHAR(50), -- 性别\n  所处朝代 VARCHAR(50), -- 所处朝代\n  年龄 INTEGER, -- 年龄\n  作品数量 INTEGER, -- 作品数量\n  称号 VARCHAR(50), -- 称号\n);\nCREATE TABLE 诗词 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  诗词名 VARCHAR(50), -- 诗词名\n  作者id INTEGER, -- 作者id\n  文学体裁 VARCHAR(50), -- 文学体裁\n  传播度 INTEGER, -- 传播度\n);\nCREATE TABLE 做官的诗人 (\n  诗人id INTEGER PRIMARY KEY, -- 诗人id\n  所处年号 VARCHAR(50), -- 所处年号\n  做官时间 INTEGER, -- 做官时间\n);\nCREATE TABLE 纪念景点 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  所属城市 VARCHAR(50), -- 所属城市\n  地址 VARCHAR(50), -- 地址\n  纪念人物id INTEGER, -- 纪念人物id\n);\n-- 纪念景点.纪念人物id can be joined with 诗人.诗人\n-- 诗词.作者id can be joined with 诗人.诗人\n-- 做官的诗人.诗人id can be joined with 诗人.诗人", "columns_en": {"词条id": "词条id", "姓名": "姓名", "性别": "性别", "所处朝代": "所处朝代", "年龄": "年龄", "作品数量": "作品数量", "称号": "称号", "诗词名": "诗词名", "作者id": "作者id", "文学体裁": "文学体裁", "传播度": "传播度", "诗人id": "诗人id", "所处年号": "所处年号", "做官时间": "做官时间", "名称": "名称", "所属城市": "所属城市", "地址": "地址", "纪念人物id": "纪念人物id"}, "table_en": {"诗人": "诗人", "诗词": "诗词", "做官的诗人": "做官的诗人", "纪念景点": "纪念景点"}}, "基金公司": {"sqlite": "CREATE TABLE 基金公司 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  注册资本 INTEGER, -- 注册资本\n  封闭式基金数量 INTEGER, -- 封闭式基金数量\n  开放式基金数量 INTEGER, -- 开放式基金数量\n  亚洲债券基金数量 INTEGER, -- 亚洲债券基金数量\n  基金数量排名 INTEGER, -- 基金数量排名\n  基金品种数排名 INTEGER, -- 基金品种数排名\n);\nCREATE TABLE 基金公司的股东公司 (\n  公司id INTEGER PRIMARY KEY, -- 公司id\n  股东公司 VARCHAR(50), -- 股东公司\n  出资比例 INTEGER, -- 出资比例\n);\nCREATE TABLE 基金公司收入 (\n  年份 DATETIME PRIMARY KEY, -- 年份\n  公司id INTEGER, -- 公司id\n  资产规模 INTEGER, -- 资产规模\n  利润合计 INTEGER, -- 利润合计\n  管理费合计 INTEGER, -- 管理费合计\n);\n-- 基金公司的股东公司.公司id can be joined with 基金公司.基金公司\n-- 基金公司收入.公司id can be joined with 基金公司.基金公司", "columns_en": {"词条id": "词条id", "名称": "名称", "注册资本": "注册资本", "封闭式基金数量": "封闭式基金数量", "开放式基金数量": "开放式基金数量", "亚洲债券基金数量": "亚洲债券基金数量", "基金数量排名": "基金数量排名", "基金品种数排名": "基金品种数排名", "公司id": "公司id", "股东公司": "股东公司", "出资比例": "出资比例", "年份": "年份", "资产规模": "资产规模", "利润合计": "利润合计", "管理费合计": "管理费合计"}, "table_en": {"基金公司": "基金公司", "基金公司的股东公司": "基金公司的股东公司", "基金公司收入": "基金公司收入"}}, "坚果": {"sqlite": "CREATE TABLE 坚果 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  饱和脂肪含量 INTEGER, -- 饱和脂肪含量\n  不饱和脂肪含量 INTEGER, -- 不饱和脂肪含量\n  每100克热量 INTEGER, -- 每100克热量\n);\nCREATE TABLE 每100克坚果营养成分 (\n  坚果id INTEGER PRIMARY KEY, -- 坚果id\n  营养成分 VARCHAR(50), -- 营养成分\n  含量 INTEGER, -- 含量\n);\nCREATE TABLE 坚果产地 (\n  坚果id INTEGER PRIMARY KEY, -- 坚果id\n  产地 VARCHAR(50), -- 产地\n  市场占比 INTEGER, -- 市场占比\n);\nCREATE TABLE 坚果摄入量 (\n  坚果id INTEGER PRIMARY KEY, -- 坚果id\n  国家 VARCHAR(50), -- 国家\n  人均摄入量 INTEGER, -- 人均摄入量\n  世界人均摄入量 INTEGER, -- 世界人均摄入量\n);\nCREATE TABLE 坚果中国人均消费 (\n  坚果id INTEGER PRIMARY KEY, -- 坚果id\n  消费次数 INTEGER, -- 消费次数\n  占比 INTEGER, -- 占比\n);\nCREATE TABLE 坚果季节性营业收入 (\n  坚果id INTEGER PRIMARY KEY, -- 坚果id\n  季节 VARCHAR(50), -- 季节\n  营业收入 INTEGER, -- 营业收入\n  全年占比 INTEGER, -- 全年占比\n);\nCREATE TABLE 坚果销售渠道 (\n  坚果id INTEGER PRIMARY KEY, -- 坚果id\n  年份 DATETIME, -- 年份\n  线上销售收入 INTEGER, -- 线上销售收入\n  线下销售收入 INTEGER, -- 线下销售收入\n);\n-- 坚果摄入量.坚果id can be joined with 坚果.坚果\n-- 每100克坚果营养成分.坚果id can be joined with 坚果.坚果\n-- 坚果季节性营业收入.坚果id can be joined with 坚果.坚果\n-- 坚果销售渠道.坚果id can be joined with 坚果.坚果\n-- 坚果产地.坚果id can be joined with 坚果.坚果\n-- 坚果中国人均消费.坚果id can be joined with 坚果.坚果", "columns_en": {"词条id": "词条id", "名称": "名称", "饱和脂肪含量": "饱和脂肪含量", "不饱和脂肪含量": "不饱和脂肪含量", "每100克热量": "每100克热量", "坚果id": "坚果id", "营养成分": "营养成分", "含量": "含量", "产地": "产地", "市场占比": "市场占比", "国家": "国家", "人均摄入量": "人均摄入量", "世界人均摄入量": "世界人均摄入量", "消费次数": "消费次数", "占比": "占比", "季节": "季节", "营业收入": "营业收入", "全年占比": "全年占比", "年份": "年份", "线上销售收入": "线上销售收入", "线下销售收入": "线下销售收入"}, "table_en": {"坚果": "坚果", "每100克坚果营养成分": "每100克坚果营养成分", "坚果产地": "坚果产地", "坚果摄入量": "坚果摄入量", "坚果中国人均消费": "坚果中国人均消费", "坚果季节性营业收入": "坚果季节性营业收入", "坚果销售渠道": "坚果销售渠道"}}, "文集": {"sqlite": "CREATE TABLE 作者 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  姓名 VARCHAR(50), -- 姓名\n  国籍 VARCHAR(50), -- 国籍\n  毕业院校 VARCHAR(50), -- 毕业院校\n  民族 VARCHAR(50), -- 民族\n);\nCREATE TABLE 文集 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  作者id INTEGER, -- 作者id\n  页数 INTEGER, -- 页数\n  定价 INTEGER, -- 定价\n  出版社 VARCHAR(50), -- 出版社\n  出版时间 DATETIME, -- 出版时间\n  开本 VARCHAR(50), -- 开本\n);\n-- 文集.作者id can be joined with 作者.作者", "columns_en": {"词条id": "词条id", "姓名": "姓名", "国籍": "国籍", "毕业院校": "毕业院校", "民族": "民族", "名称": "名称", "作者id": "作者id", "页数": "页数", "定价": "定价", "出版社": "出版社", "出版时间": "出版时间", "开本": "开本"}, "table_en": {"作者": "作者", "文集": "文集"}}, "AI峰会": {"sqlite": "CREATE TABLE 峰会 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  主办单位 VARCHAR(50), -- 主办单位\n  举办时间 DATETIME, -- 举办时间\n  历时天数 INTEGER, -- 历时天数\n  举办地点 VARCHAR(50), -- 举办地点\n  分论坛数量 INTEGER, -- 分论坛数量\n  门票价格 INTEGER, -- 门票价格\n  门票数量 INTEGER, -- 门票数量\n  报名人数 INTEGER, -- 报名人数\n  直播观看人数 INTEGER, -- 直播观看人数\n);\nCREATE TABLE 嘉宾 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  姓名 VARCHAR(50), -- 姓名\n  任职单位 VARCHAR(50), -- 任职单位\n  职位 VARCHAR(50), -- 职位\n);\nCREATE TABLE 峰会嘉宾 (\n  嘉宾id INTEGER PRIMARY KEY, -- 嘉宾id\n  峰会id INTEGER, -- 峰会id\n  演讲主题 VARCHAR(50), -- 演讲主题\n  论坛 VARCHAR(50), -- 论坛\n  开始时间 DATETIME, -- 开始时间\n  演讲时长 INTEGER, -- 演讲时长\n);\nCREATE TABLE 峰会赞助公司 (\n  峰会id INTEGER PRIMARY KEY, -- 峰会id\n  公司 VARCHAR(50), -- 公司\n  赞助级别 VARCHAR(50), -- 赞助级别\n);\n-- 峰会嘉宾.嘉宾id can be joined with 嘉宾.嘉宾\n-- 峰会嘉宾.峰会id can be joined with 峰会.峰会\n-- 峰会赞助公司.峰会id can be joined with 峰会.峰会", "columns_en": {"词条id": "词条id", "名称": "名称", "主办单位": "主办单位", "举办时间": "举办时间", "历时天数": "历时天数", "举办地点": "举办地点", "分论坛数量": "分论坛数量", "门票价格": "门票价格", "门票数量": "门票数量", "报名人数": "报名人数", "直播观看人数": "直播观看人数", "姓名": "姓名", "任职单位": "任职单位", "职位": "职位", "嘉宾id": "嘉宾id", "峰会id": "峰会id", "演讲主题": "演讲主题", "论坛": "论坛", "开始时间": "开始时间", "演讲时长": "演讲时长", "公司": "公司", "赞助级别": "赞助级别"}, "table_en": {"峰会": "峰会", "嘉宾": "嘉宾", "峰会嘉宾": "峰会嘉宾", "峰会赞助公司": "峰会赞助公司"}}, "明星富豪": {"sqlite": "CREATE TABLE 明星 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  姓名 VARCHAR(50), -- 姓名\n  国籍 VARCHAR(50), -- 国籍\n  性别 VARCHAR(50), -- 性别\n  职业 VARCHAR(50), -- 职业\n  年龄 INTEGER, -- 年龄\n  薪酬 INTEGER, -- 薪酬\n  票房 INTEGER, -- 票房\n);\nCREATE TABLE 2018年财富排名 (\n  明星id INTEGER PRIMARY KEY, -- 明星id\n  排名 INTEGER, -- 排名\n  资产 INTEGER, -- 资产\n);\nCREATE TABLE 2017年财富排名 (\n  明星id INTEGER PRIMARY KEY, -- 明星id\n  排名 INTEGER, -- 排名\n  资产 INTEGER, -- 资产\n);\n-- 2017年财富排名.明星id can be joined with 明星.明星\n-- 2018年财富排名.明星id can be joined with 明星.明星", "columns_en": {"词条id": "词条id", "姓名": "姓名", "国籍": "国籍", "性别": "性别", "职业": "职业", "年龄": "年龄", "薪酬": "薪酬", "票房": "票房", "明星id": "明星id", "排名": "排名", "资产": "资产"}, "table_en": {"明星": "明星", "2018年财富排名": "2018年财富排名", "2017年财富排名": "2017年财富排名"}}, "手机": {"sqlite": "CREATE TABLE 公司 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  创始人 VARCHAR(50), -- 创始人\n  所属国家 VARCHAR(50), -- 所属国家\n  年营业额 INTEGER, -- 年营业额\n);\nCREATE TABLE 手机品牌 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  发布时间 DATETIME, -- 发布时间\n  研发公司id INTEGER, -- 研发公司id\n);\nCREATE TABLE 手机型号 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  主频尺寸 INTEGER, -- 主频尺寸\n  像素 INTEGER, -- 像素\n  内存容量 INTEGER, -- 内存容量\n  操作系统 VARCHAR(50), -- 操作系统\n  解锁方式 VARCHAR(50), -- 解锁方式\n  售价 INTEGER, -- 售价\n  售出量 INTEGER, -- 售出量\n  品牌id INTEGER, -- 品牌id\n);\nCREATE TABLE 型号使用人群 (\n  型号id INTEGER PRIMARY KEY, -- 型号id\n  人群 VARCHAR(50), -- 人群\n  使用占比 INTEGER, -- 使用占比\n);\n-- 手机型号.品牌id can be joined with 手机品牌.手机品牌\n-- 型号使用人群.型号id can be joined with 手机型号.手机型号\n-- 手机品牌.研发公司id can be joined with 公司.公司", "columns_en": {"词条id": "词条id", "名称": "名称", "创始人": "创始人", "所属国家": "所属国家", "年营业额": "年营业额", "发布时间": "发布时间", "研发公司id": "研发公司id", "主频尺寸": "主频尺寸", "像素": "像素", "内存容量": "内存容量", "操作系统": "操作系统", "解锁方式": "解锁方式", "售价": "售价", "售出量": "售出量", "品牌id": "品牌id", "型号id": "型号id", "人群": "人群", "使用占比": "使用占比"}, "table_en": {"公司": "公司", "手机品牌": "手机品牌", "手机型号": "手机型号", "型号使用人群": "型号使用人群"}}, "豆瓣音乐人": {"sqlite": "CREATE TABLE 音乐人 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  姓名 VARCHAR(50), -- 姓名\n  歌曲数量 INTEGER, -- 歌曲数量\n  关注数量 INTEGER, -- 关注数量\n);\nCREATE TABLE 歌曲 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  歌曲名称 VARCHAR(50), -- 歌曲名称\n  音乐人id INTEGER, -- 音乐人id\n  播放次数 INTEGER, -- 播放次数\n  下载次数 INTEGER, -- 下载次数\n);\nCREATE TABLE 歌单 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  歌单名称 VARCHAR(50), -- 歌单名称\n  类型 VARCHAR(50), -- 类型\n  歌曲数量 INTEGER, -- 歌曲数量\n  收藏次数 INTEGER, -- 收藏次数\n  播放次数 INTEGER, -- 播放次数\n);\nCREATE TABLE 歌曲歌单 (\n  歌曲id INTEGER PRIMARY KEY, -- 歌曲id\n  歌单id INTEGER, -- 歌单id\n);\n-- 歌曲歌单.歌曲id can be joined with 歌曲.歌曲\n-- 歌曲歌单.歌单id can be joined with 歌单.歌单\n-- 歌曲.音乐人id can be joined with 音乐人.音乐人", "columns_en": {"词条id": "词条id", "姓名": "姓名", "歌曲数量": "歌曲数量", "关注数量": "关注数量", "歌曲名称": "歌曲名称", "音乐人id": "音乐人id", "播放次数": "播放次数", "下载次数": "下载次数", "歌单名称": "歌单名称", "类型": "类型", "收藏次数": "收藏次数", "歌曲id": "歌曲id", "歌单id": "歌单id"}, "table_en": {"音乐人": "音乐人", "歌曲": "歌曲", "歌单": "歌单", "歌曲歌单": "歌曲歌单"}}, "中国旅行社": {"sqlite": "CREATE TABLE 旅行社 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  级别 VARCHAR(50), -- 级别\n  出境游国家数量 INTEGER, -- 出境游国家数量\n  国内游城市数量 INTEGER, -- 国内游城市数量\n  出境游路线数量 INTEGER, -- 出境游路线数量\n  国内游路线数量 INTEGER, -- 国内游路线数量\n  亚洲排名 INTEGER, -- 亚洲排名\n  接待海外游客数量 INTEGER, -- 接待海外游客数量\n  境外公司数量 INTEGER, -- 境外公司数量\n  控股子公司数量 INTEGER, -- 控股子公司数量\n  有业务关系的旅行商数量 INTEGER, -- 有业务关系的旅行商数量\n  免税店数量 INTEGER, -- 免税店数量\n);\nCREATE TABLE 出境游路线 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  路线名称 VARCHAR(50), -- 路线名称\n  旅行社id INTEGER, -- 旅行社id\n  出发城市 VARCHAR(50), -- 出发城市\n  天数 INTEGER, -- 天数\n  成人价格 INTEGER, -- 成人价格\n  儿童价格 INTEGER, -- 儿童价格\n  国家数量 INTEGER, -- 国家数量\n  景点数 INTEGER, -- 景点数\n  门票总价格 INTEGER, -- 门票总价格\n);\nCREATE TABLE 出境游所含国家 (\n  路线id INTEGER PRIMARY KEY, -- 路线id\n  国家 VARCHAR(50), -- 国家\n  旅行天数 INTEGER, -- 旅行天数\n  景点数量 INTEGER, -- 景点数量\n);\nCREATE TABLE 国内游路线 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  路线名称 VARCHAR(50), -- 路线名称\n  旅行社id INTEGER, -- 旅行社id\n  出发城市 VARCHAR(50), -- 出发城市\n  天数 INTEGER, -- 天数\n  预售价格 INTEGER, -- 预售价格\n  参团价格 INTEGER, -- 参团价格\n  起团人数 INTEGER, -- 起团人数\n  个人价格 INTEGER, -- 个人价格\n  景点数 INTEGER, -- 景点数\n);\nCREATE TABLE 邮轮路线 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  路线名称 VARCHAR(50), -- 路线名称\n  旅行社id INTEGER, -- 旅行社id\n  出发城市 VARCHAR(50), -- 出发城市\n  天数 INTEGER, -- 天数\n  内舱房价格 INTEGER, -- 内舱房价格\n  海景房价格 INTEGER, -- 海景房价格\n  阳台房价格 INTEGER, -- 阳台房价格\n  航行区域 VARCHAR(50), -- 航行区域\n  邮轮公司 VARCHAR(50), -- 邮轮公司\n);\n-- 邮轮路线.旅行社id can be joined with 旅行社.旅行社\n-- 出境游所含国家.路线id can be joined with 出境游路线.出境游路线\n-- 国内游路线.旅行社id can be joined with 旅行社.旅行社\n-- 出境游路线.旅行社id can be joined with 旅行社.旅行社", "columns_en": {"词条id": "词条id", "名称": "名称", "级别": "级别", "出境游国家数量": "出境游国家数量", "国内游城市数量": "国内游城市数量", "出境游路线数量": "出境游路线数量", "国内游路线数量": "国内游路线数量", "亚洲排名": "亚洲排名", "接待海外游客数量": "接待海外游客数量", "境外公司数量": "境外公司数量", "控股子公司数量": "控股子公司数量", "有业务关系的旅行商数量": "有业务关系的旅行商数量", "免税店数量": "免税店数量", "路线名称": "路线名称", "旅行社id": "旅行社id", "出发城市": "出发城市", "天数": "天数", "成人价格": "成人价格", "儿童价格": "儿童价格", "国家数量": "国家数量", "景点数": "景点数", "门票总价格": "门票总价格", "路线id": "路线id", "国家": "国家", "旅行天数": "旅行天数", "景点数量": "景点数量", "预售价格": "预售价格", "参团价格": "参团价格", "起团人数": "起团人数", "个人价格": "个人价格", "内舱房价格": "内舱房价格", "海景房价格": "海景房价格", "阳台房价格": "阳台房价格", "航行区域": "航行区域", "邮轮公司": "邮轮公司"}, "table_en": {"旅行社": "旅行社", "出境游路线": "出境游路线", "出境游所含国家": "出境游所含国家", "国内游路线": "国内游路线", "邮轮路线": "邮轮路线"}}, "世界经济峰会": {"sqlite": "CREATE TABLE G20峰会 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  年份 DATETIME, -- 年份\n  届次 INTEGER, -- 届次\n  主办国 VARCHAR(50), -- 主办国\n  主办城市 VARCHAR(50), -- 主办城市\n  参加国家数量 INTEGER, -- 参加国家数量\n);\nCREATE TABLE 世界经济论坛 (\n  年份 DATETIME PRIMARY KEY, -- 年份\n  届次 INTEGER, -- 届次\n  参加国家数量 INTEGER, -- 参加国家数量\n  参加的元首人数 INTEGER, -- 参加的元首人数\n  参加总人数 INTEGER, -- 参加总人数\n  研讨会数量 INTEGER, -- 研讨会数量\n);\nCREATE TABLE 世界物联网博览会 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  年份 DATETIME, -- 年份\n  高峰论坛数量 INTEGER, -- 高峰论坛数量\n  参会嘉宾数 INTEGER, -- 参会嘉宾数\n  参会企业数 INTEGER, -- 参会企业数\n  观展人数 INTEGER, -- 观展人数\n);\nCREATE TABLE 中国国际进口博览会 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  年份 DATETIME, -- 年份\n  参加企业数 INTEGER, -- 参加企业数\n  意向成交额 INTEGER, -- 意向成交额\n  成交额增长率 INTEGER, -- 成交额增长率\n);\n", "columns_en": {"词条id": "词条id", "名称": "名称", "年份": "年份", "届次": "届次", "主办国": "主办国", "主办城市": "主办城市", "参加国家数量": "参加国家数量", "参加的元首人数": "参加的元首人数", "参加总人数": "参加总人数", "研讨会数量": "研讨会数量", "高峰论坛数量": "高峰论坛数量", "参会嘉宾数": "参会嘉宾数", "参会企业数": "参会企业数", "观展人数": "观展人数", "参加企业数": "参加企业数", "意向成交额": "意向成交额", "成交额增长率": "成交额增长率"}, "table_en": {"G20峰会": "G20峰会", "世界经济论坛": "世界经济论坛", "世界物联网博览会": "世界物联网博览会", "中国国际进口博览会": "中国国际进口博览会"}}, "中国城市": {"sqlite": "CREATE TABLE 省份 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  下辖区数量 INTEGER, -- 下辖区数量\n  面积 INTEGER, -- 面积\n  人口 INTEGER, -- 人口\n  气候条件 VARCHAR(50), -- 气候条件\n  省花 VARCHAR(50), -- 省花\n  省树 VARCHAR(50), -- 省树\n);\nCREATE TABLE 城市 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  面积 INTEGER, -- 面积\n  人口 INTEGER, -- 人口\n  市花 VARCHAR(50), -- 市花\n  所属省id INTEGER, -- 所属省id\n);\nCREATE TABLE 省生产总值 (\n  年份 DATETIME PRIMARY KEY, -- 年份\n  省份id INTEGER, -- 省份id\n  GDP INTEGER, -- GDP\n  人均GDP INTEGER, -- 人均GDP\n);\nCREATE TABLE 市生产总值 (\n  年份 DATETIME PRIMARY KEY, -- 年份\n  城市id INTEGER, -- 城市id\n  GDP INTEGER, -- GDP\n  人均GDP INTEGER, -- 人均GDP\n);\n-- 市生产总值.城市id can be joined with 城市.城市\n-- 城市.所属省id can be joined with 省份.省份\n-- 省生产总值.省份id can be joined with 省份.省份", "columns_en": {"词条id": "词条id", "名称": "名称", "下辖区数量": "下辖区数量", "面积": "面积", "人口": "人口", "气候条件": "气候条件", "省花": "省花", "省树": "省树", "市花": "市花", "所属省id": "所属省id", "年份": "年份", "省份id": "省份id", "GDP": "GDP", "人均GDP": "人均GDP", "城市id": "城市id"}, "table_en": {"省份": "省份", "城市": "城市", "省生产总值": "省生产总值", "市生产总值": "市生产总值"}}, "中国菜系": {"sqlite": "CREATE TABLE 菜系 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  起源地区 VARCHAR(50), -- 起源地区\n  起源时间 VARCHAR(50), -- 起源时间\n  口味 VARCHAR(50), -- 口味\n  是否是四大菜系 VARCHAR(50), -- 是否是四大菜系\n  是否是八大菜系 VARCHAR(50), -- 是否是八大菜系\n);\nCREATE TABLE 菜系分布城市 (\n  菜系id INTEGER PRIMARY KEY, -- 菜系id\n  城市 VARCHAR(50), -- 城市\n  受欢迎程度 INTEGER, -- 受欢迎程度\n  主要餐厅数量 INTEGER, -- 主要餐厅数量\n  分布密度 INTEGER, -- 分布密度\n  版本类型 VARCHAR(50), -- 版本类型\n);\nCREATE TABLE 菜品 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  起源地 VARCHAR(50), -- 起源地\n  版本数量 INTEGER, -- 版本数量\n  排名 INTEGER, -- 排名\n);\nCREATE TABLE 菜品对应菜系 (\n  菜品id INTEGER PRIMARY KEY, -- 菜品id\n  菜系id INTEGER, -- 菜系id\n  口味 VARCHAR(50), -- 口味\n);\n-- 菜品对应菜系.菜系id can be joined with 菜系.菜系\n-- 菜系分布城市.菜系id can be joined with 菜系.菜系\n-- 菜品对应菜系.菜品id can be joined with 菜品.菜品", "columns_en": {"词条id": "词条id", "名称": "名称", "起源地区": "起源地区", "起源时间": "起源时间", "口味": "口味", "是否是四大菜系": "是否是四大菜系", "是否是八大菜系": "是否是八大菜系", "菜系id": "菜系id", "城市": "城市", "受欢迎程度": "受欢迎程度", "主要餐厅数量": "主要餐厅数量", "分布密度": "分布密度", "版本类型": "版本类型", "起源地": "起源地", "版本数量": "版本数量", "排名": "排名", "菜品id": "菜品id"}, "table_en": {"菜系": "菜系", "菜系分布城市": "菜系分布城市", "菜品": "菜品", "菜品对应菜系": "菜品对应菜系"}}, "智能音箱": {"sqlite": "CREATE TABLE 公司 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  所属国家 VARCHAR(50), -- 所属国家\n  智能音箱款数 INTEGER, -- 智能音箱款数\n  排名 INTEGER, -- 排名\n);\nCREATE TABLE 音箱产品 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  所属公司id INTEGER, -- 所属公司id\n  售价 INTEGER, -- 售价\n  排名 INTEGER, -- 排名\n  上升名次 INTEGER, -- 上升名次\n);\nCREATE TABLE 产品销售 (\n  产品id INTEGER PRIMARY KEY, -- 产品id\n  季度 VARCHAR(50), -- 季度\n  销售量 INTEGER, -- 销售量\n  销售量增长 INTEGER, -- 销售量增长\n);\n-- 音箱产品.所属公司id can be joined with 公司.公司\n-- 产品销售.产品id can be joined with 音箱产品.音箱产品", "columns_en": {"词条id": "词条id", "名称": "名称", "所属国家": "所属国家", "智能音箱款数": "智能音箱款数", "排名": "排名", "所属公司id": "所属公司id", "售价": "售价", "上升名次": "上升名次", "产品id": "产品id", "季度": "季度", "销售量": "销售量", "销售量增长": "销售量增长"}, "table_en": {"公司": "公司", "音箱产品": "音箱产品", "产品销售": "产品销售"}}, "各学校假期": {"sqlite": "CREATE TABLE 各省中小学假期 (\n  省份 VARCHAR(50) PRIMARY KEY, -- 省份\n  年级 VARCHAR(50), -- 年级\n  寒假天数 INTEGER, -- 寒假天数\n  暑假天数 INTEGER, -- 暑假天数\n);\nCREATE TABLE 大学假期 (\n  学校 VARCHAR(50) PRIMARY KEY, -- 学校\n  所属省份 VARCHAR(50), -- 所属省份\n  寒假天数 INTEGER, -- 寒假天数\n  暑假天数 INTEGER, -- 暑假天数\n);\n", "columns_en": {"省份": "省份", "年级": "年级", "寒假天数": "寒假天数", "暑假天数": "暑假天数", "学校": "学校", "所属省份": "所属省份"}, "table_en": {"各省中小学假期": "各省中小学假期", "大学假期": "大学假期"}}, "建筑类奖项": {"sqlite": "CREATE TABLE 建筑奖项 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  发起时间 DATETIME, -- 发起时间\n  发起人 VARCHAR(50), -- 发起人\n  称号 VARCHAR(50), -- 称号\n  总奖金 INTEGER, -- 总奖金\n  评选间隔年数 INTEGER, -- 评选间隔年数\n  举办届数 INTEGER, -- 举办届数\n);\nCREATE TABLE 建筑奖各国名单 (\n  奖项id INTEGER PRIMARY KEY, -- 奖项id\n  国家 VARCHAR(50), -- 国家\n  数量 INTEGER, -- 数量\n);\nCREATE TABLE 建筑师 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  姓名 VARCHAR(50), -- 姓名\n  国籍 VARCHAR(50), -- 国籍\n  毕业院校 VARCHAR(50), -- 毕业院校\n  作品数量 INTEGER, -- 作品数量\n);\nCREATE TABLE 普利兹克奖获奖名单 (\n  年份 DATETIME PRIMARY KEY, -- 年份\n  届数 INTEGER, -- 届数\n  获奖人id VARCHAR(50), -- 获奖人id\n  国籍 VARCHAR(50), -- 国籍\n);\nCREATE TABLE 阿卡汗建筑奖获奖名单 (\n  届数 INTEGER PRIMARY KEY, -- 届数\n  获奖建筑名称 VARCHAR(50), -- 获奖建筑名称\n  位于城市 VARCHAR(50), -- 位于城市\n  位于国家 VARCHAR(50), -- 位于国家\n  设计者id INTEGER, -- 设计者id\n);\n-- 建筑奖各国名单.奖项id can be joined with 建筑奖项.建筑奖项\n-- 普利兹克奖获奖名单.获奖人id can be joined with 建筑师.建筑师\n-- 阿卡汗建筑奖获奖名单.设计者id can be joined with 建筑师.建筑师", "columns_en": {"词条id": "词条id", "名称": "名称", "发起时间": "发起时间", "发起人": "发起人", "称号": "称号", "总奖金": "总奖金", "评选间隔年数": "评选间隔年数", "举办届数": "举办届数", "奖项id": "奖项id", "国家": "国家", "数量": "数量", "姓名": "姓名", "国籍": "国籍", "毕业院校": "毕业院校", "作品数量": "作品数量", "年份": "年份", "届数": "届数", "获奖人id": "获奖人id", "获奖建筑名称": "获奖建筑名称", "位于城市": "位于城市", "位于国家": "位于国家", "设计者id": "设计者id"}, "table_en": {"建筑奖项": "建筑奖项", "建筑奖各国名单": "建筑奖各国名单", "建筑师": "建筑师", "普利兹克奖获奖名单": "普利兹克奖获奖名单", "阿卡汗建筑奖获奖名单": "阿卡汗建筑奖获奖名单"}}, "足球欧洲杯": {"sqlite": "CREATE TABLE 足球运动员 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  中文名 VARCHAR(50), -- 中文名\n  国籍 VARCHAR(50), -- 国籍\n  出生地 VARCHAR(50), -- 出生地\n  出生日期 DATETIME, -- 出生日期\n  身高 INTEGER, -- 身高\n  体重 INTEGER, -- 体重\n  专业特点 VARCHAR(50), -- 专业特点\n  场上位置 VARCHAR(50), -- 场上位置\n  惯用脚 VARCHAR(50), -- 惯用脚\n);\nCREATE TABLE 欧冠赛事 (\n  赛季 INTEGER PRIMARY KEY, -- 赛季\n  球员id INTEGER, -- 球员id\n  所属球队 VARCHAR(50), -- 所属球队\n  出场次数 INTEGER, -- 出场次数\n  进球次数 INTEGER, -- 进球次数\n  助攻次数 INTEGER, -- 助攻次数\n);\nCREATE TABLE 欧冠最佳球员 (\n  届数 INTEGER PRIMARY KEY, -- 届数\n  年份 DATETIME, -- 年份\n  最佳球员id INTEGER, -- 最佳球员id\n  国家 VARCHAR(50), -- 国家\n  场上位置 VARCHAR(50), -- 场上位置\n  球队成绩 VARCHAR(50), -- 球队成绩\n);\nCREATE TABLE 欧冠最佳射手 (\n  届数 INTEGER PRIMARY KEY, -- 届数\n  年份 DATETIME, -- 年份\n  最佳射手id INTEGER, -- 最佳射手id\n  国家 VARCHAR(50), -- 国家\n  场上位置 VARCHAR(50), -- 场上位置\n  进球数 INTEGER, -- 进球数\n);\nCREATE TABLE 运动员欧冠出场次数 (\n  名次 INTEGER PRIMARY KEY, -- 名次\n  出场次数 INTEGER, -- 出场次数\n  运动员id INTEGER, -- 运动员id\n  国家 VARCHAR(50), -- 国家\n  场上位置 VARCHAR(50), -- 场上位置\n);\n-- 欧冠最佳球员.最佳球员id can be joined with 足球运动员.足球运动员\n-- 欧冠最佳射手.最佳射手id can be joined with 足球运动员.足球运动员\n-- 运动员欧冠出场次数.运动员id can be joined with 足球运动员.足球运动员\n-- 欧冠赛事.球员id can be joined with 足球运动员.足球运动员", "columns_en": {"词条id": "词条id", "中文名": "中文名", "国籍": "国籍", "出生地": "出生地", "出生日期": "出生日期", "身高": "身高", "体重": "体重", "专业特点": "专业特点", "场上位置": "场上位置", "惯用脚": "惯用脚", "赛季": "赛季", "球员id": "球员id", "所属球队": "所属球队", "出场次数": "出场次数", "进球次数": "进球次数", "助攻次数": "助攻次数", "届数": "届数", "年份": "年份", "最佳球员id": "最佳球员id", "国家": "国家", "球队成绩": "球队成绩", "最佳射手id": "最佳射手id", "进球数": "进球数", "名次": "名次", "运动员id": "运动员id"}, "table_en": {"足球运动员": "足球运动员", "欧冠赛事": "欧冠赛事", "欧冠最佳球员": "欧冠最佳球员", "欧冠最佳射手": "欧冠最佳射手", "运动员欧冠出场次数": "运动员欧冠出场次数"}}, "中国民族": {"sqlite": "CREATE TABLE 民族 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  人口 INTEGER, -- 人口\n  语言 VARCHAR(50), -- 语言\n  宗教信仰 VARCHAR(50), -- 宗教信仰\n);\nCREATE TABLE 民族城市 (\n  民族id INTEGER PRIMARY KEY, -- 民族id\n  城市名称 VARCHAR(50), -- 城市名称\n  人口 INTEGER, -- 人口\n  比例 INTEGER, -- 比例\n);\nCREATE TABLE 民俗节日 (\n  节日 VARCHAR(50) PRIMARY KEY, -- 节日\n  民族id INTEGER, -- 民族id\n  时间 DATETIME, -- 时间\n  纪念 VARCHAR(50), -- 纪念\n);\n-- 民俗节日.民族id can be joined with 民族.民族\n-- 民族城市.民族id can be joined with 民族.民族", "columns_en": {"词条id": "词条id", "名称": "名称", "人口": "人口", "语言": "语言", "宗教信仰": "宗教信仰", "民族id": "民族id", "城市名称": "城市名称", "比例": "比例", "节日": "节日", "时间": "时间", "纪念": "纪念"}, "table_en": {"民族": "民族", "民族城市": "民族城市", "民俗节日": "民俗节日"}}, "医美APP": {"sqlite": "CREATE TABLE 医美APP (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  认知度排名 INTEGER, -- 认知度排名\n  市场占有率 INTEGER, -- 市场占有率\n  入驻的医疗美容机构数量 INTEGER, -- 入驻的医疗美容机构数量\n);\nCREATE TABLE 美容产品 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  国家 VARCHAR(50), -- 国家\n  认知度 INTEGER, -- 认知度\n);\nCREATE TABLE 各国美容市场 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  国家 VARCHAR(50), -- 国家\n  美容渗透率 INTEGER, -- 美容渗透率\n  美容医生数量 INTEGER, -- 美容医生数量\n  美容产品数量 INTEGER, -- 美容产品数量\n  整容项目数 INTEGER, -- 整容项目数\n);\nCREATE TABLE 整容人员年龄 (\n  国家id INTEGER PRIMARY KEY, -- 国家id\n  性别 VARCHAR(50), -- 性别\n  年龄段 VARCHAR(50), -- 年龄段\n  美容渗透率 INTEGER, -- 美容渗透率\n  整容意向人群占比 INTEGER, -- 整容意向人群占比\n  整容人数 INTEGER, -- 整容人数\n  消费金额 INTEGER, -- 消费金额\n);\nCREATE TABLE 各类美容形式分布 (\n  年份 DATETIME PRIMARY KEY, -- 年份\n  国家id INTEGER, -- 国家id\n  手术整容占比 INTEGER, -- 手术整容占比\n  手术需求增长率 INTEGER, -- 手术需求增长率\n  微整形占比 INTEGER, -- 微整形占比\n  微整形需求增长率 INTEGER, -- 微整形需求增长率\n);\nCREATE TABLE 中国美容关注 (\n  平台 VARCHAR(50) PRIMARY KEY, -- 平台\n  发布文章数量 INTEGER, -- 发布文章数量\n  文章阅读人次 INTEGER, -- 文章阅读人次\n  科普视频数 INTEGER, -- 科普视频数\n  视频观看人次 INTEGER, -- 视频观看人次\n);\n-- 整容人员年龄.国家id can be joined with 各国美容市场.各国美容市场\n-- 各类美容形式分布.国家id can be joined with 各国美容市场.各国美容市场", "columns_en": {"词条id": "词条id", "名称": "名称", "认知度排名": "认知度排名", "市场占有率": "市场占有率", "入驻的医疗美容机构数量": "入驻的医疗美容机构数量", "国家": "国家", "认知度": "认知度", "美容渗透率": "美容渗透率", "美容医生数量": "美容医生数量", "美容产品数量": "美容产品数量", "整容项目数": "整容项目数", "国家id": "国家id", "性别": "性别", "年龄段": "年龄段", "整容意向人群占比": "整容意向人群占比", "整容人数": "整容人数", "消费金额": "消费金额", "年份": "年份", "手术整容占比": "手术整容占比", "手术需求增长率": "手术需求增长率", "微整形占比": "微整形占比", "微整形需求增长率": "微整形需求增长率", "平台": "平台", "发布文章数量": "发布文章数量", "文章阅读人次": "文章阅读人次", "科普视频数": "科普视频数", "视频观看人次": "视频观看人次"}, "table_en": {"医美APP": "医美APP", "美容产品": "美容产品", "各国美容市场": "各国美容市场", "整容人员年龄": "整容人员年龄", "各类美容形式分布": "各类美容形式分布", "中国美容关注": "中国美容关注"}}, "枪击事件": {"sqlite": "CREATE TABLE 国家 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  人口数量 INTEGER, -- 人口数量\n  民用枪支数 INTEGER, -- 民用枪支数\n  军用枪支数 INTEGER, -- 军用枪支数\n  每100人持有的民用枪支数 INTEGER, -- 每100人持有的民用枪支数\n);\nCREATE TABLE 枪击事件 (\n  年份 DATETIME PRIMARY KEY, -- 年份\n  国家id INTEGER, -- 国家id\n  枪击事件数量 INTEGER, -- 枪击事件数量\n  死亡人数 INTEGER, -- 死亡人数\n  受伤人数 INTEGER, -- 受伤人数\n);\nCREATE TABLE 美国近几年校园枪击事件 (\n  年份 DATETIME PRIMARY KEY, -- 年份\n  发生城市 VARCHAR(50), -- 发生城市\n  受影响学生数量 INTEGER, -- 受影响学生数量\n  伤亡人数 INTEGER, -- 伤亡人数\n  枪击者年龄 INTEGER, -- 枪击者年龄\n  枪击者国籍 VARCHAR(50), -- 枪击者国籍\n);\nCREATE TABLE 韩国自杀的娱乐明星 (\n  姓名 VARCHAR(50) PRIMARY KEY, -- 姓名\n  性别 VARCHAR(50), -- 性别\n  年龄 INTEGER, -- 年龄\n  死亡时间 DATETIME, -- 死亡时间\n  是否患抑郁症 BINARY, -- 是否患抑郁症\n);\n-- 枪击事件.国家id can be joined with 国家.国家", "columns_en": {"词条id": "词条id", "名称": "名称", "人口数量": "人口数量", "民用枪支数": "民用枪支数", "军用枪支数": "军用枪支数", "每100人持有的民用枪支数": "每100人持有的民用枪支数", "年份": "年份", "国家id": "国家id", "枪击事件数量": "枪击事件数量", "死亡人数": "死亡人数", "受伤人数": "受伤人数", "发生城市": "发生城市", "受影响学生数量": "受影响学生数量", "伤亡人数": "伤亡人数", "枪击者年龄": "枪击者年龄", "枪击者国籍": "枪击者国籍", "姓名": "姓名", "性别": "性别", "年龄": "年龄", "死亡时间": "死亡时间", "是否患抑郁症": "是否患抑郁症"}, "table_en": {"国家": "国家", "枪击事件": "枪击事件", "美国近几年校园枪击事件": "美国近几年校园枪击事件", "韩国自杀的娱乐明星": "韩国自杀的娱乐明星"}}, "冬季奥运会": {"sqlite": "CREATE TABLE 冬季奥运会 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  届数 INTEGER, -- 届数\n  举办城市 VARCHAR(50), -- 举办城市\n  举办国家 VARCHAR(50), -- 举办国家\n  时间 DATETIME, -- 时间\n  参赛国家数量 INTEGER, -- 参赛国家数量\n  比赛项目数量 INTEGER, -- 比赛项目数量\n  参赛运动员数量 INTEGER, -- 参赛运动员数量\n);\nCREATE TABLE 奥运会赞助商 (\n  赞助商名称 VARCHAR(50) PRIMARY KEY, -- 赞助商名称\n  奥运会id INTEGER, -- 奥运会id\n);\nCREATE TABLE 2018年奖牌榜 (\n  排名 INTEGER PRIMARY KEY, -- 排名\n  国家 VARCHAR(50), -- 国家\n  金牌数 INTEGER, -- 金牌数\n  银牌数 INTEGER, -- 银牌数\n  铜牌数 INTEGER, -- 铜牌数\n  奖牌总数 INTEGER, -- 奖牌总数\n);\n-- 奥运会赞助商.奥运会id can be joined with 冬季奥运会.冬季奥运会", "columns_en": {"词条id": "词条id", "名称": "名称", "届数": "届数", "举办城市": "举办城市", "举办国家": "举办国家", "时间": "时间", "参赛国家数量": "参赛国家数量", "比赛项目数量": "比赛项目数量", "参赛运动员数量": "参赛运动员数量", "赞助商名称": "赞助商名称", "奥运会id": "奥运会id", "排名": "排名", "国家": "国家", "金牌数": "金牌数", "银牌数": "银牌数", "铜牌数": "铜牌数", "奖牌总数": "奖牌总数"}, "table_en": {"冬季奥运会": "冬季奥运会", "奥运会赞助商": "奥运会赞助商", "2018年奖牌榜": "2018年奖牌榜"}}, "中国戏剧": {"sqlite": "CREATE TABLE 戏剧 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  非遗级别 VARCHAR(50), -- 非遗级别\n  发源地 VARCHAR(50), -- 发源地\n  起源时间 VARCHAR(50), -- 起源时间\n);\nCREATE TABLE 戏剧分布城市 (\n  戏剧id INTEGER PRIMARY KEY, -- 戏剧id\n  城市 VARCHAR(50), -- 城市\n  受欢迎热度 INTEGER, -- 受欢迎热度\n  戏迷数量 INTEGER, -- 戏迷数量\n  活动数量 INTEGER, -- 活动数量\n);\nCREATE TABLE 戏剧演出活动 (\n  活动名称 VARCHAR(50) PRIMARY KEY, -- 活动名称\n  戏剧id INTEGER, -- 戏剧id\n  城市 VARCHAR(50), -- 城市\n  演出时间 DATETIME, -- 演出时间\n  售出票数 INTEGER, -- 售出票数\n  最高票价 INTEGER, -- 最高票价\n  最低票价 INTEGER, -- 最低票价\n);\n-- 戏剧分布城市.戏剧id can be joined with 戏剧.戏剧\n-- 戏剧演出活动.戏剧id can be joined with 戏剧.戏剧", "columns_en": {"词条id": "词条id", "名称": "名称", "非遗级别": "非遗级别", "发源地": "发源地", "起源时间": "起源时间", "戏剧id": "戏剧id", "城市": "城市", "受欢迎热度": "受欢迎热度", "戏迷数量": "戏迷数量", "活动数量": "活动数量", "活动名称": "活动名称", "演出时间": "演出时间", "售出票数": "售出票数", "最高票价": "最高票价", "最低票价": "最低票价"}, "table_en": {"戏剧": "戏剧", "戏剧分布城市": "戏剧分布城市", "戏剧演出活动": "戏剧演出活动"}}, "NBA奖项": {"sqlite": "CREATE TABLE 篮球运动员 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  中文名 VARCHAR(50), -- 中文名\n  参加选秀年 DATETIME, -- 参加选秀年\n  是否状元 BINARY, -- 是否状元\n  获得球队 VARCHAR(50), -- 获得球队\n  毕业院校 VARCHAR(50), -- 毕业院校\n);\nCREATE TABLE MVP记录 (\n  赛季 INTEGER PRIMARY KEY, -- 赛季\n  球员id INTEGER, -- 球员id\n  国籍 VARCHAR(50), -- 国籍\n  所属球队 VARCHAR(50), -- 所属球队\n);\nCREATE TABLE 球队 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  中文队名 VARCHAR(50), -- 中文队名\n  赛区 VARCHAR(50), -- 赛区\n  所属联盟 VARCHAR(50), -- 所属联盟\n  夺冠次数 INTEGER, -- 夺冠次数\n);\nCREATE TABLE NBA总冠军 (\n  赛季 INTEGER PRIMARY KEY, -- 赛季\n  球队id INTEGER, -- 球队id\n  总教练 VARCHAR(50), -- 总教练\n);\n-- MVP记录.球员id can be joined with 篮球运动员.篮球运动员\n-- NBA总冠军.球队id can be joined with 球队.球队", "columns_en": {"词条id": "词条id", "中文名": "中文名", "参加选秀年": "参加选秀年", "是否状元": "是否状元", "获得球队": "获得球队", "毕业院校": "毕业院校", "赛季": "赛季", "球员id": "球员id", "国籍": "国籍", "所属球队": "所属球队", "中文队名": "中文队名", "赛区": "赛区", "所属联盟": "所属联盟", "夺冠次数": "夺冠次数", "球队id": "球队id", "总教练": "总教练"}, "table_en": {"篮球运动员": "篮球运动员", "MVP记录": "MVP记录", "球队": "球队", "NBA总冠军": "NBA总冠军"}}, "植物经济价值": {"sqlite": "CREATE TABLE 植物 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  学名 VARCHAR(50), -- 学名\n  观赏价值 BINARY, -- 观赏价值\n  药用价值 BINARY, -- 药用价值\n  实用价值 BINARY, -- 实用价值\n);\nCREATE TABLE 最贵的植物 (\n  植物id INTEGER PRIMARY KEY, -- 植物id\n  单株价值 INTEGER, -- 单株价值\n  培养时间 INTEGER, -- 培养时间\n  数量 INTEGER, -- 数量\n);\nCREATE TABLE 盆栽植物营收 (\n  植物id INTEGER PRIMARY KEY, -- 植物id\n  年份 DATETIME, -- 年份\n  种植面积 INTEGER, -- 种植面积\n  销售数量 INTEGER, -- 销售数量\n  销售金额 INTEGER, -- 销售金额\n  出口金额 INTEGER, -- 出口金额\n);\nCREATE TABLE 中国沙漠 (\n  词条id VARCHAR(50) PRIMARY KEY, -- 词条id\n  地区 DATETIME, -- 地区\n  沙漠面积 INTEGER, -- 沙漠面积\n  沙化面积 INTEGER, -- 沙化面积\n);\nCREATE TABLE 沙漠植物 (\n  植物id INTEGER PRIMARY KEY, -- 植物id\n  沙漠id INTEGER, -- 沙漠id\n  种植面积 INTEGER, -- 种植面积\n);\n-- 沙漠植物.植物id can be joined with 植物.植物\n-- 最贵的植物.植物id can be joined with 植物.植物\n-- 盆栽植物营收.植物id can be joined with 植物.植物\n-- 沙漠植物.沙漠id can be joined with 中国沙漠.中国沙漠", "columns_en": {"词条id": "词条id", "学名": "学名", "观赏价值": "观赏价值", "药用价值": "药用价值", "实用价值": "实用价值", "植物id": "植物id", "单株价值": "单株价值", "培养时间": "培养时间", "数量": "数量", "年份": "年份", "种植面积": "种植面积", "销售数量": "销售数量", "销售金额": "销售金额", "出口金额": "出口金额", "地区": "地区", "沙漠面积": "沙漠面积", "沙化面积": "沙化面积", "沙漠id": "沙漠id"}, "table_en": {"植物": "植物", "最贵的植物": "最贵的植物", "盆栽植物营收": "盆栽植物营收", "中国沙漠": "中国沙漠", "沙漠植物": "沙漠植物"}}, "X公司工资": {"sqlite": "CREATE TABLE 事业群 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  负责人 VARCHAR(50), -- 负责人\n  员工数量 INTEGER, -- 员工数量\n  目标营收 INTEGER, -- 目标营收\n  成本支出 INTEGER, -- 成本支出\n);\nCREATE TABLE 部门 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  部门名称 VARCHAR(50), -- 部门名称\n  职责 VARCHAR(50), -- 职责\n  所属群id INTEGER, -- 所属群id\n);\nCREATE TABLE 员工 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  姓名 VARCHAR(50), -- 姓名\n  职称 VARCHAR(50), -- 职称\n  薪资 INTEGER, -- 薪资\n  年龄 INTEGER, -- 年龄\n  工龄 INTEGER, -- 工龄\n  所属部门id INTEGER, -- 所属部门id\n);\nCREATE TABLE 部门人员 (\n  部门id INTEGER PRIMARY KEY, -- 部门id\n  年份 DATETIME, -- 年份\n  员工数量 INTEGER, -- 员工数量\n  离职人数 INTEGER, -- 离职人数\n  招聘人数 INTEGER, -- 招聘人数\n);\n-- 员工.所属部门id can be joined with 部门.部门\n-- 部门人员.部门id can be joined with 部门.部门\n-- 部门.所属群id can be joined with 事业群.事业群", "columns_en": {"词条id": "词条id", "名称": "名称", "负责人": "负责人", "员工数量": "员工数量", "目标营收": "目标营收", "成本支出": "成本支出", "部门名称": "部门名称", "职责": "职责", "所属群id": "所属群id", "姓名": "姓名", "职称": "职称", "薪资": "薪资", "年龄": "年龄", "工龄": "工龄", "所属部门id": "所属部门id", "部门id": "部门id", "年份": "年份", "离职人数": "离职人数", "招聘人数": "招聘人数"}, "table_en": {"事业群": "事业群", "部门": "部门", "员工": "员工", "部门人员": "部门人员"}}, "中国卫视频道": {"sqlite": "CREATE TABLE 电视台 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  开播时间 DATETIME, -- 开播时间\n  上线时间 DATETIME, -- 上线时间\n  隶属机构 VARCHAR(50), -- 隶属机构\n);\nCREATE TABLE 电视剧 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  出品时间 DATETIME, -- 出品时间\n  出品公司 VARCHAR(50), -- 出品公司\n  发行公司 VARCHAR(50), -- 发行公司\n  首播平台id INTEGER, -- 首播平台id\n);\nCREATE TABLE 电视剧收视 (\n  电视剧id INTEGER PRIMARY KEY, -- 电视剧id\n  平台id INTEGER, -- 平台id\n  时间段 VARCHAR(50), -- 时间段\n  收视率 INTEGER, -- 收视率\n);\n-- 电视剧.首播平台id can be joined with 电视台.电视台\n-- 电视剧收视.平台id can be joined with 电视台.电视台\n-- 电视剧收视.电视剧id can be joined with 电视剧.电视剧", "columns_en": {"词条id": "词条id", "名称": "名称", "开播时间": "开播时间", "上线时间": "上线时间", "隶属机构": "隶属机构", "出品时间": "出品时间", "出品公司": "出品公司", "发行公司": "发行公司", "首播平台id": "首播平台id", "电视剧id": "电视剧id", "平台id": "平台id", "时间段": "时间段", "收视率": "收视率"}, "table_en": {"电视台": "电视台", "电视剧": "电视剧", "电视剧收视": "电视剧收视"}}, "国家与宗教": {"sqlite": "CREATE TABLE 国家 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  时区 INTEGER, -- 时区\n  国家象征 VARCHAR(50), -- 国家象征\n);\nCREATE TABLE 宗教 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  创始人物 VARCHAR(50), -- 创始人物\n  创始地点 VARCHAR(50), -- 创始地点\n  宗教主张 VARCHAR(50), -- 宗教主张\n  教徒比例 INTEGER, -- 教徒比例\n);\nCREATE TABLE 各国宗教 (\n  宗教id INTEGER PRIMARY KEY, -- 宗教id\n  国家id INTEGER, -- 国家id\n  信仰人口 INTEGER, -- 信仰人口\n);\nCREATE TABLE 信教比例 (\n  月份 DATETIME PRIMARY KEY, -- 月份\n  国家id INTEGER, -- 国家id\n  比例 INTEGER, -- 比例\n);\n-- 信教比例.国家id can be joined with 国家.国家\n-- 各国宗教.国家id can be joined with 国家.国家\n-- 各国宗教.宗教id can be joined with 宗教.宗教", "columns_en": {"词条id": "词条id", "名称": "名称", "时区": "时区", "国家象征": "国家象征", "创始人物": "创始人物", "创始地点": "创始地点", "宗教主张": "宗教主张", "教徒比例": "教徒比例", "宗教id": "宗教id", "国家id": "国家id", "信仰人口": "信仰人口", "月份": "月份", "比例": "比例"}, "table_en": {"国家": "国家", "宗教": "宗教", "各国宗教": "各国宗教", "信教比例": "信教比例"}}, "体育明星商业活动": {"sqlite": "CREATE TABLE 品牌 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  品牌名 VARCHAR(50), -- 品牌名\n  成立时间 DATETIME, -- 成立时间\n  经营范围 VARCHAR(50), -- 经营范围\n  年销量 INTEGER, -- 年销量\n);\nCREATE TABLE 体育明星 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  中文名 VARCHAR(50), -- 中文名\n  国籍 VARCHAR(50), -- 国籍\n  创建品牌id INTEGER, -- 创建品牌id\n);\nCREATE TABLE 运动员的代言 (\n  明星id INTEGER PRIMARY KEY, -- 明星id\n  代言品牌id INTEGER, -- 代言品牌id\n  年份 DATETIME, -- 年份\n  代言费 INTEGER, -- 代言费\n);\n-- 运动员的代言.代言品牌id can be joined with 品牌.品牌\n-- 运动员的代言.明星id can be joined with 体育明星.体育明星\n-- 体育明星.创建品牌id can be joined with 品牌.品牌", "columns_en": {"词条id": "词条id", "品牌名": "品牌名", "成立时间": "成立时间", "经营范围": "经营范围", "年销量": "年销量", "中文名": "中文名", "国籍": "国籍", "创建品牌id": "创建品牌id", "明星id": "明星id", "代言品牌id": "代言品牌id", "年份": "年份", "代言费": "代言费"}, "table_en": {"品牌": "品牌", "体育明星": "体育明星", "运动员的代言": "运动员的代言"}}, "中国CBA": {"sqlite": "CREATE TABLE 篮球队 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  队名 VARCHAR(50), -- 队名\n  所属地区 VARCHAR(50), -- 所属地区\n  成立时间 DATETIME, -- 成立时间\n  主场馆 VARCHAR(50), -- 主场馆\n  容纳人数 INTEGER, -- 容纳人数\n  主教练 VARCHAR(50), -- 主教练\n  赞助商家 VARCHAR(50), -- 赞助商家\n);\nCREATE TABLE 篮球运动员 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  姓名 VARCHAR(50), -- 姓名\n  国籍 VARCHAR(50), -- 国籍\n  民族 VARCHAR(50), -- 民族\n  出生地 VARCHAR(50), -- 出生地\n  出生日期 DATETIME, -- 出生日期\n  身高 INTEGER, -- 身高\n  体重 INTEGER, -- 体重\n  所属球队id INTEGER, -- 所属球队id\n  场上位置 VARCHAR(50), -- 场上位置\n);\nCREATE TABLE 运动员赛事记录 (\n  球员id INTEGER PRIMARY KEY, -- 球员id\n  赛事 VARCHAR(50), -- 赛事\n  类别 VARCHAR(50), -- 类别\n);\nCREATE TABLE CBA总冠军 (\n  赛季 INTEGER PRIMARY KEY, -- 赛季\n  冠军球队id INTEGER, -- 冠军球队id\n  亚军球队id INTEGER, -- 亚军球队id\n);\nCREATE TABLE 最有价值球员 (\n  赛季 INTEGER PRIMARY KEY, -- 赛季\n  球员id INTEGER, -- 球员id\n  球队id INTEGER, -- 球队id\n);\n-- 运动员赛事记录.球员id can be joined with 篮球运动员.篮球运动员\n-- CBA总冠军.冠军球队id can be joined with 篮球队.篮球队\n-- 篮球运动员.所属球队id can be joined with 篮球队.篮球队\n-- CBA总冠军.亚军球队id can be joined with 篮球队.篮球队\n-- 最有价值球员.球员id can be joined with 篮球运动员.篮球运动员\n-- 最有价值球员.球队id can be joined with 篮球队.篮球队", "columns_en": {"词条id": "词条id", "队名": "队名", "所属地区": "所属地区", "成立时间": "成立时间", "主场馆": "主场馆", "容纳人数": "容纳人数", "主教练": "主教练", "赞助商家": "赞助商家", "姓名": "姓名", "国籍": "国籍", "民族": "民族", "出生地": "出生地", "出生日期": "出生日期", "身高": "身高", "体重": "体重", "所属球队id": "所属球队id", "场上位置": "场上位置", "球员id": "球员id", "赛事": "赛事", "类别": "类别", "赛季": "赛季", "冠军球队id": "冠军球队id", "亚军球队id": "亚军球队id", "球队id": "球队id"}, "table_en": {"篮球队": "篮球队", "篮球运动员": "篮球运动员", "运动员赛事记录": "运动员赛事记录", "CBA总冠军": "CBA总冠军", "最有价值球员": "最有价值球员"}}, "笔记本电脑": {"sqlite": "CREATE TABLE 笔记本公司 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  创始人 VARCHAR(50), -- 创始人\n  所属国家 VARCHAR(50), -- 所属国家\n  世界500强排名 INTEGER, -- 世界500强排名\n);\nCREATE TABLE 笔记本产品 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  代言人 VARCHAR(50), -- 代言人\n  公司id INTEGER, -- 公司id\n);\nCREATE TABLE 笔记本型号系列 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  屏幕尺寸 INTEGER, -- 屏幕尺寸\n  分辨率 INTEGER, -- 分辨率\n  内存容量 INTEGER, -- 内存容量\n  硬盘容量 INTEGER, -- 硬盘容量\n  CPU主频 INTEGER, -- CPU主频\n  CPU型号 VARCHAR(50), -- CPU型号\n  售价 INTEGER, -- 售价\n  上市时间 DATETIME, -- 上市时间\n  产品id INTEGER, -- 产品id\n);\nCREATE TABLE 笔记本型号平台售卖 (\n  型号id INTEGER PRIMARY KEY, -- 型号id\n  平台 VARCHAR(50), -- 平台\n  售卖量 INTEGER, -- 售卖量\n  评分 INTEGER, -- 评分\n  最好评价 DATETIME, -- 最好评价\n  最差评价 VARCHAR(50), -- 最差评价\n);\n-- 笔记本型号平台售卖.型号id can be joined with 笔记本型号系列.笔记本型号系列\n-- 笔记本型号系列.产品id can be joined with 笔记本产品.笔记本产品\n-- 笔记本产品.公司id can be joined with 笔记本公司.笔记本公司", "columns_en": {"词条id": "词条id", "名称": "名称", "创始人": "创始人", "所属国家": "所属国家", "世界500强排名": "世界500强排名", "代言人": "代言人", "公司id": "公司id", "屏幕尺寸": "屏幕尺寸", "分辨率": "分辨率", "内存容量": "内存容量", "硬盘容量": "硬盘容量", "CPU主频": "CPU主频", "CPU型号": "CPU型号", "售价": "售价", "上市时间": "上市时间", "产品id": "产品id", "型号id": "型号id", "平台": "平台", "售卖量": "售卖量", "评分": "评分", "最好评价": "最好评价", "最差评价": "最差评价"}, "table_en": {"笔记本公司": "笔记本公司", "笔记本产品": "笔记本产品", "笔记本型号系列": "笔记本型号系列", "笔记本型号平台售卖": "笔记本型号平台售卖"}}, "打车软件": {"sqlite": "CREATE TABLE 打车APP (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  app名称 VARCHAR(50), -- app名称\n  所属公司 VARCHAR(50), -- 所属公司\n  上线时间 DATETIME, -- 上线时间\n  覆盖城市数 INTEGER, -- 覆盖城市数\n  服务用户数量 INTEGER, -- 服务用户数量\n);\nCREATE TABLE 打车方式 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  理念 VARCHAR(50), -- 理念\n  每公里价格 INTEGER, -- 每公里价格\n);\nCREATE TABLE 各打车APP支持的方式 (\n  appid INTEGER PRIMARY KEY, -- appid\n  方式id INTEGER, -- 方式id\n  车数量 INTEGER, -- 车数量\n  每日打车单数 INTEGER, -- 每日打车单数\n  每日营收 INTEGER, -- 每日营收\n  市场份额 INTEGER, -- 市场份额\n);\nCREATE TABLE 打车软件开通城市 (\n  appid INTEGER PRIMARY KEY, -- appid\n  城市 VARCHAR(50), -- 城市\n  开通时间 DATETIME, -- 开通时间\n  占所在城市份额 INTEGER, -- 占所在城市份额\n);\nCREATE TABLE 软件对租车的支持 (\n  appid INTEGER PRIMARY KEY, -- appid\n  城市 VARCHAR(50), -- 城市\n  是否支持租车 BINARY, -- 是否支持租车\n  是否支持异地还车 BINARY, -- 是否支持异地还车\n);\n-- 各打车APP支持的方式.方式id can be joined with 打车方式.打车方式", "columns_en": {"词条id": "词条id", "app名称": "app名称", "所属公司": "所属公司", "上线时间": "上线时间", "覆盖城市数": "覆盖城市数", "服务用户数量": "服务用户数量", "名称": "名称", "理念": "理念", "每公里价格": "每公里价格", "appid": "appid", "方式id": "方式id", "车数量": "车数量", "每日打车单数": "每日打车单数", "每日营收": "每日营收", "市场份额": "市场份额", "城市": "城市", "开通时间": "开通时间", "占所在城市份额": "占所在城市份额", "是否支持租车": "是否支持租车", "是否支持异地还车": "是否支持异地还车"}, "table_en": {"打车APP": "打车APP", "打车方式": "打车方式", "各打车APP支持的方式": "各打车APP支持的方式", "打车软件开通城市": "打车软件开通城市", "软件对租车的支持": "软件对租车的支持"}}, "奥斯卡金像奖": {"sqlite": "CREATE TABLE 电影作品 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  影片名 VARCHAR(50), -- 影片名\n  导演 VARCHAR(50), -- 导演\n  国家 VARCHAR(50), -- 国家\n  提名次数 INTEGER, -- 提名次数\n  获奖次数 INTEGER, -- 获奖次数\n);\nCREATE TABLE 获奖国家名单 (\n  年份 INTEGER PRIMARY KEY, -- 年份\n  影片拍摄国家 VARCHAR(50), -- 影片拍摄国家\n  获奖次数 INTEGER, -- 获奖次数\n);\nCREATE TABLE 各演员获奖次数 (\n  姓名 VARCHAR(50) PRIMARY KEY, -- 姓名\n  奖项 VARCHAR(50), -- 奖项\n  提名次数 INTEGER, -- 提名次数\n  获奖次数 INTEGER, -- 获奖次数\n);\nCREATE TABLE 历届帝后影后名单 (\n  年份 DATETIME PRIMARY KEY, -- 年份\n  帝后姓名 VARCHAR(50), -- 帝后姓名\n  帝后来自作品id INTEGER, -- 帝后来自作品id\n  影后姓名 VARCHAR(50), -- 影后姓名\n  影后来自作品id INTEGER, -- 影后来自作品id\n);\n-- 历届帝后影后名单.影后来自作品id can be joined with 电影作品.电影作品\n-- 历届帝后影后名单.帝后来自作品id can be joined with 电影作品.电影作品", "columns_en": {"词条id": "词条id", "影片名": "影片名", "导演": "导演", "国家": "国家", "提名次数": "提名次数", "获奖次数": "获奖次数", "年份": "年份", "影片拍摄国家": "影片拍摄国家", "姓名": "姓名", "奖项": "奖项", "帝后姓名": "帝后姓名", "帝后来自作品id": "帝后来自作品id", "影后姓名": "影后姓名", "影后来自作品id": "影后来自作品id"}, "table_en": {"电影作品": "电影作品", "获奖国家名单": "获奖国家名单", "各演员获奖次数": "各演员获奖次数", "历届帝后影后名单": "历届帝后影后名单"}}, "游泳比赛": {"sqlite": "CREATE TABLE 游泳泳姿 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  发明时间 DATETIME, -- 发明时间\n  加入奥运会时间 DATETIME, -- 加入奥运会时间\n);\nCREATE TABLE 各泳姿参赛项目 (\n  泳姿id INTEGER PRIMARY KEY, -- 泳姿id\n  50米 BINARY, -- 50米\n  100米 BINARY, -- 100米\n  200米 BINARY, -- 200米\n  400米 BINARY, -- 400米\n  800米 BINARY, -- 800米\n  1500米 BINARY, -- 1500米\n  5000米 BINARY, -- 5000米\n  10000米 BINARY, -- 10000米\n  赛事 VARCHAR(50), -- 赛事\n);\nCREATE TABLE 泳坛名将 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  姓名 VARCHAR(50), -- 姓名\n  性别 VARCHAR(50), -- 性别\n  国籍 VARCHAR(50), -- 国籍\n  身高 INTEGER, -- 身高\n  体重 INTEGER, -- 体重\n  专业特点id INTEGER, -- 专业特点id\n);\nCREATE TABLE 赛事记录 (\n  泳姿id INTEGER PRIMARY KEY, -- 泳姿id\n  长度 INTEGER, -- 长度\n  赛事类型 VARCHAR(50), -- 赛事类型\n  运动员id INTEGER, -- 运动员id\n  用时 INTEGER, -- 用时\n  破记录年份 DATETIME, -- 破记录年份\n);\n-- 各泳姿参赛项目.泳姿id can be joined with 游泳泳姿.游泳泳姿\n-- 泳坛名将.专业特点id can be joined with 游泳泳姿.游泳泳姿\n-- 赛事记录.泳姿id can be joined with 游泳泳姿.游泳泳姿\n-- 赛事记录.运动员id can be joined with 泳坛名将.泳坛名将", "columns_en": {"词条id": "词条id", "名称": "名称", "发明时间": "发明时间", "加入奥运会时间": "加入奥运会时间", "泳姿id": "泳姿id", "50米": "50米", "100米": "100米", "200米": "200米", "400米": "400米", "800米": "800米", "1500米": "1500米", "5000米": "5000米", "10000米": "10000米", "赛事": "赛事", "姓名": "姓名", "性别": "性别", "国籍": "国籍", "身高": "身高", "体重": "体重", "专业特点id": "专业特点id", "长度": "长度", "赛事类型": "赛事类型", "运动员id": "运动员id", "用时": "用时", "破记录年份": "破记录年份"}, "table_en": {"游泳泳姿": "游泳泳姿", "各泳姿参赛项目": "各泳姿参赛项目", "泳坛名将": "泳坛名将", "赛事记录": "赛事记录"}}, "赛事运动项目": {"sqlite": "CREATE TABLE 运动项目 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  起源国家 VARCHAR(50), -- 起源国家\n  比赛形式 VARCHAR(50), -- 比赛形式\n  比赛人数 INTEGER, -- 比赛人数\n  加入奥运会年份 DATETIME, -- 加入奥运会年份\n);\nCREATE TABLE 项目流行国家 (\n  项目id INTEGER PRIMARY KEY, -- 项目id\n  国家 VARCHAR(50), -- 国家\n  所获金牌总数 INTEGER, -- 所获金牌总数\n  所获奖牌总数 INTEGER, -- 所获奖牌总数\n);\nCREATE TABLE 运动项目奖牌数 (\n  项目id INTEGER PRIMARY KEY, -- 项目id\n  赛事类型 VARCHAR(50), -- 赛事类型\n  小项目总数 INTEGER, -- 小项目总数\n  奖牌总数 INTEGER, -- 奖牌总数\n);\n-- 运动项目奖牌数.项目id can be joined with 运动项目.运动项目\n-- 项目流行国家.项目id can be joined with 运动项目.运动项目", "columns_en": {"词条id": "词条id", "名称": "名称", "起源国家": "起源国家", "比赛形式": "比赛形式", "比赛人数": "比赛人数", "加入奥运会年份": "加入奥运会年份", "项目id": "项目id", "国家": "国家", "所获金牌总数": "所获金牌总数", "所获奖牌总数": "所获奖牌总数", "赛事类型": "赛事类型", "小项目总数": "小项目总数", "奖牌总数": "奖牌总数"}, "table_en": {"运动项目": "运动项目", "项目流行国家": "项目流行国家", "运动项目奖牌数": "运动项目奖牌数"}}, "房屋中介软件": {"sqlite": "CREATE TABLE 北京小区 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  所属区域 VARCHAR(50), -- 所属区域\n  楼栋数 INTEGER, -- 楼栋数\n  户数 INTEGER, -- 户数\n  周边小学数量 INTEGER, -- 周边小学数量\n  周边超市数量 INTEGER, -- 周边超市数量\n  周边医院数量 INTEGER, -- 周边医院数量\n);\nCREATE TABLE 小区各月成交量 (\n  小区id INTEGER PRIMARY KEY, -- 小区id\n  月份 VARCHAR(50), -- 月份\n  成交量 INTEGER, -- 成交量\n  成交量同比增长 INTEGER, -- 成交量同比增长\n  成交均价 INTEGER, -- 成交均价\n  成交价同比增长 INTEGER, -- 成交价同比增长\n);\nCREATE TABLE 成交房屋 (\n  房屋编号id INTEGER PRIMARY KEY, -- 房屋编号id\n  建筑面积 INTEGER, -- 建筑面积\n  使用面积 INTEGER, -- 使用面积\n  卧室数量 INTEGER, -- 卧室数量\n  厅数量 INTEGER, -- 厅数量\n  总价 INTEGER, -- 总价\n  单价 INTEGER, -- 单价\n  所属小区id INTEGER, -- 所属小区id\n);\nCREATE TABLE 房屋中介 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  门店数量 INTEGER, -- 门店数量\n  房屋经纪人数量 INTEGER, -- 房屋经纪人数量\n  覆盖城市数量 INTEGER, -- 覆盖城市数量\n  购房成交总量 INTEGER, -- 购房成交总量\n  租房成交总量 INTEGER, -- 租房成交总量\n  成交排名 INTEGER, -- 成交排名\n  评分 INTEGER, -- 评分\n);\nCREATE TABLE 中介成交 (\n  中介id INTEGER PRIMARY KEY, -- 中介id\n  小区id INTEGER, -- 小区id\n  年份 DATETIME, -- 年份\n  购房成交量 INTEGER, -- 购房成交量\n  成交量占比 INTEGER, -- 成交量占比\n);\n-- 中介成交.小区id can be joined with 北京小区.北京小区\n-- 中介成交.中介id can be joined with 房屋中介.房屋中介\n-- 小区各月成交量.小区id can be joined with 北京小区.北京小区\n-- 成交房屋.所属小区id can be joined with 北京小区.北京小区", "columns_en": {"词条id": "词条id", "名称": "名称", "所属区域": "所属区域", "楼栋数": "楼栋数", "户数": "户数", "周边小学数量": "周边小学数量", "周边超市数量": "周边超市数量", "周边医院数量": "周边医院数量", "小区id": "小区id", "月份": "月份", "成交量": "成交量", "成交量同比增长": "成交量同比增长", "成交均价": "成交均价", "成交价同比增长": "成交价同比增长", "房屋编号id": "房屋编号id", "建筑面积": "建筑面积", "使用面积": "使用面积", "卧室数量": "卧室数量", "厅数量": "厅数量", "总价": "总价", "单价": "单价", "所属小区id": "所属小区id", "门店数量": "门店数量", "房屋经纪人数量": "房屋经纪人数量", "覆盖城市数量": "覆盖城市数量", "购房成交总量": "购房成交总量", "租房成交总量": "租房成交总量", "成交排名": "成交排名", "评分": "评分", "中介id": "中介id", "年份": "年份", "购房成交量": "购房成交量", "成交量占比": "成交量占比"}, "table_en": {"北京小区": "北京小区", "小区各月成交量": "小区各月成交量", "成交房屋": "成交房屋", "房屋中介": "房屋中介", "中介成交": "中介成交"}}, "古代人物": {"sqlite": "CREATE TABLE 皇帝 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  姓名 VARCHAR(50), -- 姓名\n  年号 VARCHAR(50), -- 年号\n  所处朝代 VARCHAR(50), -- 所处朝代\n  子女数量 INTEGER, -- 子女数量\n  皇后数量 INTEGER, -- 皇后数量\n  妃子数量 INTEGER, -- 妃子数量\n);\nCREATE TABLE 皇后和妃子 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  谥号 VARCHAR(50), -- 谥号\n  夫君id INTEGER, -- 夫君id\n  年龄 INTEGER, -- 年龄\n  皇子数量 INTEGER, -- 皇子数量\n  公主数量 INTEGER, -- 公主数量\n);\nCREATE TABLE 皇帝皇后合葬 (\n  皇帝id INTEGER PRIMARY KEY, -- 皇帝id\n  皇后id INTEGER, -- 皇后id\n  葬地 VARCHAR(50), -- 葬地\n);\nCREATE TABLE 皇帝皇后影视形象 (\n  作品 VARCHAR(50) PRIMARY KEY, -- 作品\n  皇帝id INTEGER, -- 皇帝id\n  皇帝饰演者 VARCHAR(50), -- 皇帝饰演者\n  皇后id INTEGER, -- 皇后id\n  皇后饰演者 VARCHAR(50), -- 皇后饰演者\n);\n-- 皇帝皇后合葬.皇帝id can be joined with 皇帝.皇帝\n-- 皇帝皇后合葬.皇后id can be joined with 皇后和妃子.皇后和妃子\n-- 皇帝皇后影视形象.皇后id can be joined with 皇后和妃子.皇后和妃子\n-- 皇后和妃子.夫君id can be joined with 皇帝.皇帝\n-- 皇帝皇后影视形象.皇帝id can be joined with 皇帝.皇帝", "columns_en": {"词条id": "词条id", "姓名": "姓名", "年号": "年号", "所处朝代": "所处朝代", "子女数量": "子女数量", "皇后数量": "皇后数量", "妃子数量": "妃子数量", "谥号": "谥号", "夫君id": "夫君id", "年龄": "年龄", "皇子数量": "皇子数量", "公主数量": "公主数量", "皇帝id": "皇帝id", "皇后id": "皇后id", "葬地": "葬地", "作品": "作品", "皇帝饰演者": "皇帝饰演者", "皇后饰演者": "皇后饰演者"}, "table_en": {"皇帝": "皇帝", "皇后和妃子": "皇后和妃子", "皇帝皇后合葬": "皇帝皇后合葬", "皇帝皇后影视形象": "皇帝皇后影视形象"}}, "国庆假期旅游数据": {"sqlite": "CREATE TABLE 旅游消费 (\n  消费段 INTEGER PRIMARY KEY, -- 消费段\n  占比 INTEGER, -- 占比\n);\nCREATE TABLE 出游次数 (\n  出游数量段 INTEGER PRIMARY KEY, -- 出游数量段\n  占比 INTEGER, -- 占比\n);\nCREATE TABLE 旅游类型 (\n  景点类型 VARCHAR(50) PRIMARY KEY, -- 景点类型\n  占比 INTEGER, -- 占比\n);\nCREATE TABLE 出行交通方式 (\n  出行方式 VARCHAR(50) PRIMARY KEY, -- 出行方式\n  占比 INTEGER, -- 占比\n  同比增长 INTEGER, -- 同比增长\n);\nCREATE TABLE 旅游方式 (\n  旅游方式 VARCHAR(50) PRIMARY KEY, -- 旅游方式\n  占比 INTEGER, -- 占比\n);\nCREATE TABLE 各省旅游收入排名 (\n  省份 VARCHAR(50) PRIMARY KEY, -- 省份\n  游客(万人次) INTEGER, -- 游客(万人次)\n  旅游收入(亿元) INTEGER, -- 旅游收入(亿元)\n  排名 INTEGER, -- 排名\n);\n", "columns_en": {"消费段": "消费段", "占比": "占比", "出游数量段": "出游数量段", "景点类型": "景点类型", "出行方式": "出行方式", "同比增长": "同比增长", "旅游方式": "旅游方式", "省份": "省份", "游客(万人次)": "游客(万人次)", "旅游收入(亿元)": "旅游收入(亿元)", "排名": "排名"}, "table_en": {"旅游消费": "旅游消费", "出游次数": "出游次数", "旅游类型": "旅游类型", "出行交通方式": "出行交通方式", "旅游方式": "旅游方式", "各省旅游收入排名": "各省旅游收入排名"}}, "人物传记": {"sqlite": "CREATE TABLE 名人 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  姓名 VARCHAR(50), -- 姓名\n  国籍 VARCHAR(50), -- 国籍\n  职业 VARCHAR(50), -- 职业\n  主要成就 VARCHAR(50), -- 主要成就\n);\nCREATE TABLE 传记 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  书名 VARCHAR(50), -- 书名\n  作者 VARCHAR(50), -- 作者\n  页数 INTEGER, -- 页数\n  出版社 VARCHAR(50), -- 出版社\n  出版时间 DATETIME, -- 出版时间\n);\nCREATE TABLE 名人传记 (\n  传记id INTEGER PRIMARY KEY, -- 传记id\n  人物id INTEGER, -- 人物id\n  记录时间 VARCHAR(50), -- 记录时间\n);\n-- 名人传记.人物id can be joined with 名人.名人\n-- 名人传记.传记id can be joined with 传记.传记", "columns_en": {"词条id": "词条id", "姓名": "姓名", "国籍": "国籍", "职业": "职业", "主要成就": "主要成就", "书名": "书名", "作者": "作者", "页数": "页数", "出版社": "出版社", "出版时间": "出版时间", "传记id": "传记id", "人物id": "人物id", "记录时间": "记录时间"}, "table_en": {"名人": "名人", "传记": "传记", "名人传记": "名人传记"}}, "综艺节目": {"sqlite": "CREATE TABLE 综艺节目 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  节目名称 VARCHAR(50), -- 节目名称\n  系列名 VARCHAR(50), -- 系列名\n  导演 VARCHAR(50), -- 导演\n  首播时间 DATETIME, -- 首播时间\n  播出频道 VARCHAR(50), -- 播出频道\n  播出时间 DATETIME, -- 播出时间\n  期数 INTEGER, -- 期数\n  冠名商 VARCHAR(50), -- 冠名商\n);\nCREATE TABLE 明星 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  姓名 VARCHAR(50), -- 姓名\n  民族 VARCHAR(50), -- 民族\n  身高 INTEGER, -- 身高\n  体重 INTEGER, -- 体重\n  出生地 VARCHAR(50), -- 出生地\n  年龄 INTEGER, -- 年龄\n  职业 VARCHAR(50), -- 职业\n);\nCREATE TABLE 收视率 (\n  节目id INTEGER PRIMARY KEY, -- 节目id\n  在线平台 VARCHAR(50), -- 在线平台\n  播放数 INTEGER, -- 播放数\n  收视率 INTEGER, -- 收视率\n  收视份额 INTEGER, -- 收视份额\n);\nCREATE TABLE 接档节目 (\n  节目id INTEGER PRIMARY KEY, -- 节目id\n  接档节目id INTEGER, -- 接档节目id\n  被接档节目id INTEGER, -- 被接档节目id\n);\nCREATE TABLE 综艺节目嘉宾 (\n  明星id INTEGER PRIMARY KEY, -- 明星id\n  节目id INTEGER, -- 节目id\n  身份 VARCHAR(50), -- 身份\n  出场期数 INTEGER, -- 出场期数\n);\n-- 接档节目.被接档节目id can be joined with 综艺节目.综艺节目\n-- 收视率.节目id can be joined with 综艺节目.综艺节目\n-- 综艺节目嘉宾.明星id can be joined with 明星.明星\n-- 接档节目.节目id can be joined with 综艺节目.综艺节目\n-- 接档节目.接档节目id can be joined with 综艺节目.综艺节目\n-- 综艺节目嘉宾.节目id can be joined with 综艺节目.综艺节目", "columns_en": {"词条id": "词条id", "节目名称": "节目名称", "系列名": "系列名", "导演": "导演", "首播时间": "首播时间", "播出频道": "播出频道", "播出时间": "播出时间", "期数": "期数", "冠名商": "冠名商", "姓名": "姓名", "民族": "民族", "身高": "身高", "体重": "体重", "出生地": "出生地", "年龄": "年龄", "职业": "职业", "节目id": "节目id", "在线平台": "在线平台", "播放数": "播放数", "收视率": "收视率", "收视份额": "收视份额", "接档节目id": "接档节目id", "被接档节目id": "被接档节目id", "明星id": "明星id", "身份": "身份", "出场期数": "出场期数"}, "table_en": {"综艺节目": "综艺节目", "明星": "明星", "收视率": "收视率", "接档节目": "接档节目", "综艺节目嘉宾": "综艺节目嘉宾"}}, "中国城市体育活动": {"sqlite": "CREATE TABLE 城市 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  所属省份 VARCHAR(50), -- 所属省份\n  占地面积 INTEGER, -- 占地面积\n  体育馆数量 INTEGER, -- 体育馆数量\n);\nCREATE TABLE 运动会 (\n  举办城市id INTEGER PRIMARY KEY, -- 举办城市id\n  运动会类型 VARCHAR(50), -- 运动会类型\n  届数 INTEGER, -- 届数\n  年份 DATETIME, -- 年份\n  参赛运动员数量 INTEGER, -- 参赛运动员数量\n  项目数量 INTEGER, -- 项目数量\n  金牌数量 INTEGER, -- 金牌数量\n  奖牌数量 INTEGER, -- 奖牌数量\n);\n-- 运动会.举办城市id can be joined with 城市.城市", "columns_en": {"词条id": "词条id", "名称": "名称", "所属省份": "所属省份", "占地面积": "占地面积", "体育馆数量": "体育馆数量", "举办城市id": "举办城市id", "运动会类型": "运动会类型", "届数": "届数", "年份": "年份", "参赛运动员数量": "参赛运动员数量", "项目数量": "项目数量", "金牌数量": "金牌数量", "奖牌数量": "奖牌数量"}, "table_en": {"城市": "城市", "运动会": "运动会"}}, "北京小学": {"sqlite": "CREATE TABLE 北京学校 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  所属地区 VARCHAR(50), -- 所属地区\n  创办时间 DATETIME, -- 创办时间\n  类别 VARCHAR(50), -- 类别\n  学校人数 INTEGER, -- 学校人数\n  教职工人数 INTEGER, -- 教职工人数\n  教学班数量 INTEGER, -- 教学班数量\n);\nCREATE TABLE 小升初升学率 (\n  年份 DATETIME PRIMARY KEY, -- 年份\n  学校id INTEGER, -- 学校id\n  毕业人数 INTEGER, -- 毕业人数\n  重点中学升学率 INTEGER, -- 重点中学升学率\n  top10中学升学率 INTEGER, -- top10中学升学率\n);\nCREATE TABLE 教师 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  姓名 VARCHAR(50), -- 姓名\n  职称 VARCHAR(50), -- 职称\n  任教学校id INTEGER, -- 任教学校id\n);\nCREATE TABLE 分校 (\n  分校名称 VARCHAR(50) PRIMARY KEY, -- 分校名称\n  所属城市 VARCHAR(50), -- 所属城市\n  创办时间 DATETIME, -- 创办时间\n  学校id INTEGER, -- 学校id\n);\n-- 教师.任教学校id can be joined with 北京学校.北京学校\n-- 小升初升学率.学校id can be joined with 北京学校.北京学校\n-- 分校.学校id can be joined with 北京学校.北京学校", "columns_en": {"词条id": "词条id", "名称": "名称", "所属地区": "所属地区", "创办时间": "创办时间", "类别": "类别", "学校人数": "学校人数", "教职工人数": "教职工人数", "教学班数量": "教学班数量", "年份": "年份", "学校id": "学校id", "毕业人数": "毕业人数", "重点中学升学率": "重点中学升学率", "top10中学升学率": "top10中学升学率", "姓名": "姓名", "职称": "职称", "任教学校id": "任教学校id", "分校名称": "分校名称", "所属城市": "所属城市"}, "table_en": {"北京学校": "北京学校", "小升初升学率": "小升初升学率", "教师": "教师", "分校": "分校"}}, "在线学习平台": {"sqlite": "CREATE TABLE 学校 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  类型 VARCHAR(50), -- 类型\n  国家 VARCHAR(50), -- 国家\n  世界排名 INTEGER, -- 世界排名\n);\nCREATE TABLE 课程 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  所属专业 VARCHAR(50), -- 所属专业\n  适合学者类型 VARCHAR(50), -- 适合学者类型\n);\nCREATE TABLE 平台 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  课程数量 INTEGER, -- 课程数量\n  合作学校数量 INTEGER, -- 合作学校数量\n  是否免费 BINARY, -- 是否免费\n);\nCREATE TABLE 平台合作学校 (\n  平台id INTEGER PRIMARY KEY, -- 平台id\n  学校id INTEGER, -- 学校id\n  合作课程数量 INTEGER, -- 合作课程数量\n);\nCREATE TABLE 学校的开源课程 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  开源课程名称 VARCHAR(50), -- 开源课程名称\n  课程id INTEGER, -- 课程id\n  学校id INTEGER, -- 学校id\n  课时 INTEGER, -- 课时\n  主讲教师 VARCHAR(50), -- 主讲教师\n);\nCREATE TABLE 平台课程 (\n  开源课程id INTEGER PRIMARY KEY, -- 开源课程id\n  平台id INTEGER, -- 平台id\n  是否直播 BINARY, -- 是否直播\n  课程时长 INTEGER, -- 课程时长\n  价格 INTEGER, -- 价格\n);\n-- 学校的开源课程.课程id can be joined with 课程.课程\n-- 学校的开源课程.学校id can be joined with 学校.学校\n-- 平台课程.开源课程id can be joined with 学校的开源课程.学校的开源课程\n-- 平台课程.平台id can be joined with 平台.平台\n-- 平台合作学校.学校id can be joined with 学校.学校\n-- 平台合作学校.平台id can be joined with 平台.平台", "columns_en": {"词条id": "词条id", "名称": "名称", "类型": "类型", "国家": "国家", "世界排名": "世界排名", "所属专业": "所属专业", "适合学者类型": "适合学者类型", "课程数量": "课程数量", "合作学校数量": "合作学校数量", "是否免费": "是否免费", "平台id": "平台id", "学校id": "学校id", "合作课程数量": "合作课程数量", "开源课程名称": "开源课程名称", "课程id": "课程id", "课时": "课时", "主讲教师": "主讲教师", "开源课程id": "开源课程id", "是否直播": "是否直播", "课程时长": "课程时长", "价格": "价格"}, "table_en": {"学校": "学校", "课程": "课程", "平台": "平台", "平台合作学校": "平台合作学校", "学校的开源课程": "学校的开源课程", "平台课程": "平台课程"}}, "中国交通": {"sqlite": "CREATE TABLE 机场 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  机场类型 VARCHAR(50), -- 机场类型\n  地区管理 VARCHAR(50), -- 地区管理\n  航站楼面积 INTEGER, -- 航站楼面积\n  机位数量 INTEGER, -- 机位数量\n  客运航线 INTEGER, -- 客运航线\n  跑道长度 INTEGER, -- 跑道长度\n  省份 VARCHAR(50), -- 省份\n  通航日期 DATETIME, -- 通航日期\n);\nCREATE TABLE 火车站 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  投用日期 DATETIME, -- 投用日期\n  建筑面积 INTEGER, -- 建筑面积\n  站台规模 INTEGER, -- 站台规模\n  地址 VARCHAR(50), -- 地址\n  省份 VARCHAR(50), -- 省份\n  投用日期 DATETIME, -- 投用日期\n);\nCREATE TABLE 航空公司 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  公司名称 VARCHAR(50), -- 公司名称\n  总部地点 VARCHAR(50), -- 总部地点\n  成立时间 DATETIME, -- 成立时间\n  IATA代码 VARCHAR(50), -- IATA代码\n  ICAO代码 VARCHAR(50), -- ICAO代码\n  年营业额 INTEGER, -- 年营业额\n  员工数 INTEGER, -- 员工数\n);\nCREATE TABLE 航空公司入驻机场 (\n  航空公司id INTEGER PRIMARY KEY, -- 航空公司id\n  机场id INTEGER, -- 机场id\n  城市 VARCHAR(50), -- 城市\n  航点数 INTEGER, -- 航点数\n);\nCREATE TABLE 机场吞吐量 (\n  年份 DATETIME PRIMARY KEY, -- 年份\n  机场id INTEGER, -- 机场id\n  旅客吞吐量 INTEGER, -- 旅客吞吐量\n  客运航线数量 INTEGER, -- 客运航线数量\n);\n-- 航空公司入驻机场.机场id can be joined with 机场.机场\n-- 航空公司入驻机场.航空公司id can be joined with 航空公司.航空公司\n-- 机场吞吐量.机场id can be joined with 机场.机场", "columns_en": {"词条id": "词条id", "名称": "名称", "机场类型": "机场类型", "地区管理": "地区管理", "航站楼面积": "航站楼面积", "机位数量": "机位数量", "客运航线": "客运航线", "跑道长度": "跑道长度", "省份": "省份", "通航日期": "通航日期", "投用日期": "投用日期", "建筑面积": "建筑面积", "站台规模": "站台规模", "地址": "地址", "公司名称": "公司名称", "总部地点": "总部地点", "成立时间": "成立时间", "IATA代码": "IATA代码", "ICAO代码": "ICAO代码", "年营业额": "年营业额", "员工数": "员工数", "航空公司id": "航空公司id", "机场id": "机场id", "城市": "城市", "航点数": "航点数", "年份": "年份", "旅客吞吐量": "旅客吞吐量", "客运航线数量": "客运航线数量"}, "table_en": {"机场": "机场", "火车站": "火车站", "航空公司": "航空公司", "航空公司入驻机场": "航空公司入驻机场", "机场吞吐量": "机场吞吐量"}}, "2018年各校招生计划": {"sqlite": "CREATE TABLE 学校 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  所在省份 VARCHAR(50), -- 所在省份\n  类型 VARCHAR(50), -- 类型\n  是否985 BINARY, -- 是否985\n  是否211 BINARY, -- 是否211\n);\nCREATE TABLE 省份 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  省名 VARCHAR(50), -- 省名\n  2018年考生数量 INTEGER, -- 2018年考生数量\n  985高校数量 INTEGER, -- 985高校数量\n  211高校数量 INTEGER, -- 211高校数量\n);\nCREATE TABLE 各省高校招生计划 (\n  学校id INTEGER PRIMARY KEY, -- 学校id\n  省份id INTEGER, -- 省份id\n  招生人数 INTEGER, -- 招生人数\n);\nCREATE TABLE 专业 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  专业名称 VARCHAR(50), -- 专业名称\n  学科类型 VARCHAR(50), -- 学科类型\n  学制 INTEGER, -- 学制\n);\nCREATE TABLE 清华大学招生计划 (\n  专业id INTEGER PRIMARY KEY, -- 专业id\n  省份id INTEGER, -- 省份id\n  招考类型 VARCHAR(50), -- 招考类型\n  学费 INTEGER, -- 学费\n  招生人数 INTEGER, -- 招生人数\n);\n-- 清华大学招生计划.专业id can be joined with 专业.专业\n-- 清华大学招生计划.省份id can be joined with 省份.省份\n-- 各省高校招生计划.学校id can be joined with 学校.学校\n-- 各省高校招生计划.省份id can be joined with 省份.省份", "columns_en": {"词条id": "词条id", "名称": "名称", "所在省份": "所在省份", "类型": "类型", "是否985": "是否985", "是否211": "是否211", "省名": "省名", "2018年考生数量": "2018年考生数量", "985高校数量": "985高校数量", "211高校数量": "211高校数量", "学校id": "学校id", "省份id": "省份id", "招生人数": "招生人数", "专业名称": "专业名称", "学科类型": "学科类型", "学制": "学制", "专业id": "专业id", "招考类型": "招考类型", "学费": "学费"}, "table_en": {"学校": "学校", "省份": "省份", "各省高校招生计划": "各省高校招生计划", "专业": "专业", "清华大学招生计划": "清华大学招生计划"}}, "榜单": {"sqlite": "CREATE TABLE 图书 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  书名 VARCHAR(50), -- 书名\n  作者 VARCHAR(50), -- 作者\n  评分 INTEGER, -- 评分\n  总排名 INTEGER, -- 总排名\n);\nCREATE TABLE 五星榜单 (\n  图书id INTEGER PRIMARY KEY, -- 图书id\n  评价人数 INTEGER, -- 评价人数\n);\nCREATE TABLE 本月特价书籍 (\n  图书id INTEGER PRIMARY KEY, -- 图书id\n  现价格 INTEGER, -- 现价格\n  原价格 INTEGER, -- 原价格\n);\nCREATE TABLE 人气榜单 (\n  图书id INTEGER PRIMARY KEY, -- 图书id\n  购买人数 INTEGER, -- 购买人数\n  收藏人数 INTEGER, -- 收藏人数\n);\nCREATE TABLE 必读榜单 (\n  图书id INTEGER PRIMARY KEY, -- 图书id\n  推荐人数 INTEGER, -- 推荐人数\n);\n-- 人气榜单.图书id can be joined with 图书.图书\n-- 本月特价书籍.图书id can be joined with 图书.图书\n-- 五星榜单.图书id can be joined with 图书.图书\n-- 必读榜单.图书id can be joined with 图书.图书", "columns_en": {"词条id": "词条id", "书名": "书名", "作者": "作者", "评分": "评分", "总排名": "总排名", "图书id": "图书id", "评价人数": "评价人数", "现价格": "现价格", "原价格": "原价格", "购买人数": "购买人数", "收藏人数": "收藏人数", "推荐人数": "推荐人数"}, "table_en": {"图书": "图书", "五星榜单": "五星榜单", "本月特价书籍": "本月特价书籍", "人气榜单": "人气榜单", "必读榜单": "必读榜单"}}, "购书平台": {"sqlite": "CREATE TABLE 平台 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  成立时间 DATETIME, -- 成立时间\n  年营业额 INTEGER, -- 年营业额\n  是否自营 BINARY, -- 是否自营\n  会员费 INTEGER, -- 会员费\n);\nCREATE TABLE 图书 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  书名 VARCHAR(50), -- 书名\n  作者 VARCHAR(50), -- 作者\n  类型 VARCHAR(50), -- 类型\n);\nCREATE TABLE 图书与平台 (\n  书名id INTEGER PRIMARY KEY, -- 书名id\n  平台id INTEGER, -- 平台id\n  售价 INTEGER, -- 售价\n  购买人数 INTEGER, -- 购买人数\n  评分 INTEGER, -- 评分\n  评分人数 INTEGER, -- 评分人数\n  加入购物车人数 INTEGER, -- 加入购物车人数\n  收藏人数 INTEGER, -- 收藏人数\n  缺货 BINARY, -- 缺货\n);\nCREATE TABLE 电子书 (\n  书名id INTEGER PRIMARY KEY, -- 书名id\n  平台id INTEGER, -- 平台id\n  电子书售价 INTEGER, -- 电子书售价\n  会员价格 INTEGER, -- 会员价格\n  购买人数 INTEGER, -- 购买人数\n);\n-- 图书与平台.书名id can be joined with 图书.图书\n-- 图书与平台.平台id can be joined with 平台.平台\n-- 电子书.书名id can be joined with 图书.图书\n-- 电子书.平台id can be joined with 平台.平台", "columns_en": {"词条id": "词条id", "名称": "名称", "成立时间": "成立时间", "年营业额": "年营业额", "是否自营": "是否自营", "会员费": "会员费", "书名": "书名", "作者": "作者", "类型": "类型", "书名id": "书名id", "平台id": "平台id", "售价": "售价", "购买人数": "购买人数", "评分": "评分", "评分人数": "评分人数", "加入购物车人数": "加入购物车人数", "收藏人数": "收藏人数", "缺货": "缺货", "电子书售价": "电子书售价", "会员价格": "会员价格"}, "table_en": {"平台": "平台", "图书": "图书", "图书与平台": "图书与平台", "电子书": "电子书"}}, "友好城市": {"sqlite": "CREATE TABLE 城市 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  城市 VARCHAR(50), -- 城市\n  所属省份 VARCHAR(50), -- 所属省份\n  建交国家数量 INTEGER, -- 建交国家数量\n  建交城市数量 INTEGER, -- 建交城市数量\n  国外驻华大使馆数量 INTEGER, -- 国外驻华大使馆数量\n  留学生数量 INTEGER, -- 留学生数量\n  跨国公司数量 INTEGER, -- 跨国公司数量\n);\nCREATE TABLE 一带一路线路上的国家 (\n  国家 VARCHAR(50) PRIMARY KEY, -- 国家\n  线路 VARCHAR(50), -- 线路\n);\nCREATE TABLE 一带一路的中国城市 (\n  城市id INTEGER PRIMARY KEY, -- 城市id\n  所属省 VARCHAR(50), -- 所属省\n  线路 VARCHAR(50), -- 线路\n);\nCREATE TABLE 对口帮扶城市 (\n  贫困城市id VARCHAR(50) PRIMARY KEY, -- 贫困城市id\n  所属省 VARCHAR(50), -- 所属省\n  帮助城市id VARCHAR(50), -- 帮助城市id\n);\n-- 一带一路的中国城市.城市id can be joined with 城市.城市\n-- 对口帮扶城市.贫困城市id can be joined with 城市.城市\n-- 对口帮扶城市.帮助城市id can be joined with 城市.城市", "columns_en": {"词条id": "词条id", "城市": "城市", "所属省份": "所属省份", "建交国家数量": "建交国家数量", "建交城市数量": "建交城市数量", "国外驻华大使馆数量": "国外驻华大使馆数量", "留学生数量": "留学生数量", "跨国公司数量": "跨国公司数量", "国家": "国家", "线路": "线路", "城市id": "城市id", "所属省": "所属省", "贫困城市id": "贫困城市id", "帮助城市id": "帮助城市id"}, "table_en": {"城市": "城市", "一带一路线路上的国家": "一带一路线路上的国家", "一带一路的中国城市": "一带一路的中国城市", "对口帮扶城市": "对口帮扶城市"}}, "植物": {"sqlite": "CREATE TABLE 植物 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  学名 VARCHAR(50), -- 学名\n  花期 INTEGER, -- 花期\n  花期时长 INTEGER, -- 花期时长\n  果期 INTEGER, -- 果期\n);\nCREATE TABLE 药用植物 (\n  植物id INTEGER PRIMARY KEY, -- 植物id\n  用途说明 VARCHAR(50), -- 用途说明\n  毒性 VARCHAR(50), -- 毒性\n  种植方式 VARCHAR(50), -- 种植方式\n);\nCREATE TABLE 植物分布城市 (\n  植物id INTEGER PRIMARY KEY, -- 植物id\n  城市 VARCHAR(50), -- 城市\n  保护级别 VARCHAR(50), -- 保护级别\n);\nCREATE TABLE 食肉植物分布区域 (\n  植物id INTEGER PRIMARY KEY, -- 植物id\n  区域 VARCHAR(50), -- 区域\n  种类数 INTEGER, -- 种类数\n);\nCREATE TABLE 植物繁殖 (\n  植物id INTEGER PRIMARY KEY, -- 植物id\n  方式 VARCHAR(50), -- 方式\n);\n-- 药用植物.植物id can be joined with 植物.植物\n-- 植物分布城市.植物id can be joined with 植物.植物\n-- 食肉植物分布区域.植物id can be joined with 植物.植物\n-- 植物繁殖.植物id can be joined with 植物.植物", "columns_en": {"词条id": "词条id", "学名": "学名", "花期": "花期", "花期时长": "花期时长", "果期": "果期", "植物id": "植物id", "用途说明": "用途说明", "毒性": "毒性", "种植方式": "种植方式", "城市": "城市", "保护级别": "保护级别", "区域": "区域", "种类数": "种类数", "方式": "方式"}, "table_en": {"植物": "植物", "药用植物": "药用植物", "植物分布城市": "植物分布城市", "食肉植物分布区域": "食肉植物分布区域", "植物繁殖": "植物繁殖"}}, "运动员比赛记录": {"sqlite": "CREATE TABLE 篮球运动员 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  中文名 VARCHAR(50), -- 中文名\n  场上位置 VARCHAR(50), -- 场上位置\n  球队 VARCHAR(50), -- 球队\n  年龄 INTEGER, -- 年龄\n);\nCREATE TABLE 比赛记录 (\n  赛季 INTEGER PRIMARY KEY, -- 赛季\n  球队 VARCHAR(50), -- 球队\n  赛事类型 VARCHAR(50), -- 赛事类型\n  球员id INTEGER, -- 球员id\n  出场次数 INTEGER, -- 出场次数\n  首发次数 INTEGER, -- 首发次数\n  投篮 INTEGER, -- 投篮\n  罚球 INTEGER, -- 罚球\n  三分球 INTEGER, -- 三分球\n  总篮板 INTEGER, -- 总篮板\n  抢断 INTEGER, -- 抢断\n  助攻 INTEGER, -- 助攻\n  防守 INTEGER, -- 防守\n  犯规 INTEGER, -- 犯规\n  得分 INTEGER, -- 得分\n);\nCREATE TABLE 生涯之最 (\n  球员id INTEGER PRIMARY KEY, -- 球员id\n  单场得分 INTEGER, -- 单场得分\n  篮板球次数 INTEGER, -- 篮板球次数\n  抢断次数 INTEGER, -- 抢断次数\n  助攻次数 INTEGER, -- 助攻次数\n  盖帽次数 INTEGER, -- 盖帽次数\n  比赛时间 DATETIME, -- 比赛时间\n  比赛对手 VARCHAR(50), -- 比赛对手\n);\n-- 比赛记录.球员id can be joined with 篮球运动员.篮球运动员\n-- 生涯之最.球员id can be joined with 篮球运动员.篮球运动员", "columns_en": {"词条id": "词条id", "中文名": "中文名", "场上位置": "场上位置", "球队": "球队", "年龄": "年龄", "赛季": "赛季", "赛事类型": "赛事类型", "球员id": "球员id", "出场次数": "出场次数", "首发次数": "首发次数", "投篮": "投篮", "罚球": "罚球", "三分球": "三分球", "总篮板": "总篮板", "抢断": "抢断", "助攻": "助攻", "防守": "防守", "犯规": "犯规", "得分": "得分", "单场得分": "单场得分", "篮板球次数": "篮板球次数", "抢断次数": "抢断次数", "助攻次数": "助攻次数", "盖帽次数": "盖帽次数", "比赛时间": "比赛时间", "比赛对手": "比赛对手"}, "table_en": {"篮球运动员": "篮球运动员", "比赛记录": "比赛记录", "生涯之最": "生涯之最"}}, "智能手机全球占比": {"sqlite": "CREATE TABLE 智能手机公司 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  所属国家 VARCHAR(50), -- 所属国家\n  年营业额 INTEGER, -- 年营业额\n  年利润 INTEGER, -- 年利润\n  世界排名 INTEGER, -- 世界排名\n);\nCREATE TABLE 智能手机全球出货量 (\n  公司id INTEGER PRIMARY KEY, -- 公司id\n  2017年出货量 INTEGER, -- 2017年出货量\n  2017年市场占比 INTEGER, -- 2017年市场占比\n  2018年出货量 INTEGER, -- 2018年出货量\n  2018年市场占比 INTEGER, -- 2018年市场占比\n  占比提升幅度 INTEGER, -- 占比提升幅度\n);\nCREATE TABLE 智能手机部署国家 (\n  公司id INTEGER PRIMARY KEY, -- 公司id\n  部署国家 INTEGER, -- 部署国家\n  部署年份 DATETIME, -- 部署年份\n  销售量排名 INTEGER, -- 销售量排名\n);\n-- 智能手机部署国家.公司id can be joined with 智能手机公司.智能手机公司\n-- 智能手机全球出货量.公司id can be joined with 智能手机公司.智能手机公司", "columns_en": {"词条id": "词条id", "名称": "名称", "所属国家": "所属国家", "年营业额": "年营业额", "年利润": "年利润", "世界排名": "世界排名", "公司id": "公司id", "2017年出货量": "2017年出货量", "2017年市场占比": "2017年市场占比", "2018年出货量": "2018年出货量", "2018年市场占比": "2018年市场占比", "占比提升幅度": "占比提升幅度", "部署国家": "部署国家", "部署年份": "部署年份", "销售量排名": "销售量排名"}, "table_en": {"智能手机公司": "智能手机公司", "智能手机全球出货量": "智能手机全球出货量", "智能手机部署国家": "智能手机部署国家"}}, "期刊": {"sqlite": "CREATE TABLE 期刊 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  语言 VARCHAR(50), -- 语言\n  类别 VARCHAR(50), -- 类别\n  主办单位 VARCHAR(50), -- 主办单位\n  创刊时间 DATETIME, -- 创刊时间\n  国家 VARCHAR(50), -- 国家\n  出版刊数 INTEGER, -- 出版刊数\n);\nCREATE TABLE 期刊文献 (\n  年份 DATETIME PRIMARY KEY, -- 年份\n  期刊id INTEGER, -- 期刊id\n  统计平台 VARCHAR(50), -- 统计平台\n  出版文献数 INTEGER, -- 出版文献数\n  被下载数量 INTEGER, -- 被下载数量\n  被引数量 INTEGER, -- 被引数量\n  复合影响因子 INTEGER, -- 复合影响因子\n  综合影响因子 INTEGER, -- 综合影响因子\n);\nCREATE TABLE 封面人物 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  姓名 VARCHAR(50), -- 姓名\n  职业 VARCHAR(50), -- 职业\n);\nCREATE TABLE 期刊封面人物 (\n  人物id INTEGER PRIMARY KEY, -- 人物id\n  期刊id INTEGER, -- 期刊id\n  次数 INTEGER, -- 次数\n);\n-- 期刊封面人物.人物id can be joined with 封面人物.封面人物\n-- 期刊文献.期刊id can be joined with 期刊.期刊\n-- 期刊封面人物.期刊id can be joined with 期刊.期刊", "columns_en": {"词条id": "词条id", "名称": "名称", "语言": "语言", "类别": "类别", "主办单位": "主办单位", "创刊时间": "创刊时间", "国家": "国家", "出版刊数": "出版刊数", "年份": "年份", "期刊id": "期刊id", "统计平台": "统计平台", "出版文献数": "出版文献数", "被下载数量": "被下载数量", "被引数量": "被引数量", "复合影响因子": "复合影响因子", "综合影响因子": "综合影响因子", "姓名": "姓名", "职业": "职业", "人物id": "人物id", "次数": "次数"}, "table_en": {"期刊": "期刊", "期刊文献": "期刊文献", "封面人物": "封面人物", "期刊封面人物": "期刊封面人物"}}, "小说": {"sqlite": "CREATE TABLE 作者 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  姓名 VARCHAR(50), -- 姓名\n  国籍 VARCHAR(50), -- 国籍\n  出生日期 DATETIME, -- 出生日期\n  出生地 VARCHAR(50), -- 出生地\n  逝世日期 DATETIME, -- 逝世日期\n  作品数量 INTEGER, -- 作品数量\n);\nCREATE TABLE 小说 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  小说名 VARCHAR(50), -- 小说名\n  文学体裁 VARCHAR(50), -- 文学体裁\n  作者id INTEGER, -- 作者id\n  首版时间 DATETIME, -- 首版时间\n  字数 INTEGER, -- 字数\n);\nCREATE TABLE 小说改编话剧 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  小说id INTEGER, -- 小说id\n  演出剧团 VARCHAR(50), -- 演出剧团\n  导演 VARCHAR(50), -- 导演\n  演出总场次 INTEGER, -- 演出总场次\n  观众评分 INTEGER, -- 观众评分\n);\nCREATE TABLE 小说改编电视剧 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  剧名 VARCHAR(50), -- 剧名\n  小说id INTEGER, -- 小说id\n  首播时间 DATETIME, -- 首播时间\n  集数 INTEGER, -- 集数\n  豆瓣评分 INTEGER, -- 豆瓣评分\n);\n-- 小说.作者id can be joined with 作者.作者\n-- 小说改编话剧.小说id can be joined with 小说.小说\n-- 小说改编电视剧.小说id can be joined with 小说.小说", "columns_en": {"词条id": "词条id", "姓名": "姓名", "国籍": "国籍", "出生日期": "出生日期", "出生地": "出生地", "逝世日期": "逝世日期", "作品数量": "作品数量", "小说名": "小说名", "文学体裁": "文学体裁", "作者id": "作者id", "首版时间": "首版时间", "字数": "字数", "名称": "名称", "小说id": "小说id", "演出剧团": "演出剧团", "导演": "导演", "演出总场次": "演出总场次", "观众评分": "观众评分", "剧名": "剧名", "首播时间": "首播时间", "集数": "集数", "豆瓣评分": "豆瓣评分"}, "table_en": {"作者": "作者", "小说": "小说", "小说改编话剧": "小说改编话剧", "小说改编电视剧": "小说改编电视剧"}}, "朝代影视剧": {"sqlite": "CREATE TABLE 帝王 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  姓名 VARCHAR(50), -- 姓名\n  朝代 VARCHAR(50), -- 朝代\n  在位年数 INTEGER, -- 在位年数\n);\nCREATE TABLE 电影 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  电影名称 VARCHAR(50), -- 电影名称\n  上映时间 DATETIME, -- 上映时间\n  帝王id INTEGER, -- 帝王id\n);\nCREATE TABLE 电视剧 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  剧名 VARCHAR(50), -- 剧名\n  首播时间 DATETIME, -- 首播时间\n  剧集 INTEGER, -- 剧集\n  帝王id INTEGER, -- 帝王id\n);\n-- 电影.帝王id can be joined with 帝王.帝王\n-- 电视剧.帝王id can be joined with 帝王.帝王", "columns_en": {"词条id": "词条id", "姓名": "姓名", "朝代": "朝代", "在位年数": "在位年数", "电影名称": "电影名称", "上映时间": "上映时间", "帝王id": "帝王id", "剧名": "剧名", "首播时间": "首播时间", "剧集": "剧集"}, "table_en": {"帝王": "帝王", "电影": "电影", "电视剧": "电视剧"}}, "汉语词语": {"sqlite": "CREATE TABLE 词语 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  含义 VARCHAR(50), -- 含义\n  类型 VARCHAR(50), -- 类型\n);\nCREATE TABLE 近义词 (\n  词语id INTEGER PRIMARY KEY, -- 词语id\n  近义词id INTEGER, -- 近义词id\n);\nCREATE TABLE 反义词 (\n  词语id INTEGER PRIMARY KEY, -- 词语id\n  反义词id INTEGER, -- 反义词id\n);\n-- 近义词.词语id can be joined with 词语.词语\n-- 反义词.反义词id can be joined with 词语.词语\n-- 近义词.近义词id can be joined with 词语.词语\n-- 反义词.词语id can be joined with 词语.词语", "columns_en": {"词条id": "词条id", "名称": "名称", "含义": "含义", "类型": "类型", "词语id": "词语id", "近义词id": "近义词id", "反义词id": "反义词id"}, "table_en": {"词语": "词语", "近义词": "近义词", "反义词": "反义词"}}, "游戏": {"sqlite": "CREATE TABLE 游戏公司 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  国家 VARCHAR(50), -- 国家\n  公司性质 VARCHAR(50), -- 公司性质\n  年收益 INTEGER, -- 年收益\n  游戏数量 INTEGER, -- 游戏数量\n);\nCREATE TABLE 游戏 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  注册玩家数量 INTEGER, -- 注册玩家数量\n  日在线玩家数量 INTEGER, -- 日在线玩家数量\n  游戏画面评分 INTEGER, -- 游戏画面评分\n  游戏音乐评分 INTEGER, -- 游戏音乐评分\n  游戏性评分 INTEGER, -- 游戏性评分\n  游戏特色评分 INTEGER, -- 游戏特色评分\n  相关服务评分 INTEGER, -- 相关服务评分\n);\nCREATE TABLE 公司和游戏 (\n  游戏id INTEGER PRIMARY KEY, -- 游戏id\n  公司id INTEGER, -- 公司id\n  发行形式 VARCHAR(50), -- 发行形式\n  收益额 INTEGER, -- 收益额\n  收益占公司比例 INTEGER, -- 收益占公司比例\n);\n-- 公司和游戏.游戏id can be joined with 游戏.游戏\n-- 公司和游戏.公司id can be joined with 游戏公司.游戏公司", "columns_en": {"词条id": "词条id", "名称": "名称", "国家": "国家", "公司性质": "公司性质", "年收益": "年收益", "游戏数量": "游戏数量", "注册玩家数量": "注册玩家数量", "日在线玩家数量": "日在线玩家数量", "游戏画面评分": "游戏画面评分", "游戏音乐评分": "游戏音乐评分", "游戏性评分": "游戏性评分", "游戏特色评分": "游戏特色评分", "相关服务评分": "相关服务评分", "游戏id": "游戏id", "公司id": "公司id", "发行形式": "发行形式", "收益额": "收益额", "收益占公司比例": "收益占公司比例"}, "table_en": {"游戏公司": "游戏公司", "游戏": "游戏", "公司和游戏": "公司和游戏"}}, "购物城": {"sqlite": "CREATE TABLE 商场 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  地址 VARCHAR(50), -- 地址\n  开业时间 DATETIME, -- 开业时间\n);\nCREATE TABLE 商家 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  类型 VARCHAR(50), -- 类型\n);\nCREATE TABLE 商家入驻商场 (\n  商家id INTEGER PRIMARY KEY, -- 商家id\n  商场id INTEGER, -- 商场id\n  楼层 INTEGER, -- 楼层\n  占地面积 INTEGER, -- 占地面积\n);\n-- 商家入驻商场.商场id can be joined with 商场.商场\n-- 商家入驻商场.商家id can be joined with 商家.商家", "columns_en": {"词条id": "词条id", "名称": "名称", "地址": "地址", "开业时间": "开业时间", "类型": "类型", "商家id": "商家id", "商场id": "商场id", "楼层": "楼层", "占地面积": "占地面积"}, "table_en": {"商场": "商场", "商家": "商家", "商家入驻商场": "商家入驻商场"}}, "诺贝尔奖项": {"sqlite": "CREATE TABLE 诺贝尔奖项 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  领域 VARCHAR(50), -- 领域\n  第一次颁奖时间 DATETIME, -- 第一次颁奖时间\n  获奖者最大年龄 INTEGER, -- 获奖者最大年龄\n  获奖者最小年龄 INTEGER, -- 获奖者最小年龄\n  获奖者平均年龄 INTEGER, -- 获奖者平均年龄\n);\nCREATE TABLE 高校 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  所属国家 VARCHAR(50), -- 所属国家\n  世界排名 INTEGER, -- 世界排名\n  独立科研机构数量 INTEGER, -- 独立科研机构数量\n  重点学科数量 INTEGER, -- 重点学科数量\n);\nCREATE TABLE 高校获奖名单 (\n  高校id INTEGER PRIMARY KEY, -- 高校id\n  奖项id INTEGER, -- 奖项id\n  人数 INTEGER, -- 人数\n  排名 INTEGER, -- 排名\n);\nCREATE TABLE 各国获奖名单 (\n  国家 INTEGER PRIMARY KEY, -- 国家\n  奖项id INTEGER, -- 奖项id\n  人数 INTEGER, -- 人数\n);\nCREATE TABLE 科学家 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  姓名 VARCHAR(50), -- 姓名\n  性别 VARCHAR(50), -- 性别\n  国籍 VARCHAR(50), -- 国籍\n  出生日期 DATETIME, -- 出生日期\n  职业 VARCHAR(50), -- 职业\n);\nCREATE TABLE 毕业院校 (\n  科学家id INTEGER PRIMARY KEY, -- 科学家id\n  高校id INTEGER, -- 高校id\n  获得学位 VARCHAR(50), -- 获得学位\n);\nCREATE TABLE 诺贝尔奖科学家名单 (\n  年份 DATETIME PRIMARY KEY, -- 年份\n  奖项id INTEGER, -- 奖项id\n  科学家id INTEGER, -- 科学家id\n  理由 VARCHAR(50), -- 理由\n);\n-- 诺贝尔奖科学家名单.科学家id can be joined with 科学家.科学家\n-- 高校获奖名单.高校id can be joined with 高校.高校\n-- 各国获奖名单.奖项id can be joined with 诺贝尔奖项.诺贝尔奖项\n-- 毕业院校.科学家id can be joined with 科学家.科学家\n-- 高校获奖名单.奖项id can be joined with 诺贝尔奖项.诺贝尔奖项\n-- 毕业院校.高校id can be joined with 高校.高校\n-- 诺贝尔奖科学家名单.奖项id can be joined with 诺贝尔奖项.诺贝尔奖项", "columns_en": {"词条id": "词条id", "名称": "名称", "领域": "领域", "第一次颁奖时间": "第一次颁奖时间", "获奖者最大年龄": "获奖者最大年龄", "获奖者最小年龄": "获奖者最小年龄", "获奖者平均年龄": "获奖者平均年龄", "所属国家": "所属国家", "世界排名": "世界排名", "独立科研机构数量": "独立科研机构数量", "重点学科数量": "重点学科数量", "高校id": "高校id", "奖项id": "奖项id", "人数": "人数", "排名": "排名", "国家": "国家", "姓名": "姓名", "性别": "性别", "国籍": "国籍", "出生日期": "出生日期", "职业": "职业", "科学家id": "科学家id", "获得学位": "获得学位", "年份": "年份", "理由": "理由"}, "table_en": {"诺贝尔奖项": "诺贝尔奖项", "高校": "高校", "高校获奖名单": "高校获奖名单", "各国获奖名单": "各国获奖名单", "科学家": "科学家", "毕业院校": "毕业院校", "诺贝尔奖科学家名单": "诺贝尔奖科学家名单"}}, "世界高校": {"sqlite": "CREATE TABLE 大洲 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  面积排名 INTEGER, -- 面积排名\n  人口排名 INTEGER, -- 人口排名\n);\nCREATE TABLE 国家 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  成立时间 DATETIME, -- 成立时间\n  官方语言 VARCHAR(50), -- 官方语言\n  所属洲id INTEGER, -- 所属洲id\n);\nCREATE TABLE 高校 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  类型 VARCHAR(50), -- 类型\n  所属国家id INTEGER, -- 所属国家id\n  世界软科排名 INTEGER, -- 世界软科排名\n  泰晤士排名 INTEGER, -- 泰晤士排名\n  QS排名 INTEGER, -- QS排名\n  USNews排名 INTEGER, -- USNews排名\n);\n-- 高校.所属国家id can be joined with 国家.国家\n-- 国家.所属洲id can be joined with 大洲.大洲", "columns_en": {"词条id": "词条id", "名称": "名称", "面积排名": "面积排名", "人口排名": "人口排名", "成立时间": "成立时间", "官方语言": "官方语言", "所属洲id": "所属洲id", "类型": "类型", "所属国家id": "所属国家id", "世界软科排名": "世界软科排名", "泰晤士排名": "泰晤士排名", "QS排名": "QS排名", "USNews排名": "USNews排名"}, "table_en": {"大洲": "大洲", "国家": "国家", "高校": "高校"}}, "朝代货币": {"sqlite": "CREATE TABLE 朝代 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  统治时间 INTEGER, -- 统治时间\n);\nCREATE TABLE 各年号统治时间 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  年号 VARCHAR(50), -- 年号\n  所处朝代id INTEGER, -- 所处朝代id\n  统治时间 INTEGER, -- 统治时间\n);\nCREATE TABLE 各朝代货币 (\n  朝代id INTEGER PRIMARY KEY, -- 朝代id\n  货币 VARCHAR(50), -- 货币\n  使用时间 INTEGER, -- 使用时间\n);\n-- 各朝代货币.朝代id can be joined with 朝代.朝代\n-- 各年号统治时间.所处朝代id can be joined with 朝代.朝代", "columns_en": {"词条id": "词条id", "名称": "名称", "统治时间": "统治时间", "年号": "年号", "所处朝代id": "所处朝代id", "朝代id": "朝代id", "货币": "货币", "使用时间": "使用时间"}, "table_en": {"朝代": "朝代", "各年号统治时间": "各年号统治时间", "各朝代货币": "各朝代货币"}}, "两院院士": {"sqlite": "CREATE TABLE 两院院士学校名单 (\n  学校 VARCHAR(50) PRIMARY KEY, -- 学校\n  所在省市 VARCHAR(50), -- 所在省市\n  所在城市 VARCHAR(50), -- 所在城市\n  院士人数 INTEGER, -- 院士人数\n);\nCREATE TABLE 两院院士民族名单 (\n  民族 VARCHAR(50) PRIMARY KEY, -- 民族\n  院士人数 INTEGER, -- 院士人数\n  所占比例 INTEGER, -- 所占比例\n);\nCREATE TABLE 各国女院士比例 (\n  国家 VARCHAR(50) PRIMARY KEY, -- 国家\n  女院士人数 INTEGER, -- 女院士人数\n  所占比例 INTEGER, -- 所占比例\n);\nCREATE TABLE 各学部院士分布 (\n  年份 DATETIME PRIMARY KEY, -- 年份\n  学部 VARCHAR(50), -- 学部\n  院士人数 INTEGER, -- 院士人数\n  所占比例 INTEGER, -- 所占比例\n);\n", "columns_en": {"学校": "学校", "所在省市": "所在省市", "所在城市": "所在城市", "院士人数": "院士人数", "民族": "民族", "所占比例": "所占比例", "国家": "国家", "女院士人数": "女院士人数", "年份": "年份", "学部": "学部"}, "table_en": {"两院院士学校名单": "两院院士学校名单", "两院院士民族名单": "两院院士民族名单", "各国女院士比例": "各国女院士比例", "各学部院士分布": "各学部院士分布"}}, "网易云阅读": {"sqlite": "CREATE TABLE 作者 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  姓名 VARCHAR(50), -- 姓名\n  年龄 INTEGER, -- 年龄\n  出版作品数 INTEGER, -- 出版作品数\n  网络作品数 INTEGER, -- 网络作品数\n);\nCREATE TABLE 出版图书 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  书名 VARCHAR(50), -- 书名\n  作者id INTEGER, -- 作者id\n  评分 INTEGER, -- 评分\n  评价人数 INTEGER, -- 评价人数\n  字数 INTEGER, -- 字数\n  点击数 INTEGER, -- 点击数\n  类型 VARCHAR(50), -- 类型\n);\nCREATE TABLE 网络小说 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  书名 VARCHAR(50), -- 书名\n  作者id INTEGER, -- 作者id\n  评分 INTEGER, -- 评分\n  类型 VARCHAR(50), -- 类型\n  状态 VARCHAR(50), -- 状态\n  价格 INTEGER, -- 价格\n);\nCREATE TABLE 畅销榜 (\n  网络小说id INTEGER PRIMARY KEY, -- 网络小说id\n  周排名 INTEGER, -- 周排名\n  月排名 INTEGER, -- 月排名\n  总排名 INTEGER, -- 总排名\n);\nCREATE TABLE 收藏榜 (\n  网络小说id INTEGER PRIMARY KEY, -- 网络小说id\n  周排名 INTEGER, -- 周排名\n  月排名 INTEGER, -- 月排名\n  总排名 INTEGER, -- 总排名\n);\n-- 收藏榜.网络小说id can be joined with 网络小说.网络小说\n-- 出版图书.作者id can be joined with 作者.作者\n-- 畅销榜.网络小说id can be joined with 网络小说.网络小说\n-- 网络小说.作者id can be joined with 作者.作者", "columns_en": {"词条id": "词条id", "姓名": "姓名", "年龄": "年龄", "出版作品数": "出版作品数", "网络作品数": "网络作品数", "书名": "书名", "作者id": "作者id", "评分": "评分", "评价人数": "评价人数", "字数": "字数", "点击数": "点击数", "类型": "类型", "状态": "状态", "价格": "价格", "网络小说id": "网络小说id", "周排名": "周排名", "月排名": "月排名", "总排名": "总排名"}, "table_en": {"作者": "作者", "出版图书": "出版图书", "网络小说": "网络小说", "畅销榜": "畅销榜", "收藏榜": "收藏榜"}}, "教材辅助参考书": {"sqlite": "CREATE TABLE 参考书 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  类型 VARCHAR(50), -- 类型\n  适用阶段 VARCHAR(50), -- 适用阶段\n  适用年级 INTEGER, -- 适用年级\n  科目类型 VARCHAR(50), -- 科目类型\n  价格 INTEGER, -- 价格\n  特点 VARCHAR(50), -- 特点\n);\nCREATE TABLE 参考试卷 (\n  试卷id INTEGER PRIMARY KEY, -- 试卷id\n  套数 VARCHAR(50), -- 套数\n  押题命中率 INTEGER, -- 押题命中率\n);\nCREATE TABLE 适用城市 (\n  省份 VARCHAR(50) PRIMARY KEY, -- 省份\n  参考试卷id INTEGER, -- 参考试卷id\n  版本 VARCHAR(50), -- 版本\n  购买数量 INTEGER, -- 购买数量\n  平均得分 INTEGER, -- 平均得分\n);\n-- 参考试卷.试卷id can be joined with 参考书.参考书\n-- 适用城市.参考试卷id can be joined with 参考书.参考书", "columns_en": {"词条id": "词条id", "名称": "名称", "类型": "类型", "适用阶段": "适用阶段", "适用年级": "适用年级", "科目类型": "科目类型", "价格": "价格", "特点": "特点", "试卷id": "试卷id", "套数": "套数", "押题命中率": "押题命中率", "省份": "省份", "参考试卷id": "参考试卷id", "版本": "版本", "购买数量": "购买数量", "平均得分": "平均得分"}, "table_en": {"参考书": "参考书", "参考试卷": "参考试卷", "适用城市": "适用城市"}}, "中国高校": {"sqlite": "CREATE TABLE 高校 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  创办时间 DATETIME, -- 创办时间\n  类别 VARCHAR(50), -- 类别\n  所属城市 VARCHAR(50), -- 所属城市\n  本科生数量 INTEGER, -- 本科生数量\n  研究生数量 INTEGER, -- 研究生数量\n);\nCREATE TABLE 名人 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  职业 DATETIME, -- 职业\n  主要成就 VARCHAR(50), -- 主要成就\n  高校id INTEGER, -- 高校id\n);\nCREATE TABLE 奖项 (\n  奖项名称 VARCHAR(50) PRIMARY KEY, -- 奖项名称\n  高校id INTEGER, -- 高校id\n  奖项数量 INTEGER, -- 奖项数量\n  统计时间 DATETIME, -- 统计时间\n);\nCREATE TABLE 高校属性 (\n  高校id INTEGER PRIMARY KEY, -- 高校id\n  属性 VARCHAR(50), -- 属性\n  加入时间 DATETIME, -- 加入时间\n);\n-- 奖项.高校id can be joined with 高校.高校\n-- 高校属性.高校id can be joined with 高校.高校\n-- 名人.高校id can be joined with 高校.高校", "columns_en": {"词条id": "词条id", "名称": "名称", "创办时间": "创办时间", "类别": "类别", "所属城市": "所属城市", "本科生数量": "本科生数量", "研究生数量": "研究生数量", "职业": "职业", "主要成就": "主要成就", "高校id": "高校id", "奖项名称": "奖项名称", "奖项数量": "奖项数量", "统计时间": "统计时间", "属性": "属性", "加入时间": "加入时间"}, "table_en": {"高校": "高校", "名人": "名人", "奖项": "奖项", "高校属性": "高校属性"}}, "CCTV中国经济年度人物": {"sqlite": "CREATE TABLE 企业人物 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  姓名 VARCHAR(50), -- 姓名\n  性别 VARCHAR(50), -- 性别\n  年龄 INTEGER, -- 年龄\n  出生地 VARCHAR(50), -- 出生地\n  民族 VARCHAR(50), -- 民族\n  毕业院校 VARCHAR(50), -- 毕业院校\n);\nCREATE TABLE 公司 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  成立时间 DATETIME, -- 成立时间\n  年营业额 INTEGER, -- 年营业额\n  员工数 INTEGER, -- 员工数\n  市值 INTEGER, -- 市值\n  世界500强排名 INTEGER, -- 世界500强排名\n);\nCREATE TABLE 人物公司职位 (\n  人物id INTEGER PRIMARY KEY, -- 人物id\n  公司id INTEGER, -- 公司id\n  职位 VARCHAR(50), -- 职位\n);\nCREATE TABLE 历届经济人物获奖名单 (\n  年份 INTEGER PRIMARY KEY, -- 年份\n  奖项名称 VARCHAR(50), -- 奖项名称\n  获奖人id INTEGER, -- 获奖人id\n);\n-- 人物公司职位.公司id can be joined with 公司.公司\n-- 历届经济人物获奖名单.获奖人id can be joined with 企业人物.企业人物\n-- 人物公司职位.人物id can be joined with 企业人物.企业人物", "columns_en": {"词条id": "词条id", "姓名": "姓名", "性别": "性别", "年龄": "年龄", "出生地": "出生地", "民族": "民族", "毕业院校": "毕业院校", "名称": "名称", "成立时间": "成立时间", "年营业额": "年营业额", "员工数": "员工数", "市值": "市值", "世界500强排名": "世界500强排名", "人物id": "人物id", "公司id": "公司id", "职位": "职位", "年份": "年份", "奖项名称": "奖项名称", "获奖人id": "获奖人id"}, "table_en": {"企业人物": "企业人物", "公司": "公司", "人物公司职位": "人物公司职位", "历届经济人物获奖名单": "历届经济人物获奖名单"}}, "大麦网话剧": {"sqlite": "CREATE TABLE 话剧 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  演出时长 INTEGER, -- 演出时长\n  剧目亮点 VARCHAR(50), -- 剧目亮点\n  演出团队 VARCHAR(50), -- 演出团队\n  导演 VARCHAR(50), -- 导演\n  VIP票余量 INTEGER, -- VIP票余量\n  888票价余量 INTEGER, -- 888票价余量\n  688票价余量 INTEGER, -- 688票价余量\n  488票价余量 INTEGER, -- 488票价余量\n  288票价余量 INTEGER, -- 288票价余量\n  188票价余量 INTEGER, -- 188票价余量\n  100票价余量 INTEGER, -- 100票价余量\n);\nCREATE TABLE 话剧一周上映 (\n  话剧id INTEGER PRIMARY KEY, -- 话剧id\n  上映日期 DATETIME, -- 上映日期\n  时间段 DATETIME, -- 时间段\n  演出场馆 VARCHAR(50), -- 演出场馆\n);\nCREATE TABLE 上映城市 (\n  话剧id INTEGER PRIMARY KEY, -- 话剧id\n  城市 VARCHAR(50), -- 城市\n  上映场次 INTEGER, -- 上映场次\n  上映日期 DATETIME, -- 上映日期\n);\nCREATE TABLE 音乐剧 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  演出时长 INTEGER, -- 演出时长\n  演出场馆 VARCHAR(50), -- 演出场馆\n  演出城市 VARCHAR(50), -- 演出城市\n  总票数 INTEGER, -- 总票数\n  演出语言 VARCHAR(50), -- 演出语言\n  导演 VARCHAR(50), -- 导演\n  总场数 INTEGER, -- 总场数\n);\nCREATE TABLE 音乐剧演出 (\n  音乐剧id INTEGER PRIMARY KEY, -- 音乐剧id\n  场次 INTEGER, -- 场次\n  演出日期 DATETIME, -- 演出日期\n  演出时间段 DATETIME, -- 演出时间段\n  主要演员 VARCHAR(50), -- 主要演员\n);\n-- 话剧一周上映.话剧id can be joined with 话剧.话剧\n-- 音乐剧演出.音乐剧id can be joined with 音乐剧.音乐剧\n-- 上映城市.话剧id can be joined with 话剧.话剧", "columns_en": {"词条id": "词条id", "名称": "名称", "演出时长": "演出时长", "剧目亮点": "剧目亮点", "演出团队": "演出团队", "导演": "导演", "VIP票余量": "VIP票余量", "888票价余量": "888票价余量", "688票价余量": "688票价余量", "488票价余量": "488票价余量", "288票价余量": "288票价余量", "188票价余量": "188票价余量", "100票价余量": "100票价余量", "话剧id": "话剧id", "上映日期": "上映日期", "时间段": "时间段", "演出场馆": "演出场馆", "城市": "城市", "上映场次": "上映场次", "演出城市": "演出城市", "总票数": "总票数", "演出语言": "演出语言", "总场数": "总场数", "音乐剧id": "音乐剧id", "场次": "场次", "演出日期": "演出日期", "演出时间段": "演出时间段", "主要演员": "主要演员"}, "table_en": {"话剧": "话剧", "话剧一周上映": "话剧一周上映", "上映城市": "上映城市", "音乐剧": "音乐剧", "音乐剧演出": "音乐剧演出"}}, "中国餐饮公司": {"sqlite": "CREATE TABLE 城市 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  所属省份 VARCHAR(50), -- 所属省份\n  餐饮收入 INTEGER, -- 餐饮收入\n  同比增长 INTEGER, -- 同比增长\n);\nCREATE TABLE 餐饮公司 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  总部城市id VARCHAR(50), -- 总部城市id\n  所属集团 VARCHAR(50), -- 所属集团\n  上市股市 VARCHAR(50), -- 上市股市\n  经营范围 VARCHAR(50), -- 经营范围\n  经营年数 INTEGER, -- 经营年数\n);\nCREATE TABLE 餐饮公司城市连锁 (\n  公司id INTEGER PRIMARY KEY, -- 公司id\n  城市id INTEGER, -- 城市id\n  分店数量 INTEGER, -- 分店数量\n  占地面积 INTEGER, -- 占地面积\n  餐位数量 INTEGER, -- 餐位数量\n  员工数量 INTEGER, -- 员工数量\n);\nCREATE TABLE 餐饮公司城市消费 (\n  公司id INTEGER PRIMARY KEY, -- 公司id\n  城市id INTEGER, -- 城市id\n  总消费额 INTEGER, -- 总消费额\n  人均消费额 INTEGER, -- 人均消费额\n  人气 INTEGER, -- 人气\n  排名 INTEGER, -- 排名\n);\n-- 餐饮公司城市消费.城市id can be joined with 城市.城市\n-- 餐饮公司.总部城市id can be joined with 城市.城市\n-- 餐饮公司城市消费.公司id can be joined with 餐饮公司.餐饮公司\n-- 餐饮公司城市连锁.公司id can be joined with 餐饮公司.餐饮公司\n-- 餐饮公司城市连锁.城市id can be joined with 城市.城市", "columns_en": {"词条id": "词条id", "名称": "名称", "所属省份": "所属省份", "餐饮收入": "餐饮收入", "同比增长": "同比增长", "总部城市id": "总部城市id", "所属集团": "所属集团", "上市股市": "上市股市", "经营范围": "经营范围", "经营年数": "经营年数", "公司id": "公司id", "城市id": "城市id", "分店数量": "分店数量", "占地面积": "占地面积", "餐位数量": "餐位数量", "员工数量": "员工数量", "总消费额": "总消费额", "人均消费额": "人均消费额", "人气": "人气", "排名": "排名"}, "table_en": {"城市": "城市", "餐饮公司": "餐饮公司", "餐饮公司城市连锁": "餐饮公司城市连锁", "餐饮公司城市消费": "餐饮公司城市消费"}}, "福利及法规": {"sqlite": "CREATE TABLE 各国假期 (\n  国家 VARCHAR(50) PRIMARY KEY, -- 国家\n  假期总天数 INTEGER, -- 假期总天数\n  带薪年假 INTEGER, -- 带薪年假\n  公共假期 INTEGER, -- 公共假期\n  排名 INTEGER, -- 排名\n);\nCREATE TABLE 各国产假 (\n  国家 VARCHAR(50) PRIMARY KEY, -- 国家\n  产假总天数 INTEGER, -- 产假总天数\n  工资比例 INTEGER, -- 工资比例\n);\nCREATE TABLE 各国税率 (\n  国家 VARCHAR(50) PRIMARY KEY, -- 国家\n  年总税率 INTEGER, -- 年总税率\n  个税最高税率 INTEGER, -- 个税最高税率\n  社保费率 INTEGER, -- 社保费率\n  企业所得税税率 INTEGER, -- 企业所得税税率\n);\nCREATE TABLE 各国医疗支出占比 (\n  国家 VARCHAR(50) PRIMARY KEY, -- 国家\n  医疗支出占GDP比重 INTEGER, -- 医疗支出占GDP比重\n);\n", "columns_en": {"国家": "国家", "假期总天数": "假期总天数", "带薪年假": "带薪年假", "公共假期": "公共假期", "排名": "排名", "产假总天数": "产假总天数", "工资比例": "工资比例", "年总税率": "年总税率", "个税最高税率": "个税最高税率", "社保费率": "社保费率", "企业所得税税率": "企业所得税税率", "医疗支出占GDP比重": "医疗支出占GDP比重"}, "table_en": {"各国假期": "各国假期", "各国产假": "各国产假", "各国税率": "各国税率", "各国医疗支出占比": "各国医疗支出占比"}}, "NLP会议": {"sqlite": "CREATE TABLE 会议 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  成立时间 DATETIME, -- 成立时间\n  级别 VARCHAR(50), -- 级别\n);\nCREATE TABLE 各会议论文 (\n  会议id INTEGER PRIMARY KEY, -- 会议id\n  年份 DATETIME, -- 年份\n  长文提交量 INTEGER, -- 长文提交量\n  长文录取率 INTEGER, -- 长文录取率\n  短文提交量 INTEGER, -- 短文提交量\n  短文录取率 INTEGER, -- 短文录取率\n);\nCREATE TABLE 各会议论文大洲分布 (\n  会议id INTEGER PRIMARY KEY, -- 会议id\n  年份 DATETIME, -- 年份\n  大洲 VARCHAR(50), -- 大洲\n  提交数量占比 INTEGER, -- 提交数量占比\n);\nCREATE TABLE 各会议论文国家分布 (\n  会议id INTEGER PRIMARY KEY, -- 会议id\n  年份 DATETIME, -- 年份\n  国家 VARCHAR(50), -- 国家\n  提交数量占比 INTEGER, -- 提交数量占比\n);\nCREATE TABLE 2019年会议各方向分布 (\n  方向名称 VARCHAR(50) PRIMARY KEY, -- 方向名称\n  会议id INTEGER, -- 会议id\n  长文提交量 INTEGER, -- 长文提交量\n  长文录取率 INTEGER, -- 长文录取率\n  短文提交量 INTEGER, -- 短文提交量\n  短文录取率 INTEGER, -- 短文录取率\n);\n-- 各会议论文.会议id can be joined with 会议.会议\n-- 各会议论文大洲分布.会议id can be joined with 会议.会议\n-- 各会议论文国家分布.会议id can be joined with 会议.会议\n-- 2019年会议各方向分布.会议id can be joined with 会议.会议", "columns_en": {"词条id": "词条id", "名称": "名称", "成立时间": "成立时间", "级别": "级别", "会议id": "会议id", "年份": "年份", "长文提交量": "长文提交量", "长文录取率": "长文录取率", "短文提交量": "短文提交量", "短文录取率": "短文录取率", "大洲": "大洲", "提交数量占比": "提交数量占比", "国家": "国家", "方向名称": "方向名称"}, "table_en": {"会议": "会议", "各会议论文": "各会议论文", "各会议论文大洲分布": "各会议论文大洲分布", "各会议论文国家分布": "各会议论文国家分布", "2019年会议各方向分布": "2019年会议各方向分布"}}, "软件排行": {"sqlite": "CREATE TABLE 应用商店 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  应用软件数 INTEGER, -- 应用软件数\n  累计下载次数 INTEGER, -- 累计下载次数\n);\nCREATE TABLE 应用商店支持国家 (\n  应用商店id INTEGER PRIMARY KEY, -- 应用商店id\n  国家 VARCHAR(50), -- 国家\n  用户是否可以购买应用程序 BINARY, -- 用户是否可以购买应用程序\n  开发人员是否可以出售应用程序 BINARY, -- 开发人员是否可以出售应用程序\n);\nCREATE TABLE 软件 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  用途 VARCHAR(50), -- 用途\n);\nCREATE TABLE 软件下载量 (\n  软件id INTEGER PRIMARY KEY, -- 软件id\n  应用商店id INTEGER, -- 应用商店id\n  下载量 INTEGER, -- 下载量\n  评价人数 INTEGER, -- 评价人数\n  好评数 INTEGER, -- 好评数\n);\n-- 应用商店支持国家.应用商店id can be joined with 应用商店.应用商店\n-- 软件下载量.软件id can be joined with 软件.软件\n-- 软件下载量.应用商店id can be joined with 应用商店.应用商店", "columns_en": {"词条id": "词条id", "名称": "名称", "应用软件数": "应用软件数", "累计下载次数": "累计下载次数", "应用商店id": "应用商店id", "国家": "国家", "用户是否可以购买应用程序": "用户是否可以购买应用程序", "开发人员是否可以出售应用程序": "开发人员是否可以出售应用程序", "用途": "用途", "软件id": "软件id", "下载量": "下载量", "评价人数": "评价人数", "好评数": "好评数"}, "table_en": {"应用商店": "应用商店", "应用商店支持国家": "应用商店支持国家", "软件": "软件", "软件下载量": "软件下载量"}}, "公务员考试": {"sqlite": "CREATE TABLE 各省份报名人数 (\n  省份 VARCHAR(50) PRIMARY KEY, -- 省份\n  岗位数 INTEGER, -- 岗位数\n  招考人数 INTEGER, -- 招考人数\n  报名人数 INTEGER, -- 报名人数\n  0报名职位数量 INTEGER, -- 0报名职位数量\n  合格人数 INTEGER, -- 合格人数\n  0合格职位数量 INTEGER, -- 0合格职位数量\n  竞争比 INTEGER, -- 竞争比\n);\nCREATE TABLE 各职位报名人数 (\n  职位名称 VARCHAR(50) PRIMARY KEY, -- 职位名称\n  部门名称 VARCHAR(50), -- 部门名称\n  所属地区 VARCHAR(50), -- 所属地区\n  招考人数 INTEGER, -- 招考人数\n  报考人数 INTEGER, -- 报考人数\n  合格人数 INTEGER, -- 合格人数\n);\nCREATE TABLE 各国野鸡大学数量 (\n  国家 VARCHAR(50) PRIMARY KEY, -- 国家\n  大学数量 INTEGER, -- 大学数量\n  野鸡大学数量 INTEGER, -- 野鸡大学数量\n);\nCREATE TABLE 中国各城市野鸡大学数量 (\n  城市 VARCHAR(50) PRIMARY KEY, -- 城市\n  野鸡大学数量 INTEGER, -- 野鸡大学数量\n  占比 INTEGER, -- 占比\n);\n-- 各职位报名人数.所属地区 can be joined with 各省份报名人数.各省份报名人数", "columns_en": {"省份": "省份", "岗位数": "岗位数", "招考人数": "招考人数", "报名人数": "报名人数", "0报名职位数量": "0报名职位数量", "合格人数": "合格人数", "0合格职位数量": "0合格职位数量", "竞争比": "竞争比", "职位名称": "职位名称", "部门名称": "部门名称", "所属地区": "所属地区", "报考人数": "报考人数", "国家": "国家", "大学数量": "大学数量", "野鸡大学数量": "野鸡大学数量", "城市": "城市", "占比": "占比"}, "table_en": {"各省份报名人数": "各省份报名人数", "各职位报名人数": "各职位报名人数", "各国野鸡大学数量": "各国野鸡大学数量", "中国各城市野鸡大学数量": "中国各城市野鸡大学数量"}}, "车展": {"sqlite": "CREATE TABLE 车展 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  车展时间 DATETIME, -- 车展时间\n  参展天数 INTEGER, -- 参展天数\n  车展地点 VARCHAR(50), -- 车展地点\n  位于城市 VARCHAR(50), -- 位于城市\n  参展品牌数 INTEGER, -- 参展品牌数\n);\nCREATE TABLE 汽车品牌 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  所属公司 VARCHAR(50), -- 所属公司\n  最低价格 INTEGER, -- 最低价格\n  最高价格 INTEGER, -- 最高价格\n  代言人 VARCHAR(50), -- 代言人\n);\nCREATE TABLE 车展参展品牌 (\n  品牌id INTEGER PRIMARY KEY, -- 品牌id\n  车展id INTEGER, -- 车展id\n  站台模特 VARCHAR(50), -- 站台模特\n  热度排名 INTEGER, -- 热度排名\n);\n-- 车展参展品牌.品牌id can be joined with 汽车品牌.汽车品牌\n-- 车展参展品牌.车展id can be joined with 车展.车展", "columns_en": {"词条id": "词条id", "名称": "名称", "车展时间": "车展时间", "参展天数": "参展天数", "车展地点": "车展地点", "位于城市": "位于城市", "参展品牌数": "参展品牌数", "所属公司": "所属公司", "最低价格": "最低价格", "最高价格": "最高价格", "代言人": "代言人", "品牌id": "品牌id", "车展id": "车展id", "站台模特": "站台模特", "热度排名": "热度排名"}, "table_en": {"车展": "车展", "汽车品牌": "汽车品牌", "车展参展品牌": "车展参展品牌"}}, "中国电视剧奖项": {"sqlite": "CREATE TABLE 中国电视剧奖 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  主办单位 VARCHAR(50), -- 主办单位\n  创办时间 DATETIME, -- 创办时间\n);\nCREATE TABLE 演职员 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  姓名 VARCHAR(50), -- 姓名\n  出生地 VARCHAR(50), -- 出生地\n  出生日期 DATETIME, -- 出生日期\n  毕业院校 VARCHAR(50), -- 毕业院校\n  职业 VARCHAR(50), -- 职业\n);\nCREATE TABLE 电视剧 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  类型 VARCHAR(50), -- 类型\n  首播时间 DATETIME, -- 首播时间\n  集数 INTEGER, -- 集数\n  豆瓣评分 INTEGER, -- 豆瓣评分\n);\nCREATE TABLE 历届颁奖晚会 (\n  年份 DATETIME PRIMARY KEY, -- 年份\n  届数 INTEGER, -- 届数\n  电视剧奖id INTEGER, -- 电视剧奖id\n  颁奖地点 VARCHAR(50), -- 颁奖地点\n);\nCREATE TABLE 历届获奖演职员名单 (\n  年份 DATETIME PRIMARY KEY, -- 年份\n  届数 INTEGER, -- 届数\n  电视剧奖id INTEGER, -- 电视剧奖id\n  具体奖项 VARCHAR(50), -- 具体奖项\n  获奖人id INTEGER, -- 获奖人id\n  来自电视剧id INTEGER, -- 来自电视剧id\n);\nCREATE TABLE 历届获奖影视剧名单 (\n  年份 DATETIME PRIMARY KEY, -- 年份\n  届数 INTEGER, -- 届数\n  电视剧奖id INTEGER, -- 电视剧奖id\n  具体奖项 VARCHAR(50), -- 具体奖项\n  获奖电视剧id INTEGER, -- 获奖电视剧id\n);\n-- 历届颁奖晚会.电视剧奖id can be joined with 中国电视剧奖.中国电视剧奖\n-- 历届获奖演职员名单.电视剧奖id can be joined with 中国电视剧奖.中国电视剧奖\n-- 历届获奖演职员名单.获奖人id can be joined with 演职员.演职员\n-- 历届获奖影视剧名单.获奖电视剧id can be joined with 电视剧.电视剧\n-- 历届获奖影视剧名单.电视剧奖id can be joined with 中国电视剧奖.中国电视剧奖", "columns_en": {"词条id": "词条id", "名称": "名称", "主办单位": "主办单位", "创办时间": "创办时间", "姓名": "姓名", "出生地": "出生地", "出生日期": "出生日期", "毕业院校": "毕业院校", "职业": "职业", "类型": "类型", "首播时间": "首播时间", "集数": "集数", "豆瓣评分": "豆瓣评分", "年份": "年份", "届数": "届数", "电视剧奖id": "电视剧奖id", "颁奖地点": "颁奖地点", "具体奖项": "具体奖项", "获奖人id": "获奖人id", "来自电视剧id": "来自电视剧id", "获奖电视剧id": "获奖电视剧id"}, "table_en": {"中国电视剧奖": "中国电视剧奖", "演职员": "演职员", "电视剧": "电视剧", "历届颁奖晚会": "历届颁奖晚会", "历届获奖演职员名单": "历届获奖演职员名单", "历届获奖影视剧名单": "历届获奖影视剧名单"}}, "小说改编电视剧": {"sqlite": "CREATE TABLE 电视剧 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  剧名 VARCHAR(50), -- 剧名\n  首播时间 DATETIME, -- 首播时间\n  集数 INTEGER, -- 集数\n);\nCREATE TABLE 小说 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  小说名 VARCHAR(50), -- 小说名\n  作者 VARCHAR(50), -- 作者\n  字数 INTEGER, -- 字数\n  状态 VARCHAR(50), -- 状态\n);\nCREATE TABLE 改编的电视剧 (\n  小说id INTEGER PRIMARY KEY, -- 小说id\n  电视剧id INTEGER, -- 电视剧id\n  评分 INTEGER, -- 评分\n);\n-- 改编的电视剧.电视剧id can be joined with 电视剧.电视剧\n-- 改编的电视剧.小说id can be joined with 小说.小说", "columns_en": {"词条id": "词条id", "剧名": "剧名", "首播时间": "首播时间", "集数": "集数", "小说名": "小说名", "作者": "作者", "字数": "字数", "状态": "状态", "小说id": "小说id", "电视剧id": "电视剧id", "评分": "评分"}, "table_en": {"电视剧": "电视剧", "小说": "小说", "改编的电视剧": "改编的电视剧"}}, "毕业生薪资": {"sqlite": "CREATE TABLE 学校 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  类型 VARCHAR(50), -- 类型\n  所在城市 VARCHAR(50), -- 所在城市\n  所属省份 VARCHAR(50), -- 所属省份\n  是否985院校 BINARY, -- 是否985院校\n  是否211院校 BINARY, -- 是否211院校\n  2016届平均月薪 INTEGER, -- 2016届平均月薪\n  2014届平均月薪 INTEGER, -- 2014届平均月薪\n  2012届平均月薪 INTEGER, -- 2012届平均月薪\n);\nCREATE TABLE 学校毕业人数 (\n  学校id INTEGER PRIMARY KEY, -- 学校id\n  学历 VARCHAR(50), -- 学历\n  2016届人数 INTEGER, -- 2016届人数\n  2014届人数 INTEGER, -- 2014届人数\n  2012届人数 INTEGER, -- 2012届人数\n);\nCREATE TABLE 专业 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  学科类型 VARCHAR(50), -- 学科类型\n  冷热门 BINARY, -- 冷热门\n);\nCREATE TABLE 学校专业 (\n  专业id INTEGER PRIMARY KEY, -- 专业id\n  学校id INTEGER, -- 学校id\n  是否重点专业 BINARY, -- 是否重点专业\n);\nCREATE TABLE 专业就业情况 (\n  专业id INTEGER PRIMARY KEY, -- 专业id\n  2016届平均月薪 INTEGER, -- 2016届平均月薪\n  2014届平均月薪 INTEGER, -- 2014届平均月薪\n  2012届平均月薪 INTEGER, -- 2012届平均月薪\n  2016届就业率 INTEGER, -- 2016届就业率\n  2014届就业率 INTEGER, -- 2014届就业率\n  2012届就业率 INTEGER, -- 2012届就业率\n);\n-- 学校毕业人数.学校id can be joined with 学校.学校\n-- 学校专业.专业id can be joined with 专业.专业\n-- 专业就业情况.专业id can be joined with 专业.专业\n-- 学校专业.学校id can be joined with 学校.学校", "columns_en": {"词条id": "词条id", "名称": "名称", "类型": "类型", "所在城市": "所在城市", "所属省份": "所属省份", "是否985院校": "是否985院校", "是否211院校": "是否211院校", "2016届平均月薪": "2016届平均月薪", "2014届平均月薪": "2014届平均月薪", "2012届平均月薪": "2012届平均月薪", "学校id": "学校id", "学历": "学历", "2016届人数": "2016届人数", "2014届人数": "2014届人数", "2012届人数": "2012届人数", "学科类型": "学科类型", "冷热门": "冷热门", "专业id": "专业id", "是否重点专业": "是否重点专业", "2016届就业率": "2016届就业率", "2014届就业率": "2014届就业率", "2012届就业率": "2012届就业率"}, "table_en": {"学校": "学校", "学校毕业人数": "学校毕业人数", "专业": "专业", "学校专业": "学校专业", "专业就业情况": "专业就业情况"}}, "中国文学奖": {"sqlite": "CREATE TABLE 文学奖 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  设立时间 DATETIME, -- 设立时间\n  设立原因 VARCHAR(50), -- 设立原因\n  举办间隔年限 INTEGER, -- 举办间隔年限\n);\nCREATE TABLE 文学奖项颁奖奖项 (\n  文学奖id INTEGER PRIMARY KEY, -- 文学奖id\n  奖项 VARCHAR(50), -- 奖项\n);\nCREATE TABLE 文学作品 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  作者 INTEGER, -- 作者\n  创作年代 INTEGER, -- 创作年代\n  首版时间 DATETIME, -- 首版时间\n  字数 VARCHAR(50), -- 字数\n);\nCREATE TABLE 文学奖获奖名单 (\n  届数 INTEGER PRIMARY KEY, -- 届数\n  作品id INTEGER, -- 作品id\n  作者 VARCHAR(50), -- 作者\n  出版社 VARCHAR(50), -- 出版社\n);\n-- 文学奖获奖名单.作品id can be joined with 文学作品.文学作品\n-- 文学奖项颁奖奖项.文学奖id can be joined with 文学奖.文学奖", "columns_en": {"词条id": "词条id", "名称": "名称", "设立时间": "设立时间", "设立原因": "设立原因", "举办间隔年限": "举办间隔年限", "文学奖id": "文学奖id", "奖项": "奖项", "作者": "作者", "创作年代": "创作年代", "首版时间": "首版时间", "字数": "字数", "届数": "届数", "作品id": "作品id", "出版社": "出版社"}, "table_en": {"文学奖": "文学奖", "文学奖项颁奖奖项": "文学奖项颁奖奖项", "文学作品": "文学作品", "文学奖获奖名单": "文学奖获奖名单"}}, "互联网企业": {"sqlite": "CREATE TABLE 公司 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  总部地点 VARCHAR(50), -- 总部地点\n  成立时间 DATETIME, -- 成立时间\n  创始人 VARCHAR(50), -- 创始人\n  首席执行官 DATETIME, -- 首席执行官\n  年营业额 INTEGER, -- 年营业额\n  员工数 INTEGER, -- 员工数\n);\nCREATE TABLE 品牌 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  成立时间 DATETIME, -- 成立时间\n  所属公司id VARCHAR(50), -- 所属公司id\n  法定代表人 VARCHAR(50), -- 法定代表人\n  注册资本 INTEGER, -- 注册资本\n);\nCREATE TABLE 公司品牌历年收入 (\n  年份 DATETIME PRIMARY KEY, -- 年份\n  品牌id INTEGER, -- 品牌id\n  营收 INTEGER, -- 营收\n  利润 INTEGER, -- 利润\n  营收同比增长 INTEGER, -- 营收同比增长\n  利润同比增长 INTEGER, -- 利润同比增长\n);\nCREATE TABLE 公司各品牌收入排名 (\n  公司id INTEGER PRIMARY KEY, -- 公司id\n  品牌id INTEGER, -- 品牌id\n  营收占比 INTEGER, -- 营收占比\n  利润占比 INTEGER, -- 利润占比\n  支出占比 INTEGER, -- 支出占比\n);\n-- 品牌.所属公司id can be joined with 公司.公司\n-- 公司各品牌收入排名.公司id can be joined with 公司.公司\n-- 公司各品牌收入排名.品牌id can be joined with 品牌.品牌\n-- 公司品牌历年收入.品牌id can be joined with 品牌.品牌", "columns_en": {"词条id": "词条id", "名称": "名称", "总部地点": "总部地点", "成立时间": "成立时间", "创始人": "创始人", "首席执行官": "首席执行官", "年营业额": "年营业额", "员工数": "员工数", "所属公司id": "所属公司id", "法定代表人": "法定代表人", "注册资本": "注册资本", "年份": "年份", "品牌id": "品牌id", "营收": "营收", "利润": "利润", "营收同比增长": "营收同比增长", "利润同比增长": "利润同比增长", "公司id": "公司id", "营收占比": "营收占比", "利润占比": "利润占比", "支出占比": "支出占比"}, "table_en": {"公司": "公司", "品牌": "品牌", "公司品牌历年收入": "公司品牌历年收入", "公司各品牌收入排名": "公司各品牌收入排名"}}, "中国传统节日": {"sqlite": "CREATE TABLE 传统节日 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  节日时间 DATETIME, -- 节日时间\n  起源时间 VARCHAR(50), -- 起源时间\n);\nCREATE TABLE 节日流行国家 (\n  节日id INTEGER PRIMARY KEY, -- 节日id\n  国家 VARCHAR(50), -- 国家\n  活动 VARCHAR(50), -- 活动\n);\nCREATE TABLE 节日饮食文化 (\n  节日id INTEGER PRIMARY KEY, -- 节日id\n  城市 VARCHAR(50), -- 城市\n  饮食 VARCHAR(50), -- 饮食\n);\n-- 节日流行国家.节日id can be joined with 传统节日.传统节日\n-- 节日饮食文化.节日id can be joined with 传统节日.传统节日", "columns_en": {"词条id": "词条id", "名称": "名称", "节日时间": "节日时间", "起源时间": "起源时间", "节日id": "节日id", "国家": "国家", "活动": "活动", "城市": "城市", "饮食": "饮食"}, "table_en": {"传统节日": "传统节日", "节日流行国家": "节日流行国家", "节日饮食文化": "节日饮食文化"}}, "各城市天气": {"sqlite": "CREATE TABLE 城市温度 (\n  城市 VARCHAR(50) PRIMARY KEY, -- 城市\n  夏季平均温度 INTEGER, -- 夏季平均温度\n  冬季平均温度 INTEGER, -- 冬季平均温度\n  年平均温度 INTEGER, -- 年平均温度\n);\nCREATE TABLE 各城市极端高温 (\n  城市 VARCHAR(50) PRIMARY KEY, -- 城市\n  极端高温 INTEGER, -- 极端高温\n  出现日期 DATETIME, -- 出现日期\n);\nCREATE TABLE 各城市极端低温 (\n  城市 VARCHAR(50) PRIMARY KEY, -- 城市\n  极端低温 INTEGER, -- 极端低温\n  出现日期 DATETIME, -- 出现日期\n);\nCREATE TABLE 各城市各月平均气温 (\n  城市 VARCHAR(50) PRIMARY KEY, -- 城市\n  一月 INTEGER, -- 一月\n  二月 INTEGER, -- 二月\n  三月 INTEGER, -- 三月\n  四月 INTEGER, -- 四月\n  五月 INTEGER, -- 五月\n  六月 INTEGER, -- 六月\n  七月 INTEGER, -- 七月\n  八月 INTEGER, -- 八月\n  九月 INTEGER, -- 九月\n  十月 INTEGER, -- 十月\n  十一月 INTEGER, -- 十一月\n  十二月 INTEGER, -- 十二月\n);\nCREATE TABLE 各城市各月平均降水量mm (\n  城市 VARCHAR(50) PRIMARY KEY, -- 城市\n  一月 INTEGER, -- 一月\n  二月 INTEGER, -- 二月\n  三月 INTEGER, -- 三月\n  四月 INTEGER, -- 四月\n  五月 INTEGER, -- 五月\n  六月 INTEGER, -- 六月\n  七月 INTEGER, -- 七月\n  八月 INTEGER, -- 八月\n  九月 INTEGER, -- 九月\n  十月 INTEGER, -- 十月\n  十一月 INTEGER, -- 十一月\n  十二月 INTEGER, -- 十二月\n);\n", "columns_en": {"城市": "城市", "夏季平均温度": "夏季平均温度", "冬季平均温度": "冬季平均温度", "年平均温度": "年平均温度", "极端高温": "极端高温", "出现日期": "出现日期", "极端低温": "极端低温", "一月": "一月", "二月": "二月", "三月": "三月", "四月": "四月", "五月": "五月", "六月": "六月", "七月": "七月", "八月": "八月", "九月": "九月", "十月": "十月", "十一月": "十一月", "十二月": "十二月"}, "table_en": {"城市温度": "城市温度", "各城市极端高温": "各城市极端高温", "各城市极端低温": "各城市极端低温", "各城市各月平均气温": "各城市各月平均气温", "各城市各月平均降水量mm": "各城市各月平均降水量mm"}}, "世界旅游城市": {"sqlite": "CREATE TABLE 城市 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  国家 VARCHAR(50), -- 国家\n  2017年世界排名 INTEGER, -- 2017年世界排名\n  2018年世界排名 INTEGER, -- 2018年世界排名\n  2019年世界排名 INTEGER, -- 2019年世界排名\n);\nCREATE TABLE 旅游人数 (\n  年份 DATETIME PRIMARY KEY, -- 年份\n  城市id INTEGER, -- 城市id\n  接待人口 INTEGER, -- 接待人口\n  收入 INTEGER, -- 收入\n);\n-- 旅游人数.城市id can be joined with 城市.城市", "columns_en": {"词条id": "词条id", "名称": "名称", "国家": "国家", "2017年世界排名": "2017年世界排名", "2018年世界排名": "2018年世界排名", "2019年世界排名": "2019年世界排名", "年份": "年份", "城市id": "城市id", "接待人口": "接待人口", "收入": "收入"}, "table_en": {"城市": "城市", "旅游人数": "旅游人数"}}, "用户出行用车": {"sqlite": "CREATE TABLE 滴滴打车出行 (\n  季节 VARCHAR(50) PRIMARY KEY, -- 季节\n  是否工作日 BINARY, -- 是否工作日\n  温度 INTEGER, -- 温度\n  湿度 INTEGER, -- 湿度\n  风速 INTEGER, -- 风速\n  日订单数量 INTEGER, -- 日订单数量\n  人均打车次数 INTEGER, -- 人均打车次数\n  平均等待时间 INTEGER, -- 平均等待时间\n);\nCREATE TABLE 共享单车出行 (\n  季节 VARCHAR(50) PRIMARY KEY, -- 季节\n  是否工作日 BINARY, -- 是否工作日\n  温度 INTEGER, -- 温度\n  湿度 INTEGER, -- 湿度\n  风速 INTEGER, -- 风速\n  人均骑车次数 INTEGER, -- 人均骑车次数\n  人均骑车距离 INTEGER, -- 人均骑车距离\n);\n", "columns_en": {"季节": "季节", "是否工作日": "是否工作日", "温度": "温度", "湿度": "湿度", "风速": "风速", "日订单数量": "日订单数量", "人均打车次数": "人均打车次数", "平均等待时间": "平均等待时间", "人均骑车次数": "人均骑车次数", "人均骑车距离": "人均骑车距离"}, "table_en": {"滴滴打车出行": "滴滴打车出行", "共享单车出行": "共享单车出行"}}, "劳伦斯世界体育奖": {"sqlite": "CREATE TABLE 运动员 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  姓名 VARCHAR(50), -- 姓名\n  性别 VARCHAR(50), -- 性别\n  国籍 VARCHAR(50), -- 国籍\n  体育项目 VARCHAR(50), -- 体育项目\n);\nCREATE TABLE 劳伦斯提名名单 (\n  年份 DATETIME PRIMARY KEY, -- 年份\n  提名人id INTEGER, -- 提名人id\n  提名奖项 VARCHAR(50), -- 提名奖项\n  提名理由 VARCHAR(50), -- 提名理由\n);\nCREATE TABLE 劳伦斯获奖名单 (\n  年份 DATETIME PRIMARY KEY, -- 年份\n  奖项 VARCHAR(50), -- 奖项\n  获奖人id INTEGER, -- 获奖人id\n);\nCREATE TABLE 劳伦斯获奖国家名单 (\n  国家 VARCHAR(50) PRIMARY KEY, -- 国家\n  获奖人性别 VARCHAR(50), -- 获奖人性别\n  获奖人数 INTEGER, -- 获奖人数\n  所占比例 INTEGER, -- 所占比例\n);\n-- 劳伦斯获奖名单.获奖人id can be joined with 运动员.运动员\n-- 劳伦斯提名名单.提名人id can be joined with 运动员.运动员", "columns_en": {"词条id": "词条id", "姓名": "姓名", "性别": "性别", "国籍": "国籍", "体育项目": "体育项目", "年份": "年份", "提名人id": "提名人id", "提名奖项": "提名奖项", "提名理由": "提名理由", "奖项": "奖项", "获奖人id": "获奖人id", "国家": "国家", "获奖人性别": "获奖人性别", "获奖人数": "获奖人数", "所占比例": "所占比例"}, "table_en": {"运动员": "运动员", "劳伦斯提名名单": "劳伦斯提名名单", "劳伦斯获奖名单": "劳伦斯获奖名单", "劳伦斯获奖国家名单": "劳伦斯获奖国家名单"}}, "城市市民市容": {"sqlite": "CREATE TABLE 省份 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  南北区域 VARCHAR(50), -- 南北区域\n  东西区域 VARCHAR(50), -- 东西区域\n  5区域 VARCHAR(50), -- 5区域\n);\nCREATE TABLE 平均身高和寿命 (\n  省份id INTEGER PRIMARY KEY, -- 省份id\n  性别 VARCHAR(50), -- 性别\n  平均身高 INTEGER, -- 平均身高\n  平均寿命 INTEGER, -- 平均寿命\n);\nCREATE TABLE 各省美女比例 (\n  省份id INTEGER PRIMARY KEY, -- 省份id\n  评价者来自区域 VARCHAR(50), -- 评价者来自区域\n  美女比例 INTEGER, -- 美女比例\n  美女平均颜值分数 INTEGER, -- 美女平均颜值分数\n);\nCREATE TABLE 各省市容评分 (\n  省份id INTEGER PRIMARY KEY, -- 省份id\n  评价者来自区域 VARCHAR(50), -- 评价者来自区域\n  市容评分 INTEGER, -- 市容评分\n  市民素质评分 INTEGER, -- 市民素质评分\n);\nCREATE TABLE 民风彪悍十大城市 (\n  城市名称 VARCHAR(50) PRIMARY KEY, -- 城市名称\n  所属省份id INTEGER, -- 所属省份id\n  排名 INTEGER, -- 排名\n);\n-- 民风彪悍十大城市.所属省份id can be joined with 省份.省份\n-- 各省市容评分.省份id can be joined with 省份.省份\n-- 平均身高和寿命.省份id can be joined with 省份.省份\n-- 各省美女比例.省份id can be joined with 省份.省份", "columns_en": {"词条id": "词条id", "名称": "名称", "南北区域": "南北区域", "东西区域": "东西区域", "5区域": "5区域", "省份id": "省份id", "性别": "性别", "平均身高": "平均身高", "平均寿命": "平均寿命", "评价者来自区域": "评价者来自区域", "美女比例": "美女比例", "美女平均颜值分数": "美女平均颜值分数", "市容评分": "市容评分", "市民素质评分": "市民素质评分", "城市名称": "城市名称", "所属省份id": "所属省份id", "排名": "排名"}, "table_en": {"省份": "省份", "平均身高和寿命": "平均身高和寿命", "各省美女比例": "各省美女比例", "各省市容评分": "各省市容评分", "民风彪悍十大城市": "民风彪悍十大城市"}}, "快递公司": {"sqlite": "CREATE TABLE 快递公司 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  总部地点 VARCHAR(50), -- 总部地点\n  成立时间 DATETIME, -- 成立时间\n  员工数量 INTEGER, -- 员工数量\n  运输车辆数 INTEGER, -- 运输车辆数\n  覆盖城市数量 INTEGER, -- 覆盖城市数量\n  网点数量 INTEGER, -- 网点数量\n);\nCREATE TABLE 省份 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  所属区域 VARCHAR(50), -- 所属区域\n);\nCREATE TABLE 快递费 (\n  快递公司id INTEGER PRIMARY KEY, -- 快递公司id\n  区域 VARCHAR(50), -- 区域\n  起步价格 INTEGER, -- 起步价格\n  起步公斤数 INTEGER, -- 起步公斤数\n  每公斤价格 INTEGER, -- 每公斤价格\n);\nCREATE TABLE 包邮范围 (\n  快递公司id INTEGER PRIMARY KEY, -- 快递公司id\n  发货区域 VARCHAR(50), -- 发货区域\n  包邮区域 VARCHAR(50), -- 包邮区域\n);\n-- 快递费.区域 can be joined with 省份.省份\n-- 快递费.快递公司id can be joined with 快递公司.快递公司\n-- 包邮范围.包邮区域 can be joined with 省份.省份\n-- 包邮范围.快递公司id can be joined with 快递公司.快递公司\n-- 包邮范围.发货区域 can be joined with 省份.省份", "columns_en": {"词条id": "词条id", "名称": "名称", "总部地点": "总部地点", "成立时间": "成立时间", "员工数量": "员工数量", "运输车辆数": "运输车辆数", "覆盖城市数量": "覆盖城市数量", "网点数量": "网点数量", "所属区域": "所属区域", "快递公司id": "快递公司id", "区域": "区域", "起步价格": "起步价格", "起步公斤数": "起步公斤数", "每公斤价格": "每公斤价格", "发货区域": "发货区域", "包邮区域": "包邮区域"}, "table_en": {"快递公司": "快递公司", "省份": "省份", "快递费": "快递费", "包邮范围": "包邮范围"}}, "奥运会举办国": {"sqlite": "CREATE TABLE 夏季奥运会 (\n  届数 INTEGER PRIMARY KEY, -- 届数\n  奥运会 VARCHAR(50), -- 奥运会\n  举办国家 VARCHAR(50), -- 举办国家\n  举办城市 VARCHAR(50), -- 举办城市\n  口号 VARCHAR(50), -- 口号\n);\nCREATE TABLE 冬季奥运会 (\n  届数 INTEGER PRIMARY KEY, -- 届数\n  奥运会 VARCHAR(50), -- 奥运会\n  举办国家 VARCHAR(50), -- 举办国家\n  举办城市 VARCHAR(50), -- 举办城市\n);\nCREATE TABLE 奥运会申办国家 (\n  届数 INTEGER PRIMARY KEY, -- 届数\n  奥运会 VARCHAR(50), -- 奥运会\n  申办国家 VARCHAR(50), -- 申办国家\n  申办城市 VARCHAR(50), -- 申办城市\n  是否成功 BINARY, -- 是否成功\n);\n", "columns_en": {"届数": "届数", "奥运会": "奥运会", "举办国家": "举办国家", "举办城市": "举办城市", "口号": "口号", "申办国家": "申办国家", "申办城市": "申办城市", "是否成功": "是否成功"}, "table_en": {"夏季奥运会": "夏季奥运会", "冬季奥运会": "冬季奥运会", "奥运会申办国家": "奥运会申办国家"}}, "奢侈品消费": {"sqlite": "CREATE TABLE 奢侈品牌 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  国家 VARCHAR(50), -- 国家\n  熟识度 INTEGER, -- 熟识度\n  购买力排名 INTEGER, -- 购买力排名\n);\nCREATE TABLE 奢侈品消费国家 (\n  奢侈品id INTEGER PRIMARY KEY, -- 奢侈品id\n  国家 VARCHAR(50), -- 国家\n  年份 DATETIME, -- 年份\n  消费额 INTEGER, -- 消费额\n  消费额占比 INTEGER, -- 消费额占比\n);\nCREATE TABLE 奢侈品购买人群 (\n  奢侈品id INTEGER PRIMARY KEY, -- 奢侈品id\n  年龄段 VARCHAR(50), -- 年龄段\n  购买人数 INTEGER, -- 购买人数\n  人数占比 INTEGER, -- 人数占比\n  消费额 INTEGER, -- 消费额\n  消费额占比 INTEGER, -- 消费额占比\n);\nCREATE TABLE 奢侈品渠道 (\n  奢侈品id INTEGER PRIMARY KEY, -- 奢侈品id\n  了解渠道 VARCHAR(50), -- 了解渠道\n  人数占比 INTEGER, -- 人数占比\n);\nCREATE TABLE 奢侈品用户在意维度分布 (\n  年龄段 VARCHAR(50) PRIMARY KEY, -- 年龄段\n  看中维度 VARCHAR(50), -- 看中维度\n  人数占比 INTEGER, -- 人数占比\n);\n-- 奢侈品购买人群.奢侈品id can be joined with 奢侈品牌.奢侈品牌\n-- 奢侈品渠道.奢侈品id can be joined with 奢侈品牌.奢侈品牌\n-- 奢侈品消费国家.奢侈品id can be joined with 奢侈品牌.奢侈品牌", "columns_en": {"词条id": "词条id", "名称": "名称", "国家": "国家", "熟识度": "熟识度", "购买力排名": "购买力排名", "奢侈品id": "奢侈品id", "年份": "年份", "消费额": "消费额", "消费额占比": "消费额占比", "年龄段": "年龄段", "购买人数": "购买人数", "人数占比": "人数占比", "了解渠道": "了解渠道", "看中维度": "看中维度"}, "table_en": {"奢侈品牌": "奢侈品牌", "奢侈品消费国家": "奢侈品消费国家", "奢侈品购买人群": "奢侈品购买人群", "奢侈品渠道": "奢侈品渠道", "奢侈品用户在意维度分布": "奢侈品用户在意维度分布"}}, "洗衣机": {"sqlite": "CREATE TABLE 洗衣机品牌 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  所属公司 VARCHAR(50), -- 所属公司\n  成立时间 DATETIME, -- 成立时间\n  世界500强排名 INTEGER, -- 世界500强排名\n  市场份额 INTEGER, -- 市场份额\n  2018年营业额 INTEGER, -- 2018年营业额\n  2018年利润 INTEGER, -- 2018年利润\n);\nCREATE TABLE 洗衣机型号 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  产品类别 VARCHAR(50), -- 产品类别\n  洗涤容量 INTEGER, -- 洗涤容量\n  能效等级 INTEGER, -- 能效等级\n  自动化程度 VARCHAR(50), -- 自动化程度\n  售价 INTEGER, -- 售价\n  品牌id INTEGER, -- 品牌id\n);\nCREATE TABLE 洗衣机品牌门店 (\n  品牌id INTEGER PRIMARY KEY, -- 品牌id\n  城市 VARCHAR(50), -- 城市\n  门店数量 INTEGER, -- 门店数量\n  售卖量 INTEGER, -- 售卖量\n  平均售价 INTEGER, -- 平均售价\n);\nCREATE TABLE 洗衣机品牌平台评分 (\n  品牌id INTEGER PRIMARY KEY, -- 品牌id\n  平台 VARCHAR(50), -- 平台\n  总评分 INTEGER, -- 总评分\n  性价比得分 INTEGER, -- 性价比得分\n  功能得分 INTEGER, -- 功能得分\n  做工得分 INTEGER, -- 做工得分\n  外观得分 INTEGER, -- 外观得分\n);\n-- 洗衣机品牌门店.品牌id can be joined with 洗衣机品牌.洗衣机品牌\n-- 洗衣机品牌平台评分.品牌id can be joined with 洗衣机品牌.洗衣机品牌\n-- 洗衣机型号.品牌id can be joined with 洗衣机品牌.洗衣机品牌", "columns_en": {"词条id": "词条id", "名称": "名称", "所属公司": "所属公司", "成立时间": "成立时间", "世界500强排名": "世界500强排名", "市场份额": "市场份额", "2018年营业额": "2018年营业额", "2018年利润": "2018年利润", "产品类别": "产品类别", "洗涤容量": "洗涤容量", "能效等级": "能效等级", "自动化程度": "自动化程度", "售价": "售价", "品牌id": "品牌id", "城市": "城市", "门店数量": "门店数量", "售卖量": "售卖量", "平均售价": "平均售价", "平台": "平台", "总评分": "总评分", "性价比得分": "性价比得分", "功能得分": "功能得分", "做工得分": "做工得分", "外观得分": "外观得分"}, "table_en": {"洗衣机品牌": "洗衣机品牌", "洗衣机型号": "洗衣机型号", "洗衣机品牌门店": "洗衣机品牌门店", "洗衣机品牌平台评分": "洗衣机品牌平台评分"}}, "购物网站": {"sqlite": "CREATE TABLE 公司 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  成立时间 DATETIME, -- 成立时间\n  创始人 VARCHAR(50), -- 创始人\n  所属省份 VARCHAR(50), -- 所属省份\n);\nCREATE TABLE 购物网 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  网站名称 VARCHAR(50), -- 网站名称\n  所属公司id INTEGER, -- 所属公司id\n  上线时间 DATETIME, -- 上线时间\n  官网 VARCHAR(50), -- 官网\n  百度权重 INTEGER, -- 百度权重\n  PR值 INTEGER, -- PR值\n  反链数 INTEGER, -- 反链数\n  综合分数 INTEGER, -- 综合分数\n  总排名 INTEGER, -- 总排名\n  所在省排名 INTEGER, -- 所在省排名\n  电商网站排名 INTEGER, -- 电商网站排名\n);\nCREATE TABLE 活动日 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  活动名称 VARCHAR(50), -- 活动名称\n  时间 DATETIME, -- 时间\n  发明公司id INTEGER, -- 发明公司id\n);\nCREATE TABLE 网站活动收入 (\n  网站id INTEGER PRIMARY KEY, -- 网站id\n  活动id INTEGER, -- 活动id\n  年份 DATETIME, -- 年份\n  下单金额 INTEGER, -- 下单金额\n  同比增长 INTEGER, -- 同比增长\n);\nCREATE TABLE 网站打假 (\n  网站id INTEGER PRIMARY KEY, -- 网站id\n  年份 DATETIME, -- 年份\n  315提名次数 INTEGER, -- 315提名次数\n  买家打假次数 INTEGER, -- 买家打假次数\n  同比增长 INTEGER, -- 同比增长\n);\n-- 购物网.所属公司id can be joined with 公司.公司\n-- 网站打假.网站id can be joined with 购物网.购物网\n-- 网站活动收入.网站id can be joined with 购物网.购物网\n-- 活动日.发明公司id can be joined with 公司.公司\n-- 网站活动收入.活动id can be joined with 活动日.活动日", "columns_en": {"词条id": "词条id", "名称": "名称", "成立时间": "成立时间", "创始人": "创始人", "所属省份": "所属省份", "网站名称": "网站名称", "所属公司id": "所属公司id", "上线时间": "上线时间", "官网": "官网", "百度权重": "百度权重", "PR值": "PR值", "反链数": "反链数", "综合分数": "综合分数", "总排名": "总排名", "所在省排名": "所在省排名", "电商网站排名": "电商网站排名", "活动名称": "活动名称", "时间": "时间", "发明公司id": "发明公司id", "网站id": "网站id", "活动id": "活动id", "年份": "年份", "下单金额": "下单金额", "同比增长": "同比增长", "315提名次数": "315提名次数", "买家打假次数": "买家打假次数"}, "table_en": {"公司": "公司", "购物网": "购物网", "活动日": "活动日", "网站活动收入": "网站活动收入", "网站打假": "网站打假"}}, "社交软件": {"sqlite": "CREATE TABLE 公司 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  成立时间 DATETIME, -- 成立时间\n  位于城市 VARCHAR(50), -- 位于城市\n);\nCREATE TABLE 社交APP (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  app名称 VARCHAR(50), -- app名称\n  软件大小 INTEGER, -- 软件大小\n  注册用户量 INTEGER, -- 注册用户量\n  日活跃用户量 DATETIME, -- 日活跃用户量\n  母公司id VARCHAR(50), -- 母公司id\n);\nCREATE TABLE 功能 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  简介 VARCHAR(50), -- 简介\n);\nCREATE TABLE APP支持的功能 (\n  功能id INTEGER PRIMARY KEY, -- 功能id\n  appid INTEGER, -- appid\n  是否主要功能 BINARY, -- 是否主要功能\n);\n-- APP支持的功能.功能id can be joined with 功能.功能\n-- 社交APP.母公司id can be joined with 公司.公司", "columns_en": {"词条id": "词条id", "名称": "名称", "成立时间": "成立时间", "位于城市": "位于城市", "app名称": "app名称", "软件大小": "软件大小", "注册用户量": "注册用户量", "日活跃用户量": "日活跃用户量", "母公司id": "母公司id", "简介": "简介", "功能id": "功能id", "appid": "appid", "是否主要功能": "是否主要功能"}, "table_en": {"公司": "公司", "社交APP": "社交APP", "功能": "功能", "APP支持的功能": "APP支持的功能"}}, "企业融资": {"sqlite": "CREATE TABLE 企业 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  中文名 VARCHAR(50), -- 中文名\n  成立时间 DATETIME, -- 成立时间\n  法定代表人 VARCHAR(50), -- 法定代表人\n  所属省份 VARCHAR(50), -- 所属省份\n  注册资本 INTEGER, -- 注册资本\n);\nCREATE TABLE 企业融资 (\n  企业id INTEGER PRIMARY KEY, -- 企业id\n  融资轮次 VARCHAR(50), -- 融资轮次\n  融资总额 INTEGER, -- 融资总额\n  年份 DATETIME, -- 年份\n);\nCREATE TABLE 投资公司 (\n  企业id INTEGER PRIMARY KEY, -- 企业id\n  投资公司 VARCHAR(50), -- 投资公司\n  融资轮次 VARCHAR(50), -- 融资轮次\n  融资额 INTEGER, -- 融资额\n  投资公司持股比例 INTEGER, -- 投资公司持股比例\n);\n-- 投资公司.企业id can be joined with 企业.企业\n-- 企业融资.企业id can be joined with 企业.企业", "columns_en": {"词条id": "词条id", "中文名": "中文名", "成立时间": "成立时间", "法定代表人": "法定代表人", "所属省份": "所属省份", "注册资本": "注册资本", "企业id": "企业id", "融资轮次": "融资轮次", "融资总额": "融资总额", "年份": "年份", "投资公司": "投资公司", "融资额": "融资额", "投资公司持股比例": "投资公司持股比例"}, "table_en": {"企业": "企业", "企业融资": "企业融资", "投资公司": "投资公司"}}, "各城市垃圾": {"sqlite": "CREATE TABLE 城市 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  所属省份 VARCHAR(50), -- 所属省份\n  垃圾产出量(万吨) INTEGER, -- 垃圾产出量(万吨)\n  垃圾场数量 INTEGER, -- 垃圾场数量\n);\nCREATE TABLE 城市垃圾来源 (\n  城市id INTEGER PRIMARY KEY, -- 城市id\n  来源 VARCHAR(50), -- 来源\n  产出吨数 INTEGER, -- 产出吨数\n  总量占比 INTEGER, -- 总量占比\n);\nCREATE TABLE 垃圾分类的城市 (\n  城市id INTEGER PRIMARY KEY, -- 城市id\n  实施时间 DATETIME, -- 实施时间\n  分类体系 VARCHAR(50), -- 分类体系\n  最低罚款数 INTEGER, -- 最低罚款数\n  最高罚款数 INTEGER, -- 最高罚款数\n  厨余垃圾运输车辆 INTEGER, -- 厨余垃圾运输车辆\n  有害垃圾运输车辆 INTEGER, -- 有害垃圾运输车辆\n  覆盖家庭比例 INTEGER, -- 覆盖家庭比例\n  志愿者数量 INTEGER, -- 志愿者数量\n);\n-- 城市垃圾来源.城市id can be joined with 城市.城市\n-- 垃圾分类的城市.城市id can be joined with 城市.城市", "columns_en": {"词条id": "词条id", "名称": "名称", "所属省份": "所属省份", "垃圾产出量(万吨)": "垃圾产出量(万吨)", "垃圾场数量": "垃圾场数量", "城市id": "城市id", "来源": "来源", "产出吨数": "产出吨数", "总量占比": "总量占比", "实施时间": "实施时间", "分类体系": "分类体系", "最低罚款数": "最低罚款数", "最高罚款数": "最高罚款数", "厨余垃圾运输车辆": "厨余垃圾运输车辆", "有害垃圾运输车辆": "有害垃圾运输车辆", "覆盖家庭比例": "覆盖家庭比例", "志愿者数量": "志愿者数量"}, "table_en": {"城市": "城市", "城市垃圾来源": "城市垃圾来源", "垃圾分类的城市": "垃圾分类的城市"}}, "银行理财产品": {"sqlite": "CREATE TABLE 银行 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  成立时间 DATETIME, -- 成立时间\n  公司类型 VARCHAR(50), -- 公司类型\n  年营业额 INTEGER, -- 年营业额\n);\nCREATE TABLE 银行转账手续费 (\n  原银行id INTEGER PRIMARY KEY, -- 原银行id\n  转账银行id INTEGER, -- 转账银行id\n  同省手续费 INTEGER, -- 同省手续费\n  跨省手续费 INTEGER, -- 跨省手续费\n  单笔最高转账金额 INTEGER, -- 单笔最高转账金额\n);\nCREATE TABLE 理财产品 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  所属公司 VARCHAR(50), -- 所属公司\n  年化收益率 INTEGER, -- 年化收益率\n  存储时间 INTEGER, -- 存储时间\n);\nCREATE TABLE 理财产品与银行 (\n  产品id INTEGER PRIMARY KEY, -- 产品id\n  银行id INTEGER, -- 银行id\n  单笔最高限额 INTEGER, -- 单笔最高限额\n  每日限转次数 INTEGER, -- 每日限转次数\n);\n-- 理财产品与银行.产品id can be joined with 理财产品.理财产品\n-- 理财产品与银行.银行id can be joined with 银行.银行\n-- 银行转账手续费.原银行id can be joined with 银行.银行\n-- 银行转账手续费.转账银行id can be joined with 银行.银行", "columns_en": {"词条id": "词条id", "名称": "名称", "成立时间": "成立时间", "公司类型": "公司类型", "年营业额": "年营业额", "原银行id": "原银行id", "转账银行id": "转账银行id", "同省手续费": "同省手续费", "跨省手续费": "跨省手续费", "单笔最高转账金额": "单笔最高转账金额", "所属公司": "所属公司", "年化收益率": "年化收益率", "存储时间": "存储时间", "产品id": "产品id", "银行id": "银行id", "单笔最高限额": "单笔最高限额", "每日限转次数": "每日限转次数"}, "table_en": {"银行": "银行", "银行转账手续费": "银行转账手续费", "理财产品": "理财产品", "理财产品与银行": "理财产品与银行"}}, "公司联合实验室": {"sqlite": "CREATE TABLE 公司 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  总部地点 VARCHAR(50), -- 总部地点\n  公司类型 VARCHAR(50), -- 公司类型\n);\nCREATE TABLE 学校 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  学校名称 VARCHAR(50), -- 学校名称\n  成立时间 DATETIME, -- 成立时间\n  所在城市 VARCHAR(50), -- 所在城市\n  所属省份 VARCHAR(50), -- 所属省份\n  所属国家 VARCHAR(50), -- 所属国家\n);\nCREATE TABLE 联合实验室 (\n  实验室名称 VARCHAR(50) PRIMARY KEY, -- 实验室名称\n  所属学校id INTEGER, -- 所属学校id\n  公司id INTEGER, -- 公司id\n  联合方向 VARCHAR(50), -- 联合方向\n  开始时间 DATETIME, -- 开始时间\n  合作年数 INTEGER, -- 合作年数\n  论文产出数量 INTEGER, -- 论文产出数量\n);\nCREATE TABLE 海外研究中心 (\n  研究中心 VARCHAR(50) PRIMARY KEY, -- 研究中心\n  所在城市 VARCHAR(50), -- 所在城市\n  所在国家 VARCHAR(50), -- 所在国家\n  公司id INTEGER, -- 公司id\n  成立年份 DATETIME, -- 成立年份\n  员工数量 INTEGER, -- 员工数量\n);\n-- 海外研究中心.公司id can be joined with 公司.公司\n-- 联合实验室.公司id can be joined with 公司.公司\n-- 联合实验室.所属学校id can be joined with 学校.学校", "columns_en": {"词条id": "词条id", "名称": "名称", "总部地点": "总部地点", "公司类型": "公司类型", "学校名称": "学校名称", "成立时间": "成立时间", "所在城市": "所在城市", "所属省份": "所属省份", "所属国家": "所属国家", "实验室名称": "实验室名称", "所属学校id": "所属学校id", "公司id": "公司id", "联合方向": "联合方向", "开始时间": "开始时间", "合作年数": "合作年数", "论文产出数量": "论文产出数量", "研究中心": "研究中心", "所在国家": "所在国家", "成立年份": "成立年份", "员工数量": "员工数量"}, "table_en": {"公司": "公司", "学校": "学校", "联合实验室": "联合实验室", "海外研究中心": "海外研究中心"}}, "台风": {"sqlite": "CREATE TABLE 台风 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  登陆地点 VARCHAR(50), -- 登陆地点\n  登陆时间 DATETIME, -- 登陆时间\n  登陆强度 INTEGER, -- 登陆强度\n  持续天数 INTEGER, -- 持续天数\n  影响地区数 INTEGER, -- 影响地区数\n  死亡人数 INTEGER, -- 死亡人数\n  经济损失 INTEGER, -- 经济损失\n);\nCREATE TABLE 台风影响的中国省份 (\n  台风id INTEGER PRIMARY KEY, -- 台风id\n  省份 VARCHAR(50), -- 省份\n  登陆强度 INTEGER, -- 登陆强度\n  死亡人数 INTEGER, -- 死亡人数\n  失踪人数 INTEGER, -- 失踪人数\n);\nCREATE TABLE 台风影响的国家 (\n  台风id INTEGER PRIMARY KEY, -- 台风id\n  国家 VARCHAR(50), -- 国家\n  经济损失 INTEGER, -- 经济损失\n);\n-- 台风影响的国家.台风id can be joined with 台风.台风\n-- 台风影响的中国省份.台风id can be joined with 台风.台风", "columns_en": {"词条id": "词条id", "名称": "名称", "登陆地点": "登陆地点", "登陆时间": "登陆时间", "登陆强度": "登陆强度", "持续天数": "持续天数", "影响地区数": "影响地区数", "死亡人数": "死亡人数", "经济损失": "经济损失", "台风id": "台风id", "省份": "省份", "失踪人数": "失踪人数", "国家": "国家"}, "table_en": {"台风": "台风", "台风影响的中国省份": "台风影响的中国省份", "台风影响的国家": "台风影响的国家"}}, "各城市购房报告": {"sqlite": "CREATE TABLE 房龄影响 (\n  城市 VARCHAR(50) PRIMARY KEY, -- 城市\n  房龄 VARCHAR(50), -- 房龄\n  交易占比 INTEGER, -- 交易占比\n);\nCREATE TABLE 电梯影响 (\n  城市 VARCHAR(50) PRIMARY KEY, -- 城市\n  是否带电梯 BINARY, -- 是否带电梯\n  平均成交周期 INTEGER, -- 平均成交周期\n  平均带看次数 INTEGER, -- 平均带看次数\n);\nCREATE TABLE 月供分布 (\n  城市 VARCHAR(50) PRIMARY KEY, -- 城市\n  月供段 VARCHAR(50), -- 月供段\n  占比 INTEGER, -- 占比\n);\nCREATE TABLE 购房者年龄分布 (\n  城市 VARCHAR(50) PRIMARY KEY, -- 城市\n  购房者年龄段 VARCHAR(50), -- 购房者年龄段\n  占比 INTEGER, -- 占比\n);\nCREATE TABLE 购房者性别分布 (\n  城市 VARCHAR(50) PRIMARY KEY, -- 城市\n  购房者性别 VARCHAR(50), -- 购房者性别\n  占比 INTEGER, -- 占比\n);\n", "columns_en": {"城市": "城市", "房龄": "房龄", "交易占比": "交易占比", "是否带电梯": "是否带电梯", "平均成交周期": "平均成交周期", "平均带看次数": "平均带看次数", "月供段": "月供段", "占比": "占比", "购房者年龄段": "购房者年龄段", "购房者性别": "购房者性别"}, "table_en": {"房龄影响": "房龄影响", "电梯影响": "电梯影响", "月供分布": "月供分布", "购房者年龄分布": "购房者年龄分布", "购房者性别分布": "购房者性别分布"}}, "中国宜居城市": {"sqlite": "CREATE TABLE 2018年宜居城市 (\n  城市 VARCHAR(50) PRIMARY KEY, -- 城市\n  所属省份 VARCHAR(50), -- 所属省份\n  分数 INTEGER, -- 分数\n  空气指数 INTEGER, -- 空气指数\n  蓝天数量 INTEGER, -- 蓝天数量\n);\nCREATE TABLE 2017年宜居城市 (\n  城市 VARCHAR(50) PRIMARY KEY, -- 城市\n  所属省份 VARCHAR(50), -- 所属省份\n  分数 INTEGER, -- 分数\n  空气指数 INTEGER, -- 空气指数\n  蓝天数量 INTEGER, -- 蓝天数量\n);\nCREATE TABLE 2016年宜居城市 (\n  城市 VARCHAR(50) PRIMARY KEY, -- 城市\n  所属省份 VARCHAR(50), -- 所属省份\n  分数 INTEGER, -- 分数\n  空气指数 INTEGER, -- 空气指数\n  蓝天数量 INTEGER, -- 蓝天数量\n);\n", "columns_en": {"城市": "城市", "所属省份": "所属省份", "分数": "分数", "空气指数": "空气指数", "蓝天数量": "蓝天数量"}, "table_en": {"2018年宜居城市": "2018年宜居城市", "2017年宜居城市": "2017年宜居城市", "2016年宜居城市": "2016年宜居城市"}}, "软件赞助节目": {"sqlite": "CREATE TABLE 品牌 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  所属公司 VARCHAR(50), -- 所属公司\n  行业 VARCHAR(50), -- 行业\n);\nCREATE TABLE 综艺节目 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  播出年份 DATETIME, -- 播出年份\n  播出电视台 VARCHAR(50), -- 播出电视台\n  收视率 INTEGER, -- 收视率\n  市场份额 INTEGER, -- 市场份额\n  观众评分 INTEGER, -- 观众评分\n);\nCREATE TABLE 综艺节目赞助商 (\n  品牌id INTEGER PRIMARY KEY, -- 品牌id\n  综艺节目id INTEGER, -- 综艺节目id\n  赞助方式 VARCHAR(50), -- 赞助方式\n  广告时长 INTEGER, -- 广告时长\n  广告次数 INTEGER, -- 广告次数\n);\n-- 综艺节目赞助商.综艺节目id can be joined with 综艺节目.综艺节目\n-- 综艺节目赞助商.品牌id can be joined with 品牌.品牌", "columns_en": {"词条id": "词条id", "名称": "名称", "所属公司": "所属公司", "行业": "行业", "播出年份": "播出年份", "播出电视台": "播出电视台", "收视率": "收视率", "市场份额": "市场份额", "观众评分": "观众评分", "品牌id": "品牌id", "综艺节目id": "综艺节目id", "赞助方式": "赞助方式", "广告时长": "广告时长", "广告次数": "广告次数"}, "table_en": {"品牌": "品牌", "综艺节目": "综艺节目", "综艺节目赞助商": "综艺节目赞助商"}}, "世界高山": {"sqlite": "CREATE TABLE 山峰 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  所属山系 VARCHAR(50), -- 所属山系\n  海拔 INTEGER, -- 海拔\n  首次登顶时间 DATETIME, -- 首次登顶时间\n  排名 INTEGER, -- 排名\n);\nCREATE TABLE 国家 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  所属洲 VARCHAR(50), -- 所属洲\n);\nCREATE TABLE 山峰的国家 (\n  山峰id INTEGER PRIMARY KEY, -- 山峰id\n  起点国家id INTEGER, -- 起点国家id\n  终点国家id INTEGER, -- 终点国家id\n  走向 VARCHAR(50), -- 走向\n);\nCREATE TABLE 景点 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  山峰id INTEGER, -- 山峰id\n  门票价格 INTEGER, -- 门票价格\n  游玩季节 VARCHAR(50), -- 游玩季节\n);\n-- 山峰的国家.起点国家id can be joined with 国家.国家\n-- 景点.山峰id can be joined with 山峰.山峰\n-- 山峰的国家.山峰id can be joined with 山峰.山峰\n-- 山峰的国家.终点国家id can be joined with 国家.国家", "columns_en": {"词条id": "词条id", "名称": "名称", "所属山系": "所属山系", "海拔": "海拔", "首次登顶时间": "首次登顶时间", "排名": "排名", "所属洲": "所属洲", "山峰id": "山峰id", "起点国家id": "起点国家id", "终点国家id": "终点国家id", "走向": "走向", "门票价格": "门票价格", "游玩季节": "游玩季节"}, "table_en": {"山峰": "山峰", "国家": "国家", "山峰的国家": "山峰的国家", "景点": "景点"}}, "央视晚会": {"sqlite": "CREATE TABLE 央视春节晚会 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  届数 INTEGER, -- 届数\n  播放频道 VARCHAR(50), -- 播放频道\n  在线播放平台 VARCHAR(50), -- 在线播放平台\n  主持人 VARCHAR(50), -- 主持人\n  主持人数量 INTEGER, -- 主持人数量\n  收视率 INTEGER, -- 收视率\n  歌舞节目数量 INTEGER, -- 歌舞节目数量\n  语言节目数量 INTEGER, -- 语言节目数量\n  魔术节目数量 INTEGER, -- 魔术节目数量\n);\nCREATE TABLE 主持人 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  姓名 VARCHAR(50), -- 姓名\n  毕业院校 VARCHAR(50), -- 毕业院校\n  代表作品 VARCHAR(50), -- 代表作品\n);\nCREATE TABLE 中秋晚会 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  播出时间 DATETIME, -- 播出时间\n  主会场地址 VARCHAR(50), -- 主会场地址\n  分会场数量 INTEGER, -- 分会场数量\n);\nCREATE TABLE 主持人与春晚 (\n  主持人id INTEGER PRIMARY KEY, -- 主持人id\n  春晚id INTEGER, -- 春晚id\n);\nCREATE TABLE 主持人与中秋晚会 (\n  主持人id INTEGER PRIMARY KEY, -- 主持人id\n  中秋晚会id INTEGER, -- 中秋晚会id\n);\nCREATE TABLE 举办城市 (\n  城市名称 VARCHAR(50) PRIMARY KEY, -- 城市名称\n  中秋晚会id INTEGER, -- 中秋晚会id\n  是否主会场 BINARY, -- 是否主会场\n);\nCREATE TABLE 春晚嘉宾 (\n  嘉宾姓名 VARCHAR(50) PRIMARY KEY, -- 嘉宾姓名\n  春晚id INTEGER, -- 春晚id\n  表演节目 VARCHAR(50), -- 表演节目\n  节目类型 VARCHAR(50), -- 节目类型\n  是否获奖 BINARY, -- 是否获奖\n);\n-- 主持人与中秋晚会.主持人id can be joined with 主持人.主持人\n-- 主持人与中秋晚会.中秋晚会id can be joined with 中秋晚会.中秋晚会\n-- 主持人与春晚.春晚id can be joined with 央视春节晚会.央视春节晚会\n-- 主持人与春晚.主持人id can be joined with 主持人.主持人\n-- 春晚嘉宾.春晚id can be joined with 央视春节晚会.央视春节晚会\n-- 举办城市.中秋晚会id can be joined with 中秋晚会.中秋晚会", "columns_en": {"词条id": "词条id", "名称": "名称", "届数": "届数", "播放频道": "播放频道", "在线播放平台": "在线播放平台", "主持人": "主持人", "主持人数量": "主持人数量", "收视率": "收视率", "歌舞节目数量": "歌舞节目数量", "语言节目数量": "语言节目数量", "魔术节目数量": "魔术节目数量", "姓名": "姓名", "毕业院校": "毕业院校", "代表作品": "代表作品", "播出时间": "播出时间", "主会场地址": "主会场地址", "分会场数量": "分会场数量", "主持人id": "主持人id", "春晚id": "春晚id", "中秋晚会id": "中秋晚会id", "城市名称": "城市名称", "是否主会场": "是否主会场", "嘉宾姓名": "嘉宾姓名", "表演节目": "表演节目", "节目类型": "节目类型", "是否获奖": "是否获奖"}, "table_en": {"央视春节晚会": "央视春节晚会", "主持人": "主持人", "中秋晚会": "中秋晚会", "主持人与春晚": "主持人与春晚", "主持人与中秋晚会": "主持人与中秋晚会", "举办城市": "举办城市", "春晚嘉宾": "春晚嘉宾"}}, "收视率": {"sqlite": "CREATE TABLE 频道收视 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  频道名称 VARCHAR(50), -- 频道名称\n  直播关注度 INTEGER, -- 直播关注度\n  市场份额 INTEGER, -- 市场份额\n  排名 INTEGER, -- 排名\n);\nCREATE TABLE 节目收视 (\n  节目名称 VARCHAR(50) PRIMARY KEY, -- 节目名称\n  频道id INTEGER, -- 频道id\n  播出时间 DATETIME, -- 播出时间\n  直播关注度 INTEGER, -- 直播关注度\n  市场份额 INTEGER, -- 市场份额\n  排名 INTEGER, -- 排名\n);\nCREATE TABLE 综艺节目植入榜 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  节目名称 VARCHAR(50), -- 节目名称\n  播出频道id INTEGER, -- 播出频道id\n  总时长 INTEGER, -- 总时长\n  频次 INTEGER, -- 频次\n  点播关注度 INTEGER, -- 点播关注度\n);\n-- 综艺节目植入榜.播出频道id can be joined with 频道收视.频道收视\n-- 节目收视.频道id can be joined with 频道收视.频道收视", "columns_en": {"词条id": "词条id", "频道名称": "频道名称", "直播关注度": "直播关注度", "市场份额": "市场份额", "排名": "排名", "节目名称": "节目名称", "频道id": "频道id", "播出时间": "播出时间", "播出频道id": "播出频道id", "总时长": "总时长", "频次": "频次", "点播关注度": "点播关注度"}, "table_en": {"频道收视": "频道收视", "节目收视": "节目收视", "综艺节目植入榜": "综艺节目植入榜"}}, "论文": {"sqlite": "CREATE TABLE 作者 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  姓名 VARCHAR(50), -- 姓名\n  性别 VARCHAR(50), -- 性别\n  国籍 VARCHAR(50), -- 国籍\n  职业 VARCHAR(50), -- 职业\n  所在单位 VARCHAR(50), -- 所在单位\n);\nCREATE TABLE 论文 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  作者id INTEGER, -- 作者id\n  会议名称 VARCHAR(50), -- 会议名称\n  年份 DATETIME, -- 年份\n  引用量 INTEGER, -- 引用量\n);\nCREATE TABLE 论文引用 (\n  论文id INTEGER PRIMARY KEY, -- 论文id\n  引用论文id INTEGER, -- 引用论文id\n  是否对比论文 BINARY, -- 是否对比论文\n);\n-- 论文引用.论文id can be joined with 论文.论文\n-- 论文.作者id can be joined with 作者.作者\n-- 论文引用.引用论文id can be joined with 论文.论文", "columns_en": {"词条id": "词条id", "姓名": "姓名", "性别": "性别", "国籍": "国籍", "职业": "职业", "所在单位": "所在单位", "名称": "名称", "作者id": "作者id", "会议名称": "会议名称", "年份": "年份", "引用量": "引用量", "论文id": "论文id", "引用论文id": "引用论文id", "是否对比论文": "是否对比论文"}, "table_en": {"作者": "作者", "论文": "论文", "论文引用": "论文引用"}}, "银行": {"sqlite": "CREATE TABLE 银行总部 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  总部地点 VARCHAR(50), -- 总部地点\n  成立时间 DATETIME, -- 成立时间\n  公司类型 VARCHAR(50), -- 公司类型\n);\nCREATE TABLE 年营业额 (\n  年份 DATETIME PRIMARY KEY, -- 年份\n  银行id INTEGER, -- 银行id\n  营业额 INTEGER, -- 营业额\n  员工数 INTEGER, -- 员工数\n  世界五百强排名 INTEGER, -- 世界五百强排名\n);\nCREATE TABLE 城市 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  所属省份 VARCHAR(50), -- 所属省份\n  所属区域 VARCHAR(50), -- 所属区域\n);\nCREATE TABLE 银行服务网点 (\n  银行id INTEGER PRIMARY KEY, -- 银行id\n  城市id INTEGER, -- 城市id\n  建成数量 INTEGER, -- 建成数量\n  规划数量 INTEGER, -- 规划数量\n);\n-- 银行服务网点.城市id can be joined with 城市.城市\n-- 银行服务网点.银行id can be joined with 银行总部.银行总部\n-- 年营业额.银行id can be joined with 银行总部.银行总部", "columns_en": {"词条id": "词条id", "名称": "名称", "总部地点": "总部地点", "成立时间": "成立时间", "公司类型": "公司类型", "年份": "年份", "银行id": "银行id", "营业额": "营业额", "员工数": "员工数", "世界五百强排名": "世界五百强排名", "所属省份": "所属省份", "所属区域": "所属区域", "城市id": "城市id", "建成数量": "建成数量", "规划数量": "规划数量"}, "table_en": {"银行总部": "银行总部", "年营业额": "年营业额", "城市": "城市", "银行服务网点": "银行服务网点"}}, "历史类书籍": {"sqlite": "CREATE TABLE 国家历史 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  书名 VARCHAR(50), -- 书名\n  讲述国家 VARCHAR(50), -- 讲述国家\n  讲述时代 DATETIME, -- 讲述时代\n);\nCREATE TABLE 中国朝代历史 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  书名 VARCHAR(50), -- 书名\n  讲述朝代 VARCHAR(50), -- 讲述朝代\n);\nCREATE TABLE 战争历史 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  书名 VARCHAR(50), -- 书名\n  描述战事 VARCHAR(50), -- 描述战事\n);\nCREATE TABLE 人物历史 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  书名 VARCHAR(50), -- 书名\n  讲述名人 VARCHAR(50), -- 讲述名人\n);\n", "columns_en": {"词条id": "词条id", "书名": "书名", "讲述国家": "讲述国家", "讲述时代": "讲述时代", "讲述朝代": "讲述朝代", "描述战事": "描述战事", "讲述名人": "讲述名人"}, "table_en": {"国家历史": "国家历史", "中国朝代历史": "中国朝代历史", "战争历史": "战争历史", "人物历史": "人物历史"}}, "欧洲杯球队": {"sqlite": "CREATE TABLE 球队 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  中文队名 VARCHAR(50), -- 中文队名\n  所属地区 VARCHAR(50), -- 所属地区\n  成立时间 DATETIME, -- 成立时间\n  主场馆 VARCHAR(50), -- 主场馆\n  容纳人数 INTEGER, -- 容纳人数\n  主席 VARCHAR(50), -- 主席\n  体育经理 VARCHAR(50), -- 体育经理\n  创始人 VARCHAR(50), -- 创始人\n  现任队长 VARCHAR(50), -- 现任队长\n  副队长 VARCHAR(50), -- 副队长\n);\nCREATE TABLE 球队欧冠赛事 (\n  名次 INTEGER PRIMARY KEY, -- 名次\n  球队id INTEGER, -- 球队id\n  届数 INTEGER, -- 届数\n  场次 INTEGER, -- 场次\n  胜次数 INTEGER, -- 胜次数\n  平次数 INTEGER, -- 平次数\n  负次数 INTEGER, -- 负次数\n  失球 INTEGER, -- 失球\n  净胜球 INTEGER, -- 净胜球\n  场均积分 INTEGER, -- 场均积分\n  场均进球 INTEGER, -- 场均进球\n  最好成绩 VARCHAR(50), -- 最好成绩\n);\nCREATE TABLE 欧冠冠亚军 (\n  届数 INTEGER PRIMARY KEY, -- 届数\n  杯赛 VARCHAR(50), -- 杯赛\n  冠军球队id INTEGER, -- 冠军球队id\n  亚军球队id INTEGER, -- 亚军球队id\n  冠军主教练 VARCHAR(50), -- 冠军主教练\n  决赛比分 VARCHAR(50), -- 决赛比分\n  决赛场地 VARCHAR(50), -- 决赛场地\n);\n-- 欧冠冠亚军.冠军球队id can be joined with 球队.球队\n-- 球队欧冠赛事.球队id can be joined with 球队.球队\n-- 欧冠冠亚军.亚军球队id can be joined with 球队.球队", "columns_en": {"词条id": "词条id", "中文队名": "中文队名", "所属地区": "所属地区", "成立时间": "成立时间", "主场馆": "主场馆", "容纳人数": "容纳人数", "主席": "主席", "体育经理": "体育经理", "创始人": "创始人", "现任队长": "现任队长", "副队长": "副队长", "名次": "名次", "球队id": "球队id", "届数": "届数", "场次": "场次", "胜次数": "胜次数", "平次数": "平次数", "负次数": "负次数", "失球": "失球", "净胜球": "净胜球", "场均积分": "场均积分", "场均进球": "场均进球", "最好成绩": "最好成绩", "杯赛": "杯赛", "冠军球队id": "冠军球队id", "亚军球队id": "亚军球队id", "冠军主教练": "冠军主教练", "决赛比分": "决赛比分", "决赛场地": "决赛场地"}, "table_en": {"球队": "球队", "球队欧冠赛事": "球队欧冠赛事", "欧冠冠亚军": "欧冠冠亚军"}}, "中国历史名城": {"sqlite": "CREATE TABLE 城市 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  所属省份 VARCHAR(50), -- 所属省份\n  常住人口 INTEGER, -- 常住人口\n  城区面积 INTEGER, -- 城区面积\n  建城年数 INTEGER, -- 建城年数\n);\nCREATE TABLE 都城 (\n  朝代 VARCHAR(50) PRIMARY KEY, -- 朝代\n  古称 VARCHAR(50), -- 古称\n  城市id INTEGER, -- 城市id\n  建都起始时间 DATETIME, -- 建都起始时间\n  建都结束时间 DATETIME, -- 建都结束时间\n  建都年数 INTEGER, -- 建都年数\n);\n-- 都城.城市id can be joined with 城市.城市", "columns_en": {"词条id": "词条id", "名称": "名称", "所属省份": "所属省份", "常住人口": "常住人口", "城区面积": "城区面积", "建城年数": "建城年数", "朝代": "朝代", "古称": "古称", "城市id": "城市id", "建都起始时间": "建都起始时间", "建都结束时间": "建都结束时间", "建都年数": "建都年数"}, "table_en": {"城市": "城市", "都城": "都城"}}, "外文书籍": {"sqlite": "CREATE TABLE 外文书籍 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  英文名 VARCHAR(50), -- 英文名\n  原著作者 VARCHAR(50), -- 原著作者\n  字数 INTEGER, -- 字数\n);\nCREATE TABLE 译者 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  姓名 VARCHAR(50), -- 姓名\n  国籍 VARCHAR(50), -- 国籍\n  翻译作品数量 INTEGER, -- 翻译作品数量\n);\nCREATE TABLE 出版社 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  成立时间 DATETIME, -- 成立时间\n  成立地点 VARCHAR(50), -- 成立地点\n);\nCREATE TABLE 书籍出版信息 (\n  书籍id INTEGER PRIMARY KEY, -- 书籍id\n  译者id INTEGER, -- 译者id\n  出版社id INTEGER, -- 出版社id\n  出版册数 INTEGER, -- 出版册数\n  出版时间 DATETIME, -- 出版时间\n);\n-- 书籍出版信息.书籍id can be joined with 外文书籍.外文书籍\n-- 书籍出版信息.出版社id can be joined with 出版社.出版社\n-- 书籍出版信息.译者id can be joined with 译者.译者", "columns_en": {"词条id": "词条id", "名称": "名称", "英文名": "英文名", "原著作者": "原著作者", "字数": "字数", "姓名": "姓名", "国籍": "国籍", "翻译作品数量": "翻译作品数量", "成立时间": "成立时间", "成立地点": "成立地点", "书籍id": "书籍id", "译者id": "译者id", "出版社id": "出版社id", "出版册数": "出版册数", "出版时间": "出版时间"}, "table_en": {"外文书籍": "外文书籍", "译者": "译者", "出版社": "出版社", "书籍出版信息": "书籍出版信息"}}, "中国城市称号": {"sqlite": "CREATE TABLE 国家卫生城市 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  所属省份 VARCHAR(50), -- 所属省份\n  下辖区县数量 INTEGER, -- 下辖区县数量\n  入选次数 INTEGER, -- 入选次数\n);\nCREATE TABLE 国家旅游城市 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  所属省份 VARCHAR(50), -- 所属省份\n  气候条件 VARCHAR(50), -- 气候条件\n  景点数量 INTEGER, -- 景点数量\n  5A级景点数量 INTEGER, -- 5A级景点数量\n);\nCREATE TABLE 国家森林城市 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  所属省份 VARCHAR(50), -- 所属省份\n  森林覆盖率 INTEGER, -- 森林覆盖率\n  森林公园数量 INTEGER, -- 森林公园数量\n);\nCREATE TABLE 国家中心城市 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  所属省份 VARCHAR(50), -- 所属省份\n  排名 INTEGER, -- 排名\n  GDP INTEGER, -- GDP\n  GDP同比增速 INTEGER, -- GDP同比增速\n);\nCREATE TABLE 世界一线城市 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  所属省份 VARCHAR(50), -- 所属省份\n  世界排名 INTEGER, -- 世界排名\n  户籍人口 INTEGER, -- 户籍人口\n  常住流动人口 INTEGER, -- 常住流动人口\n);\n", "columns_en": {"词条id": "词条id", "名称": "名称", "所属省份": "所属省份", "下辖区县数量": "下辖区县数量", "入选次数": "入选次数", "气候条件": "气候条件", "景点数量": "景点数量", "5A级景点数量": "5A级景点数量", "森林覆盖率": "森林覆盖率", "森林公园数量": "森林公园数量", "排名": "排名", "GDP": "GDP", "GDP同比增速": "GDP同比增速", "世界排名": "世界排名", "户籍人口": "户籍人口", "常住流动人口": "常住流动人口"}, "table_en": {"国家卫生城市": "国家卫生城市", "国家旅游城市": "国家旅游城市", "国家森林城市": "国家森林城市", "国家中心城市": "国家中心城市", "世界一线城市": "世界一线城市"}}, "外卖预定": {"sqlite": "CREATE TABLE 商家 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  起送价格 INTEGER, -- 起送价格\n  送达用时 INTEGER, -- 送达用时\n  评分 INTEGER, -- 评分\n  月售单数 INTEGER, -- 月售单数\n);\nCREATE TABLE 平台 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  入驻商家数量 INTEGER, -- 入驻商家数量\n  市场占比 INTEGER, -- 市场占比\n);\nCREATE TABLE 商家平台活动 (\n  商家id INTEGER PRIMARY KEY, -- 商家id\n  平台id VARCHAR(50), -- 平台id\n  优惠活动 VARCHAR(50), -- 优惠活动\n  配送费 INTEGER, -- 配送费\n);\n-- 商家平台活动.商家id can be joined with 商家.商家\n-- 商家平台活动.平台id can be joined with 平台.平台", "columns_en": {"词条id": "词条id", "名称": "名称", "起送价格": "起送价格", "送达用时": "送达用时", "评分": "评分", "月售单数": "月售单数", "入驻商家数量": "入驻商家数量", "市场占比": "市场占比", "商家id": "商家id", "平台id": "平台id", "优惠活动": "优惠活动", "配送费": "配送费"}, "table_en": {"商家": "商家", "平台": "平台", "商家平台活动": "商家平台活动"}}, "大洲与国家": {"sqlite": "CREATE TABLE 大洲 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  面积 INTEGER, -- 面积\n  人口 INTEGER, -- 人口\n  人口密度 INTEGER, -- 人口密度\n  国家数量 INTEGER, -- 国家数量\n  民族数量 INTEGER, -- 民族数量\n);\nCREATE TABLE 国家 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  首都 VARCHAR(50), -- 首都\n  国土面积 INTEGER, -- 国土面积\n  人口数量 INTEGER, -- 人口数量\n  人口密度 INTEGER, -- 人口密度\n  水域率 INTEGER, -- 水域率\n  GDP总计 INTEGER, -- GDP总计\n  人均GDP INTEGER, -- 人均GDP\n  道路通行 VARCHAR(50), -- 道路通行\n  人类发展指数 INTEGER, -- 人类发展指数\n  所属洲id INTEGER, -- 所属洲id\n);\nCREATE TABLE 最大都市 (\n  城市名称 VARCHAR(50) PRIMARY KEY, -- 城市名称\n  国家id INTEGER, -- 国家id\n  大洲id INTEGER, -- 大洲id\n);\nCREATE TABLE 2019年进出口 (\n  月份 INTEGER PRIMARY KEY, -- 月份\n  大洲id VARCHAR(50), -- 大洲id\n  进出口 INTEGER, -- 进出口\n  进口 INTEGER, -- 进口\n  出口 INTEGER, -- 出口\n  进出口同期比 INTEGER, -- 进出口同期比\n  进口同期比 INTEGER, -- 进口同期比\n  出口同期比 INTEGER, -- 出口同期比\n);\nCREATE TABLE 大洲分界线 (\n  分界线名称 VARCHAR(50) PRIMARY KEY, -- 分界线名称\n  源大洲名称 INTEGER, -- 源大洲名称\n  目标大洲名称 INTEGER, -- 目标大洲名称\n);\n-- 国家.所属洲id can be joined with 大洲.大洲\n-- 2019年进出口.大洲id can be joined with 大洲.大洲\n-- 最大都市.大洲id can be joined with 大洲.大洲\n-- 最大都市.国家id can be joined with 国家.国家", "columns_en": {"词条id": "词条id", "名称": "名称", "面积": "面积", "人口": "人口", "人口密度": "人口密度", "国家数量": "国家数量", "民族数量": "民族数量", "首都": "首都", "国土面积": "国土面积", "人口数量": "人口数量", "水域率": "水域率", "GDP总计": "GDP总计", "人均GDP": "人均GDP", "道路通行": "道路通行", "人类发展指数": "人类发展指数", "所属洲id": "所属洲id", "城市名称": "城市名称", "国家id": "国家id", "大洲id": "大洲id", "月份": "月份", "进出口": "进出口", "进口": "进口", "出口": "出口", "进出口同期比": "进出口同期比", "进口同期比": "进口同期比", "出口同期比": "出口同期比", "分界线名称": "分界线名称", "源大洲名称": "源大洲名称", "目标大洲名称": "目标大洲名称"}, "table_en": {"大洲": "大洲", "国家": "国家", "最大都市": "最大都市", "2019年进出口": "2019年进出口", "大洲分界线": "大洲分界线"}}, "饭店预订": {"sqlite": "CREATE TABLE 饭店 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  地址 VARCHAR(50), -- 地址\n  菜系 VARCHAR(50), -- 菜系\n  口味评分 INTEGER, -- 口味评分\n  环境评分 INTEGER, -- 环境评分\n  服务评分 INTEGER, -- 服务评分\n  人均价格 INTEGER, -- 人均价格\n  包房最低消费 INTEGER, -- 包房最低消费\n);\nCREATE TABLE 特色菜 (\n  饭店id INTEGER PRIMARY KEY, -- 饭店id\n  菜名 VARCHAR(50), -- 菜名\n  口味 VARCHAR(50), -- 口味\n  月销售量 INTEGER, -- 月销售量\n  必点比例 INTEGER, -- 必点比例\n);\n-- 特色菜.饭店id can be joined with 饭店.饭店", "columns_en": {"词条id": "词条id", "名称": "名称", "地址": "地址", "菜系": "菜系", "口味评分": "口味评分", "环境评分": "环境评分", "服务评分": "服务评分", "人均价格": "人均价格", "包房最低消费": "包房最低消费", "饭店id": "饭店id", "菜名": "菜名", "口味": "口味", "月销售量": "月销售量", "必点比例": "必点比例"}, "table_en": {"饭店": "饭店", "特色菜": "特色菜"}}, "各城市院士情况": {"sqlite": "CREATE TABLE 省份 (\n  词条id VARCHAR(50) PRIMARY KEY, -- 词条id\n  省份名称 INTEGER, -- 省份名称\n  985高校数量 INTEGER, -- 985高校数量\n  211高校数量 INTEGER, -- 211高校数量\n  2018年本科录取率 INTEGER, -- 2018年本科录取率\n  2019年本科录取率 INTEGER, -- 2019年本科录取率\n);\nCREATE TABLE 各省院士 (\n  年份 DATETIME PRIMARY KEY, -- 年份\n  籍贯id INTEGER, -- 籍贯id\n  科学院院士数量 INTEGER, -- 科学院院士数量\n  工程院院士数量 INTEGER, -- 工程院院士数量\n);\nCREATE TABLE 高校 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  学校名称 VARCHAR(50), -- 学校名称\n  院士校友人数 INTEGER, -- 院士校友人数\n  学校排名 INTEGER, -- 学校排名\n  星级 INTEGER, -- 星级\n  办学层次 VARCHAR(50), -- 办学层次\n);\nCREATE TABLE 2019年院士任职学校 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  院士姓名 VARCHAR(50), -- 院士姓名\n  年龄 INTEGER, -- 年龄\n  专业 VARCHAR(50), -- 专业\n  院士类型 VARCHAR(50), -- 院士类型\n  工作单位id INTEGER, -- 工作单位id\n);\n-- 各省院士.籍贯id can be joined with 省份.省份\n-- 2019年院士任职学校.工作单位id can be joined with 高校.高校", "columns_en": {"词条id": "词条id", "省份名称": "省份名称", "985高校数量": "985高校数量", "211高校数量": "211高校数量", "2018年本科录取率": "2018年本科录取率", "2019年本科录取率": "2019年本科录取率", "年份": "年份", "籍贯id": "籍贯id", "科学院院士数量": "科学院院士数量", "工程院院士数量": "工程院院士数量", "学校名称": "学校名称", "院士校友人数": "院士校友人数", "学校排名": "学校排名", "星级": "星级", "办学层次": "办学层次", "院士姓名": "院士姓名", "年龄": "年龄", "专业": "专业", "院士类型": "院士类型", "工作单位id": "工作单位id"}, "table_en": {"省份": "省份", "各省院士": "各省院士", "高校": "高校", "2019年院士任职学校": "2019年院士任职学校"}}, "IMAX电影院": {"sqlite": "CREATE TABLE 城市 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  所属省份 VARCHAR(50), -- 所属省份\n  市区面积 INTEGER, -- 市区面积\n);\nCREATE TABLE IMAX电影院 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  影院名称 VARCHAR(50), -- 影院名称\n  所在城市id INTEGER, -- 所在城市id\n  开业时间 DATETIME, -- 开业时间\n  屏幕宽 INTEGER, -- 屏幕宽\n  屏幕高 INTEGER, -- 屏幕高\n  屏幕面积 INTEGER, -- 屏幕面积\n  座位数 INTEGER, -- 座位数\n);\nCREATE TABLE 影院放映电影数量 (\n  年份 DATETIME PRIMARY KEY, -- 年份\n  影院id INTEGER, -- 影院id\n  电影数量 INTEGER, -- 电影数量\n  营收 INTEGER, -- 营收\n);\n-- 影院放映电影数量.影院id can be joined with IMAX电影院.IMAX电影院\n-- IMAX电影院.所在城市id can be joined with 城市.城市", "columns_en": {"词条id": "词条id", "名称": "名称", "所属省份": "所属省份", "市区面积": "市区面积", "影院名称": "影院名称", "所在城市id": "所在城市id", "开业时间": "开业时间", "屏幕宽": "屏幕宽", "屏幕高": "屏幕高", "屏幕面积": "屏幕面积", "座位数": "座位数", "年份": "年份", "影院id": "影院id", "电影数量": "电影数量", "营收": "营收"}, "table_en": {"城市": "城市", "IMAX电影院": "IMAX电影院", "影院放映电影数量": "影院放映电影数量"}}, "世界篮球国家队": {"sqlite": "CREATE TABLE 篮球运动队 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  队名 VARCHAR(50), -- 队名\n  所属国家 VARCHAR(50), -- 所属国家\n  成立时间 DATETIME, -- 成立时间\n  主教练 VARCHAR(50), -- 主教练\n  奥运会冠军数量 INTEGER, -- 奥运会冠军数量\n  世锦赛冠军数量 INTEGER, -- 世锦赛冠军数量\n  世界排名 INTEGER, -- 世界排名\n);\nCREATE TABLE 奥运会冠亚军记录 (\n  年份 DATETIME PRIMARY KEY, -- 年份\n  奥运会名称 VARCHAR(50), -- 奥运会名称\n  冠军队id INTEGER, -- 冠军队id\n  亚军队id INTEGER, -- 亚军队id\n  季军队id INTEGER, -- 季军队id\n);\nCREATE TABLE 中国队奥运会成绩 (\n  年份 DATETIME PRIMARY KEY, -- 年份\n  奥运会名称 VARCHAR(50), -- 奥运会名称\n  名次 INTEGER, -- 名次\n  主帅 VARCHAR(50), -- 主帅\n);\nCREATE TABLE 中国队交手记录 (\n  对手队id INTEGER PRIMARY KEY, -- 对手队id\n  赢的次数 INTEGER, -- 赢的次数\n  输的次数 INTEGER, -- 输的次数\n);\n-- 奥运会冠亚军记录.冠军队id can be joined with 篮球运动队.篮球运动队\n-- 奥运会冠亚军记录.亚军队id can be joined with 篮球运动队.篮球运动队\n-- 中国队交手记录.对手队id can be joined with 篮球运动队.篮球运动队\n-- 奥运会冠亚军记录.季军队id can be joined with 篮球运动队.篮球运动队", "columns_en": {"词条id": "词条id", "队名": "队名", "所属国家": "所属国家", "成立时间": "成立时间", "主教练": "主教练", "奥运会冠军数量": "奥运会冠军数量", "世锦赛冠军数量": "世锦赛冠军数量", "世界排名": "世界排名", "年份": "年份", "奥运会名称": "奥运会名称", "冠军队id": "冠军队id", "亚军队id": "亚军队id", "季军队id": "季军队id", "名次": "名次", "主帅": "主帅", "对手队id": "对手队id", "赢的次数": "赢的次数", "输的次数": "输的次数"}, "table_en": {"篮球运动队": "篮球运动队", "奥运会冠亚军记录": "奥运会冠亚军记录", "中国队奥运会成绩": "中国队奥运会成绩", "中国队交手记录": "中国队交手记录"}}, "城市财政收入": {"sqlite": "CREATE TABLE 各省财政收入 (\n  省份 VARCHAR(50) PRIMARY KEY, -- 省份\n  GDP总计(亿) INTEGER, -- GDP总计(亿)\n  GDP同比增速 INTEGER, -- GDP同比增速\n  GDP省内排名 INTEGER, -- GDP省内排名\n  固定资产投资同比增速 INTEGER, -- 固定资产投资同比增速\n  财政预算收入(亿) INTEGER, -- 财政预算收入(亿)\n  财政预算同比增速 INTEGER, -- 财政预算同比增速\n  预算支出额度(亿) INTEGER, -- 预算支出额度(亿)\n  预算赤字率 INTEGER, -- 预算赤字率\n  收入透明度 INTEGER, -- 收入透明度\n);\nCREATE TABLE 300城土地供给 (\n  年份 DATETIME PRIMARY KEY, -- 年份\n  整体土地供给规划面积(亿平) INTEGER, -- 整体土地供给规划面积(亿平)\n  整体累计同比 INTEGER, -- 整体累计同比\n  一线城市土地供给规划面积(万平) INTEGER, -- 一线城市土地供给规划面积(万平)\n  一线城市累计同比 INTEGER, -- 一线城市累计同比\n  二线城市土地供给规划面积(亿平) INTEGER, -- 二线城市土地供给规划面积(亿平)\n  二线城市累计同比 INTEGER, -- 二线城市累计同比\n  三四线城市土地供给规划面积(亿平) INTEGER, -- 三四线城市土地供给规划面积(亿平)\n  三四线城市累计同比 INTEGER, -- 三四线城市累计同比\n);\nCREATE TABLE 300城土地成交 (\n  年份 DATETIME PRIMARY KEY, -- 年份\n  成交建筑面积 INTEGER, -- 成交建筑面积\n  成交累计同比 INTEGER, -- 成交累计同比\n  土地出让金 INTEGER, -- 土地出让金\n  一线城市成交建筑面积 INTEGER, -- 一线城市成交建筑面积\n  一线成交累计同比 INTEGER, -- 一线成交累计同比\n  一线城市土地出让金 INTEGER, -- 一线城市土地出让金\n  二线城市成交建筑面积 INTEGER, -- 二线城市成交建筑面积\n  二线成交累计同比 INTEGER, -- 二线成交累计同比\n  二线城市土地出让金 INTEGER, -- 二线城市土地出让金\n  三四线城市成交建筑面积 INTEGER, -- 三四线城市成交建筑面积\n  三四线成交累计同比 INTEGER, -- 三四线成交累计同比\n  三四线城市土地出让金 INTEGER, -- 三四线城市土地出让金\n);\n", "columns_en": {"省份": "省份", "GDP总计(亿)": "GDP总计(亿)", "GDP同比增速": "GDP同比增速", "GDP省内排名": "GDP省内排名", "固定资产投资同比增速": "固定资产投资同比增速", "财政预算收入(亿)": "财政预算收入(亿)", "财政预算同比增速": "财政预算同比增速", "预算支出额度(亿)": "预算支出额度(亿)", "预算赤字率": "预算赤字率", "收入透明度": "收入透明度", "年份": "年份", "整体土地供给规划面积(亿平)": "整体土地供给规划面积(亿平)", "整体累计同比": "整体累计同比", "一线城市土地供给规划面积(万平)": "一线城市土地供给规划面积(万平)", "一线城市累计同比": "一线城市累计同比", "二线城市土地供给规划面积(亿平)": "二线城市土地供给规划面积(亿平)", "二线城市累计同比": "二线城市累计同比", "三四线城市土地供给规划面积(亿平)": "三四线城市土地供给规划面积(亿平)", "三四线城市累计同比": "三四线城市累计同比", "成交建筑面积": "成交建筑面积", "成交累计同比": "成交累计同比", "土地出让金": "土地出让金", "一线城市成交建筑面积": "一线城市成交建筑面积", "一线成交累计同比": "一线成交累计同比", "一线城市土地出让金": "一线城市土地出让金", "二线城市成交建筑面积": "二线城市成交建筑面积", "二线成交累计同比": "二线成交累计同比", "二线城市土地出让金": "二线城市土地出让金", "三四线城市成交建筑面积": "三四线城市成交建筑面积", "三四线成交累计同比": "三四线成交累计同比", "三四线城市土地出让金": "三四线城市土地出让金"}, "table_en": {"各省财政收入": "各省财政收入", "300城土地供给": "300城土地供给", "300城土地成交": "300城土地成交"}}, "卫星天体": {"sqlite": "CREATE TABLE 八大行星 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  距日距离 INTEGER, -- 距日距离\n  表面积 INTEGER, -- 表面积\n  体积排名 INTEGER, -- 体积排名\n  重量排名 INTEGER, -- 重量排名\n  最高温度 INTEGER, -- 最高温度\n  最低温度 INTEGER, -- 最低温度\n);\nCREATE TABLE 行星相关电影 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  影片名 VARCHAR(50), -- 影片名\n  导演 VARCHAR(50), -- 导演\n  拍摄国家 VARCHAR(50), -- 拍摄国家\n  豆瓣评分 INTEGER, -- 豆瓣评分\n  关联行星id INTEGER, -- 关联行星id\n);\nCREATE TABLE 火星探测国家 (\n  探测器 VARCHAR(50) PRIMARY KEY, -- 探测器\n  发射时间 DATETIME, -- 发射时间\n  国家 VARCHAR(50), -- 国家\n  结果 VARCHAR(50), -- 结果\n);\nCREATE TABLE 月球探测国家 (\n  飞行器 VARCHAR(50) PRIMARY KEY, -- 飞行器\n  时间 DATETIME, -- 时间\n  国家 VARCHAR(50), -- 国家\n  有无航天员 BINARY, -- 有无航天员\n  探测目的 VARCHAR(50), -- 探测目的\n);\nCREATE TABLE 载人飞船 (\n  飞船名称 VARCHAR(50) PRIMARY KEY, -- 飞船名称\n  发射时间 DATETIME, -- 发射时间\n  发射数量 INTEGER, -- 发射数量\n  国家 VARCHAR(50), -- 国家\n  航天员数量 INTEGER, -- 航天员数量\n  航天员出舱时间 INTEGER, -- 航天员出舱时间\n);\n-- 行星相关电影.关联行星id can be joined with 八大行星.八大行星", "columns_en": {"词条id": "词条id", "名称": "名称", "距日距离": "距日距离", "表面积": "表面积", "体积排名": "体积排名", "重量排名": "重量排名", "最高温度": "最高温度", "最低温度": "最低温度", "影片名": "影片名", "导演": "导演", "拍摄国家": "拍摄国家", "豆瓣评分": "豆瓣评分", "关联行星id": "关联行星id", "探测器": "探测器", "发射时间": "发射时间", "国家": "国家", "结果": "结果", "飞行器": "飞行器", "时间": "时间", "有无航天员": "有无航天员", "探测目的": "探测目的", "飞船名称": "飞船名称", "发射数量": "发射数量", "航天员数量": "航天员数量", "航天员出舱时间": "航天员出舱时间"}, "table_en": {"八大行星": "八大行星", "行星相关电影": "行星相关电影", "火星探测国家": "火星探测国家", "月球探测国家": "月球探测国家", "载人飞船": "载人飞船"}}, "各城市一二三产业经济": {"sqlite": "CREATE TABLE 城市 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  所属省份 VARCHAR(50), -- 所属省份\n  地区生产总值 INTEGER, -- 地区生产总值\n  生产总值增长率 INTEGER, -- 生产总值增长率\n  第一产业总值 INTEGER, -- 第一产业总值\n  第二产业总值 INTEGER, -- 第二产业总值\n  第三产业总值 INTEGER, -- 第三产业总值\n);\nCREATE TABLE 城市金融产业 (\n  城市id INTEGER PRIMARY KEY, -- 城市id\n  金融业增加值 VARCHAR(50), -- 金融业增加值\n  增长率 VARCHAR(50), -- 增长率\n  金融机构数量 INTEGER, -- 金融机构数量\n  外币存款余额 INTEGER, -- 外币存款余额\n  存款余额增长率 INTEGER, -- 存款余额增长率\n  贷款余额 INTEGER, -- 贷款余额\n  贷款余额增长率 INTEGER, -- 贷款余额增长率\n);\nCREATE TABLE 城市贸易产业 (\n  城市id INTEGER PRIMARY KEY, -- 城市id\n  行业 VARCHAR(50), -- 行业\n  进口额 INTEGER, -- 进口额\n  进口额增长率 INTEGER, -- 进口额增长率\n  出口额 INTEGER, -- 出口额\n  出口额增长率 INTEGER, -- 出口额增长率\n);\nCREATE TABLE 城市第一产业 (\n  城市id INTEGER PRIMARY KEY, -- 城市id\n  产业类型 VARCHAR(50), -- 产业类型\n  收入 INTEGER, -- 收入\n  收入增长率 INTEGER, -- 收入增长率\n  产量 INTEGER, -- 产量\n  产量增长率 INTEGER, -- 产量增长率\n);\n-- 城市贸易产业.城市id can be joined with 城市.城市\n-- 城市第一产业.城市id can be joined with 城市.城市\n-- 城市金融产业.城市id can be joined with 城市.城市", "columns_en": {"词条id": "词条id", "名称": "名称", "所属省份": "所属省份", "地区生产总值": "地区生产总值", "生产总值增长率": "生产总值增长率", "第一产业总值": "第一产业总值", "第二产业总值": "第二产业总值", "第三产业总值": "第三产业总值", "城市id": "城市id", "金融业增加值": "金融业增加值", "增长率": "增长率", "金融机构数量": "金融机构数量", "外币存款余额": "外币存款余额", "存款余额增长率": "存款余额增长率", "贷款余额": "贷款余额", "贷款余额增长率": "贷款余额增长率", "行业": "行业", "进口额": "进口额", "进口额增长率": "进口额增长率", "出口额": "出口额", "出口额增长率": "出口额增长率", "产业类型": "产业类型", "收入": "收入", "收入增长率": "收入增长率", "产量": "产量", "产量增长率": "产量增长率"}, "table_en": {"城市": "城市", "城市金融产业": "城市金融产业", "城市贸易产业": "城市贸易产业", "城市第一产业": "城市第一产业"}}, "历史战役": {"sqlite": "CREATE TABLE 战役 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  历时时间 INTEGER, -- 历时时间\n  地点 VARCHAR(50), -- 地点\n  朝代 VARCHAR(50), -- 朝代\n  参战人数 INTEGER, -- 参战人数\n  死亡人数 INTEGER, -- 死亡人数\n);\nCREATE TABLE 将军 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  姓名 VARCHAR(50), -- 姓名\n  领兵出战次数 INTEGER, -- 领兵出战次数\n  胜数 INTEGER, -- 胜数\n  败数 INTEGER, -- 败数\n);\nCREATE TABLE 纪念将军的诗词 (\n  诗词 VARCHAR(50) PRIMARY KEY, -- 诗词\n  作者 VARCHAR(50), -- 作者\n  朝代 VARCHAR(50), -- 朝代\n  纪念将军id INTEGER, -- 纪念将军id\n);\nCREATE TABLE 将军影视形象 (\n  将军id INTEGER PRIMARY KEY, -- 将军id\n  影视剧 VARCHAR(50), -- 影视剧\n  饰演者 VARCHAR(50), -- 饰演者\n);\nCREATE TABLE 参战双方 (\n  战役id INTEGER PRIMARY KEY, -- 战役id\n  赢方将军id INTEGER, -- 赢方将军id\n  赢方兵力 INTEGER, -- 赢方兵力\n  败方将军id INTEGER, -- 败方将军id\n  败方兵力 INTEGER, -- 败方兵力\n);\n-- 纪念将军的诗词.纪念将军id can be joined with 将军.将军\n-- 将军影视形象.将军id can be joined with 将军.将军\n-- 参战双方.败方将军id can be joined with 将军.将军\n-- 参战双方.战役id can be joined with 战役.战役\n-- 参战双方.赢方将军id can be joined with 将军.将军", "columns_en": {"词条id": "词条id", "名称": "名称", "历时时间": "历时时间", "地点": "地点", "朝代": "朝代", "参战人数": "参战人数", "死亡人数": "死亡人数", "姓名": "姓名", "领兵出战次数": "领兵出战次数", "胜数": "胜数", "败数": "败数", "诗词": "诗词", "作者": "作者", "纪念将军id": "纪念将军id", "将军id": "将军id", "影视剧": "影视剧", "饰演者": "饰演者", "战役id": "战役id", "赢方将军id": "赢方将军id", "赢方兵力": "赢方兵力", "败方将军id": "败方将军id", "败方兵力": "败方兵力"}, "table_en": {"战役": "战役", "将军": "将军", "纪念将军的诗词": "纪念将军的诗词", "将军影视形象": "将军影视形象", "参战双方": "参战双方"}}, "学术比赛": {"sqlite": "CREATE TABLE 比赛 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  方向 VARCHAR(50), -- 方向\n  举办单位 VARCHAR(50), -- 举办单位\n  单位性质 VARCHAR(50), -- 单位性质\n  奖金数 INTEGER, -- 奖金数\n  录取队伍数量 INTEGER, -- 录取队伍数量\n  比赛平台 VARCHAR(50), -- 比赛平台\n);\nCREATE TABLE 参赛队伍 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  队名 VARCHAR(50), -- 队名\n  人数 INTEGER, -- 人数\n);\nCREATE TABLE 参赛学生 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  姓名 VARCHAR(50), -- 姓名\n  年龄 INTEGER, -- 年龄\n  学历 VARCHAR(50), -- 学历\n  学校 VARCHAR(50), -- 学校\n);\nCREATE TABLE 参赛成绩 (\n  学生id INTEGER PRIMARY KEY, -- 学生id\n  加入队伍id INTEGER, -- 加入队伍id\n  参加比赛id INTEGER, -- 参加比赛id\n  成绩 VARCHAR(50), -- 成绩\n);\n-- 参赛成绩.参加比赛id can be joined with 比赛.比赛\n-- 参赛成绩.学生id can be joined with 参赛学生.参赛学生\n-- 参赛成绩.加入队伍id can be joined with 参赛队伍.参赛队伍", "columns_en": {"词条id": "词条id", "名称": "名称", "方向": "方向", "举办单位": "举办单位", "单位性质": "单位性质", "奖金数": "奖金数", "录取队伍数量": "录取队伍数量", "比赛平台": "比赛平台", "队名": "队名", "人数": "人数", "姓名": "姓名", "年龄": "年龄", "学历": "学历", "学校": "学校", "学生id": "学生id", "加入队伍id": "加入队伍id", "参加比赛id": "参加比赛id", "成绩": "成绩"}, "table_en": {"比赛": "比赛", "参赛队伍": "参赛队伍", "参赛学生": "参赛学生", "参赛成绩": "参赛成绩"}}, "动物榜单": {"sqlite": "CREATE TABLE 动物 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  学名 VARCHAR(50), -- 学名\n  属性 VARCHAR(50), -- 属性\n);\nCREATE TABLE 最聪明的动物 (\n  动物id INTEGER PRIMARY KEY, -- 动物id\n  排名 INTEGER, -- 排名\n  理由 VARCHAR(50), -- 理由\n);\nCREATE TABLE 最毒的动物 (\n  动物id INTEGER PRIMARY KEY, -- 动物id\n  称号 VARCHAR(50), -- 称号\n  毒性排名 INTEGER, -- 毒性排名\n  攻击力排名 INTEGER, -- 攻击力排名\n  中毒后死亡时间 INTEGER, -- 中毒后死亡时间\n);\nCREATE TABLE 最大的动物 (\n  动物id INTEGER PRIMARY KEY, -- 动物id\n  排名 INTEGER, -- 排名\n  体重 INTEGER, -- 体重\n  说明 VARCHAR(50), -- 说明\n);\nCREATE TABLE 飞得最高的动物 (\n  动物id INTEGER PRIMARY KEY, -- 动物id\n  排名 INTEGER, -- 排名\n  飞行高度 INTEGER, -- 飞行高度\n);\nCREATE TABLE 速度最快的动物 (\n  动物id INTEGER PRIMARY KEY, -- 动物id\n  排名 INTEGER, -- 排名\n  速度 INTEGER, -- 速度\n);\n-- 速度最快的动物.动物id can be joined with 动物.动物\n-- 最大的动物.动物id can be joined with 动物.动物\n-- 最聪明的动物.动物id can be joined with 动物.动物\n-- 最毒的动物.动物id can be joined with 动物.动物\n-- 飞得最高的动物.动物id can be joined with 动物.动物", "columns_en": {"词条id": "词条id", "学名": "学名", "属性": "属性", "动物id": "动物id", "排名": "排名", "理由": "理由", "称号": "称号", "毒性排名": "毒性排名", "攻击力排名": "攻击力排名", "中毒后死亡时间": "中毒后死亡时间", "体重": "体重", "说明": "说明", "飞行高度": "飞行高度", "速度": "速度"}, "table_en": {"动物": "动物", "最聪明的动物": "最聪明的动物", "最毒的动物": "最毒的动物", "最大的动物": "最大的动物", "飞得最高的动物": "飞得最高的动物", "速度最快的动物": "速度最快的动物"}}, "城市地铁": {"sqlite": "CREATE TABLE 中国地铁 (\n  年份 DATETIME PRIMARY KEY, -- 年份\n  总里程 INTEGER, -- 总里程\n  开通城市数量 INTEGER, -- 开通城市数量\n);\nCREATE TABLE 城市 (\n  词条id VARCHAR(50) PRIMARY KEY, -- 词条id\n  城市名称 VARCHAR(50), -- 城市名称\n  所属省份 VARCHAR(50), -- 所属省份\n);\nCREATE TABLE 城市地铁里程 (\n  城市id INTEGER PRIMARY KEY, -- 城市id\n  地铁运营里程 INTEGER, -- 地铁运营里程\n  在建里程 INTEGER, -- 在建里程\n  规划里程 INTEGER, -- 规划里程\n  已运营线路数 INTEGER, -- 已运营线路数\n);\nCREATE TABLE 城市地铁日均客运量 (\n  城市id INTEGER PRIMARY KEY, -- 城市id\n  日均客运量(万人次) INTEGER, -- 日均客运量(万人次)\n  每日每公里客运量(万人次) INTEGER, -- 每日每公里客运量(万人次)\n  每公里运营成本 INTEGER, -- 每公里运营成本\n  每公里运营收入 INTEGER, -- 每公里运营收入\n);\nCREATE TABLE 城市地铁票价 (\n  城市id INTEGER PRIMARY KEY, -- 城市id\n  2元可乘坐里程 INTEGER, -- 2元可乘坐里程\n  3元可乘坐里程 INTEGER, -- 3元可乘坐里程\n  4元可乘坐里程 INTEGER, -- 4元可乘坐里程\n  5元可乘坐里程 INTEGER, -- 5元可乘坐里程\n);\n-- 城市地铁日均客运量.城市id can be joined with 城市.城市\n-- 城市地铁里程.城市id can be joined with 城市.城市\n-- 城市地铁票价.城市id can be joined with 城市.城市", "columns_en": {"年份": "年份", "总里程": "总里程", "开通城市数量": "开通城市数量", "词条id": "词条id", "城市名称": "城市名称", "所属省份": "所属省份", "城市id": "城市id", "地铁运营里程": "地铁运营里程", "在建里程": "在建里程", "规划里程": "规划里程", "已运营线路数": "已运营线路数", "日均客运量(万人次)": "日均客运量(万人次)", "每日每公里客运量(万人次)": "每日每公里客运量(万人次)", "每公里运营成本": "每公里运营成本", "每公里运营收入": "每公里运营收入", "2元可乘坐里程": "2元可乘坐里程", "3元可乘坐里程": "3元可乘坐里程", "4元可乘坐里程": "4元可乘坐里程", "5元可乘坐里程": "5元可乘坐里程"}, "table_en": {"中国地铁": "中国地铁", "城市": "城市", "城市地铁里程": "城市地铁里程", "城市地铁日均客运量": "城市地铁日均客运量", "城市地铁票价": "城市地铁票价"}}, "双11活动": {"sqlite": "CREATE TABLE 电商 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  所属公司 VARCHAR(50), -- 所属公司\n  类型 VARCHAR(50), -- 类型\n  影响力指数 INTEGER, -- 影响力指数\n  排名 INTEGER, -- 排名\n  上线国家数量 INTEGER, -- 上线国家数量\n);\nCREATE TABLE 电商覆盖国家 (\n  电商id INTEGER PRIMARY KEY, -- 电商id\n  支持国家 VARCHAR(50), -- 支持国家\n  上线时间 DATETIME, -- 上线时间\n  负责的分公司名称 VARCHAR(50), -- 负责的分公司名称\n);\nCREATE TABLE 商家 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  所属国家 VARCHAR(50), -- 所属国家\n  主营类别 VARCHAR(50), -- 主营类别\n  网店覆盖国家数量 INTEGER, -- 网店覆盖国家数量\n  实体店数量 INTEGER, -- 实体店数量\n  入驻电商数量 INTEGER, -- 入驻电商数量\n);\nCREATE TABLE 商家网点覆盖国家 (\n  商家id INTEGER PRIMARY KEY, -- 商家id\n  国家 VARCHAR(50), -- 国家\n  实体店数量 INTEGER, -- 实体店数量\n  年平均营业额 INTEGER, -- 年平均营业额\n);\nCREATE TABLE 商家交易额 (\n  商家id INTEGER PRIMARY KEY, -- 商家id\n  电商平台id INTEGER, -- 电商平台id\n  上线品类数量 INTEGER, -- 上线品类数量\n  促销品类数量 INTEGER, -- 促销品类数量\n  平均折扣 INTEGER, -- 平均折扣\n  交易额 INTEGER, -- 交易额\n  占全年销售额比例 INTEGER, -- 占全年销售额比例\n);\nCREATE TABLE 电商活动交易额 (\n  电商平台id INTEGER PRIMARY KEY, -- 电商平台id\n  活动日 VARCHAR(50), -- 活动日\n  参加活动商家数量 INTEGER, -- 参加活动商家数量\n  促销商品数量 INTEGER, -- 促销商品数量\n  交易额 INTEGER, -- 交易额\n);\n-- 电商覆盖国家.电商id can be joined with 电商.电商\n-- 商家交易额.电商平台id can be joined with 电商.电商\n-- 商家交易额.商家id can be joined with 商家.商家\n-- 商家网点覆盖国家.商家id can be joined with 商家.商家\n-- 电商活动交易额.电商平台id can be joined with 电商.电商", "columns_en": {"词条id": "词条id", "名称": "名称", "所属公司": "所属公司", "类型": "类型", "影响力指数": "影响力指数", "排名": "排名", "上线国家数量": "上线国家数量", "电商id": "电商id", "支持国家": "支持国家", "上线时间": "上线时间", "负责的分公司名称": "负责的分公司名称", "所属国家": "所属国家", "主营类别": "主营类别", "网店覆盖国家数量": "网店覆盖国家数量", "实体店数量": "实体店数量", "入驻电商数量": "入驻电商数量", "商家id": "商家id", "国家": "国家", "年平均营业额": "年平均营业额", "电商平台id": "电商平台id", "上线品类数量": "上线品类数量", "促销品类数量": "促销品类数量", "平均折扣": "平均折扣", "交易额": "交易额", "占全年销售额比例": "占全年销售额比例", "活动日": "活动日", "参加活动商家数量": "参加活动商家数量", "促销商品数量": "促销商品数量"}, "table_en": {"电商": "电商", "电商覆盖国家": "电商覆盖国家", "商家": "商家", "商家网点覆盖国家": "商家网点覆盖国家", "商家交易额": "商家交易额", "电商活动交易额": "电商活动交易额"}}, "华语电影奖": {"sqlite": "CREATE TABLE 华语电影奖 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  创办时间 DATETIME, -- 创办时间\n  颁奖周期 INTEGER, -- 颁奖周期\n  颁奖地点 VARCHAR(50), -- 颁奖地点\n);\nCREATE TABLE 演员 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  姓名 VARCHAR(50), -- 姓名\n  性别 VARCHAR(50), -- 性别\n  年龄 INTEGER, -- 年龄\n  主演电影数 INTEGER, -- 主演电影数\n  出演电影数 INTEGER, -- 出演电影数\n  获得提名数 INTEGER, -- 获得提名数\n  获奖次数 INTEGER, -- 获奖次数\n);\nCREATE TABLE 电影 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  上映时间 DATETIME, -- 上映时间\n  片长 INTEGER, -- 片长\n  票房 INTEGER, -- 票房\n  获奖次数 INTEGER, -- 获奖次数\n);\nCREATE TABLE 华语电影奖提名名单 (\n  年份 DATETIME PRIMARY KEY, -- 年份\n  届数 INTEGER, -- 届数\n  提名人id INTEGER, -- 提名人id\n  具体奖项 VARCHAR(50), -- 具体奖项\n  电影奖id INTEGER, -- 电影奖id\n);\nCREATE TABLE 华语电影奖获奖名单 (\n  年份 DATETIME PRIMARY KEY, -- 年份\n  届数 INTEGER, -- 届数\n  电影奖id INTEGER, -- 电影奖id\n  具体奖项 VARCHAR(50), -- 具体奖项\n  获奖人id INTEGER, -- 获奖人id\n  电影id INTEGER, -- 电影id\n);\n-- 华语电影奖获奖名单.获奖人id can be joined with 演员.演员\n-- 华语电影奖提名名单.提名人id can be joined with 演员.演员\n-- 华语电影奖提名名单.电影奖id can be joined with 华语电影奖.华语电影奖\n-- 华语电影奖获奖名单.电影id can be joined with 电影.电影\n-- 华语电影奖获奖名单.电影奖id can be joined with 华语电影奖.华语电影奖", "columns_en": {"词条id": "词条id", "名称": "名称", "创办时间": "创办时间", "颁奖周期": "颁奖周期", "颁奖地点": "颁奖地点", "姓名": "姓名", "性别": "性别", "年龄": "年龄", "主演电影数": "主演电影数", "出演电影数": "出演电影数", "获得提名数": "获得提名数", "获奖次数": "获奖次数", "上映时间": "上映时间", "片长": "片长", "票房": "票房", "年份": "年份", "届数": "届数", "提名人id": "提名人id", "具体奖项": "具体奖项", "电影奖id": "电影奖id", "获奖人id": "获奖人id", "电影id": "电影id"}, "table_en": {"华语电影奖": "华语电影奖", "演员": "演员", "电影": "电影", "华语电影奖提名名单": "华语电影奖提名名单", "华语电影奖获奖名单": "华语电影奖获奖名单"}}, "公司广告": {"sqlite": "CREATE TABLE 公司 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  主要产品 VARCHAR(50), -- 主要产品\n  广告投入成本 INTEGER, -- 广告投入成本\n  广告投入成本占比 INTEGER, -- 广告投入成本占比\n);\nCREATE TABLE 广告平台 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  广告收入 INTEGER, -- 广告收入\n  广告收入占比 INTEGER, -- 广告收入占比\n);\nCREATE TABLE 公司在平台投入广告 (\n  公司id INTEGER PRIMARY KEY, -- 公司id\n  平台id INTEGER, -- 平台id\n  购买关键词数量 INTEGER, -- 购买关键词数量\n  点击率 INTEGER, -- 点击率\n  转换率 INTEGER, -- 转换率\n);\n-- 公司在平台投入广告.平台id can be joined with 广告平台.广告平台\n-- 公司在平台投入广告.公司id can be joined with 公司.公司", "columns_en": {"词条id": "词条id", "名称": "名称", "主要产品": "主要产品", "广告投入成本": "广告投入成本", "广告投入成本占比": "广告投入成本占比", "广告收入": "广告收入", "广告收入占比": "广告收入占比", "公司id": "公司id", "平台id": "平台id", "购买关键词数量": "购买关键词数量", "点击率": "点击率", "转换率": "转换率"}, "table_en": {"公司": "公司", "广告平台": "广告平台", "公司在平台投入广告": "公司在平台投入广告"}}, "赚钱公司榜单": {"sqlite": "CREATE TABLE 国家 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  所属洲 VARCHAR(50), -- 所属洲\n  注册公司数量 INTEGER, -- 注册公司数量\n  上市公司数量 INTEGER, -- 上市公司数量\n);\nCREATE TABLE 世界最赚钱公司 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  所属国家id INTEGER, -- 所属国家id\n  年利润 INTEGER, -- 年利润\n  世界排名 INTEGER, -- 世界排名\n);\nCREATE TABLE 中国最赚钱公司 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  位于城市 VARCHAR(50), -- 位于城市\n  所属省份 VARCHAR(50), -- 所属省份\n  年营业额 INTEGER, -- 年营业额\n  国内排名 INTEGER, -- 国内排名\n  世界排名 INTEGER, -- 世界排名\n);\n-- 世界最赚钱公司.所属国家id can be joined with 国家.国家", "columns_en": {"词条id": "词条id", "名称": "名称", "所属洲": "所属洲", "注册公司数量": "注册公司数量", "上市公司数量": "上市公司数量", "所属国家id": "所属国家id", "年利润": "年利润", "世界排名": "世界排名", "位于城市": "位于城市", "所属省份": "所属省份", "年营业额": "年营业额", "国内排名": "国内排名"}, "table_en": {"国家": "国家", "世界最赚钱公司": "世界最赚钱公司", "中国最赚钱公司": "中国最赚钱公司"}}, "城市拥堵": {"sqlite": "CREATE TABLE 城市 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  城市 VARCHAR(50), -- 城市\n  所属省份 VARCHAR(50), -- 所属省份\n  城市人口 INTEGER, -- 城市人口\n  城市面积 INTEGER, -- 城市面积\n  汽车保有量级别(辆) INTEGER, -- 汽车保有量级别(辆)\n  通勤高峰拥堵指数 INTEGER, -- 通勤高峰拥堵指数\n  通勤高峰实际速度(千米/时) INTEGER, -- 通勤高峰实际速度(千米/时)\n  拥堵排名 INTEGER, -- 拥堵排名\n);\nCREATE TABLE 全国交通枢纽 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  交通枢纽站 VARCHAR(50), -- 交通枢纽站\n  所属城市id VARCHAR(50), -- 所属城市id\n  所属省份 INTEGER, -- 所属省份\n  平均拥堵指数 INTEGER, -- 平均拥堵指数\n  周边路网平均速度(千米/时) INTEGER, -- 周边路网平均速度(千米/时)\n  拥堵排名 INTEGER, -- 拥堵排名\n);\nCREATE TABLE 旅游景点 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  景点名称 VARCHAR(50), -- 景点名称\n  所属城市id INTEGER, -- 所属城市id\n  平均拥堵指数 INTEGER, -- 平均拥堵指数\n  周边路网平均速度(千米/时) INTEGER, -- 周边路网平均速度(千米/时)\n  拥堵排名 INTEGER, -- 拥堵排名\n);\nCREATE TABLE 全国热门景点 (\n  景点id INTEGER PRIMARY KEY, -- 景点id\n  日均接待游客数量 INTEGER, -- 日均接待游客数量\n  日均外省游客数量 INTEGER, -- 日均外省游客数量\n  热度排名 INTEGER, -- 热度排名\n);\nCREATE TABLE 热门出境游城市 (\n  城市 VARCHAR(50) PRIMARY KEY, -- 城市\n  所在国家 VARCHAR(50), -- 所在国家\n  国内游客数量 INTEGER, -- 国内游客数量\n  排名 INTEGER, -- 排名\n);\n-- 旅游景点.所属城市id can be joined with 城市.城市\n-- 全国交通枢纽.所属城市id can be joined with 城市.城市\n-- 全国热门景点.景点id can be joined with 旅游景点.旅游景点", "columns_en": {"词条id": "词条id", "城市": "城市", "所属省份": "所属省份", "城市人口": "城市人口", "城市面积": "城市面积", "汽车保有量级别(辆)": "汽车保有量级别(辆)", "通勤高峰拥堵指数": "通勤高峰拥堵指数", "通勤高峰实际速度(千米/时)": "通勤高峰实际速度(千米/时)", "拥堵排名": "拥堵排名", "交通枢纽站": "交通枢纽站", "所属城市id": "所属城市id", "平均拥堵指数": "平均拥堵指数", "周边路网平均速度(千米/时)": "周边路网平均速度(千米/时)", "景点名称": "景点名称", "景点id": "景点id", "日均接待游客数量": "日均接待游客数量", "日均外省游客数量": "日均外省游客数量", "热度排名": "热度排名", "所在国家": "所在国家", "国内游客数量": "国内游客数量", "排名": "排名"}, "table_en": {"城市": "城市", "全国交通枢纽": "全国交通枢纽", "旅游景点": "旅游景点", "全国热门景点": "全国热门景点", "热门出境游城市": "热门出境游城市"}}, "手机品牌代言人": {"sqlite": "CREATE TABLE 代言明星 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  姓名 VARCHAR(50), -- 姓名\n  性别 VARCHAR(50), -- 性别\n  年龄 INTEGER, -- 年龄\n  所属国家 VARCHAR(50), -- 所属国家\n  职业 VARCHAR(50), -- 职业\n  财富排名 INTEGER, -- 财富排名\n);\nCREATE TABLE 智能手机品牌 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  所属国家 VARCHAR(50), -- 所属国家\n  世界500强排名 INTEGER, -- 世界500强排名\n  出货量 INTEGER, -- 出货量\n  市场份额 INTEGER, -- 市场份额\n);\nCREATE TABLE 手机代言明星 (\n  明星id INTEGER PRIMARY KEY, -- 明星id\n  品牌id INTEGER, -- 品牌id\n  开始年份 DATETIME, -- 开始年份\n  代言年数 INTEGER, -- 代言年数\n  代言费 INTEGER, -- 代言费\n  代言型号数量 INTEGER, -- 代言型号数量\n);\n-- 手机代言明星.明星id can be joined with 代言明星.代言明星\n-- 手机代言明星.品牌id can be joined with 智能手机品牌.智能手机品牌", "columns_en": {"词条id": "词条id", "姓名": "姓名", "性别": "性别", "年龄": "年龄", "所属国家": "所属国家", "职业": "职业", "财富排名": "财富排名", "名称": "名称", "世界500强排名": "世界500强排名", "出货量": "出货量", "市场份额": "市场份额", "明星id": "明星id", "品牌id": "品牌id", "开始年份": "开始年份", "代言年数": "代言年数", "代言费": "代言费", "代言型号数量": "代言型号数量"}, "table_en": {"代言明星": "代言明星", "智能手机品牌": "智能手机品牌", "手机代言明星": "手机代言明星"}}, "歌手演唱会": {"sqlite": "CREATE TABLE 歌手 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  姓名 VARCHAR(50), -- 姓名\n  出生日期 DATETIME, -- 出生日期\n  出生地 VARCHAR(50), -- 出生地\n  演唱会场次 INTEGER, -- 演唱会场次\n);\nCREATE TABLE 场馆 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  容纳人数 INTEGER, -- 容纳人数\n  所属城市 VARCHAR(50), -- 所属城市\n);\nCREATE TABLE 演唱会 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  演唱会名称 VARCHAR(50), -- 演唱会名称\n  时间 DATETIME, -- 时间\n  场馆id INTEGER, -- 场馆id\n  歌手id INTEGER, -- 歌手id\n);\nCREATE TABLE 演唱会记录 (\n  歌手id INTEGER PRIMARY KEY, -- 歌手id\n  年份 DATETIME, -- 年份\n  场次 INTEGER, -- 场次\n);\n-- 演唱会.歌手id can be joined with 歌手.歌手\n-- 演唱会.场馆id can be joined with 场馆.场馆\n-- 演唱会记录.歌手id can be joined with 歌手.歌手", "columns_en": {"词条id": "词条id", "姓名": "姓名", "出生日期": "出生日期", "出生地": "出生地", "演唱会场次": "演唱会场次", "名称": "名称", "容纳人数": "容纳人数", "所属城市": "所属城市", "演唱会名称": "演唱会名称", "时间": "时间", "场馆id": "场馆id", "歌手id": "歌手id", "年份": "年份", "场次": "场次"}, "table_en": {"歌手": "歌手", "场馆": "场馆", "演唱会": "演唱会", "演唱会记录": "演唱会记录"}}, "2019年各城市马拉松": {"sqlite": "CREATE TABLE 中国各城市马拉松 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  举办城市 VARCHAR(50), -- 举办城市\n  省份 VARCHAR(50), -- 省份\n  时间 DATETIME, -- 时间\n  全程赛道 INTEGER, -- 全程赛道\n  人数规模 INTEGER, -- 人数规模\n);\nCREATE TABLE 马拉松赛程 (\n  马拉松id INTEGER PRIMARY KEY, -- 马拉松id\n  赛程 VARCHAR(50), -- 赛程\n  公里数 INTEGER, -- 公里数\n  报名人数 INTEGER, -- 报名人数\n  中签率 INTEGER, -- 中签率\n);\nCREATE TABLE 历届马拉松纪录 (\n  年份 DATETIME PRIMARY KEY, -- 年份\n  城市 VARCHAR(50), -- 城市\n  参赛者最小年龄 INTEGER, -- 参赛者最小年龄\n  参赛者最大年龄 INTEGER, -- 参赛者最大年龄\n  全程最少时间 INTEGER, -- 全程最少时间\n);\n-- 马拉松赛程.马拉松id can be joined with 中国各城市马拉松.中国各城市马拉松", "columns_en": {"词条id": "词条id", "名称": "名称", "举办城市": "举办城市", "省份": "省份", "时间": "时间", "全程赛道": "全程赛道", "人数规模": "人数规模", "马拉松id": "马拉松id", "赛程": "赛程", "公里数": "公里数", "报名人数": "报名人数", "中签率": "中签率", "年份": "年份", "城市": "城市", "参赛者最小年龄": "参赛者最小年龄", "参赛者最大年龄": "参赛者最大年龄", "全程最少时间": "全程最少时间"}, "table_en": {"中国各城市马拉松": "中国各城市马拉松", "马拉松赛程": "马拉松赛程", "历届马拉松纪录": "历届马拉松纪录"}}, "动物天敌和朋友": {"sqlite": "CREATE TABLE 动物 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  中文学名 VARCHAR(50), -- 中文学名\n  食性 VARCHAR(50), -- 食性\n  是否是人类朋友 BINARY, -- 是否是人类朋友\n  理由 VARCHAR(50), -- 理由\n);\nCREATE TABLE 动物的天敌 (\n  动物id INTEGER PRIMARY KEY, -- 动物id\n  天敌id INTEGER, -- 天敌id\n  克星原因 VARCHAR(50), -- 克星原因\n);\nCREATE TABLE 动物朋友 (\n  动物id INTEGER PRIMARY KEY, -- 动物id\n  朋友id INTEGER, -- 朋友id\n);\n-- 动物的天敌.动物id can be joined with 动物.动物\n-- 动物朋友.动物id can be joined with 动物.动物\n-- 动物朋友.朋友id can be joined with 动物.动物\n-- 动物的天敌.天敌id can be joined with 动物.动物", "columns_en": {"词条id": "词条id", "中文学名": "中文学名", "食性": "食性", "是否是人类朋友": "是否是人类朋友", "理由": "理由", "动物id": "动物id", "天敌id": "天敌id", "克星原因": "克星原因", "朋友id": "朋友id"}, "table_en": {"动物": "动物", "动物的天敌": "动物的天敌", "动物朋友": "动物朋友"}}, "中国景点": {"sqlite": "CREATE TABLE 景区 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  占地面积 INTEGER, -- 占地面积\n  景点级别 INTEGER, -- 景点级别\n  旺季门票价格 INTEGER, -- 旺季门票价格\n  淡季门票价格 INTEGER, -- 淡季门票价格\n  始建时间 DATETIME, -- 始建时间\n  所属城市 VARCHAR(50), -- 所属城市\n  所属省份 VARCHAR(50), -- 所属省份\n);\nCREATE TABLE 景点 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  地理位置 VARCHAR(50), -- 地理位置\n);\nCREATE TABLE 交通站 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  类型 VARCHAR(50), -- 类型\n  景区id INTEGER, -- 景区id\n  距离 INTEGER, -- 距离\n);\nCREATE TABLE 景区景点 (\n  景点id INTEGER PRIMARY KEY, -- 景点id\n  景区id INTEGER, -- 景区id\n  是否著名 BINARY, -- 是否著名\n);\nCREATE TABLE 临近景区 (\n  景区id INTEGER PRIMARY KEY, -- 景区id\n  相邻景区id INTEGER, -- 相邻景区id\n  距离 INTEGER, -- 距离\n);\nCREATE TABLE 博物馆 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  占地面积 INTEGER, -- 占地面积\n  开馆时间 DATETIME, -- 开馆时间\n  所属城市 VARCHAR(50), -- 所属城市\n  票价 VARCHAR(50), -- 票价\n);\nCREATE TABLE 重点文物保护单位 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  门票价格 INTEGER, -- 门票价格\n  保护级别 VARCHAR(50), -- 保护级别\n  所属城市 VARCHAR(50), -- 所属城市\n  评定年份 DATETIME, -- 评定年份\n);\nCREATE TABLE 动物园 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  占地面积 INTEGER, -- 占地面积\n  竣工时间 DATETIME, -- 竣工时间\n  门票价格 INTEGER, -- 门票价格\n  动物种类 INTEGER, -- 动物种类\n  所属城市 VARCHAR(50), -- 所属城市\n);\nCREATE TABLE 馆藏动物 (\n  动物名称 VARCHAR(50) PRIMARY KEY, -- 动物名称\n  动物园id INTEGER, -- 动物园id\n  数量 INTEGER, -- 数量\n);\nCREATE TABLE 游乐园 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  占地面积 INTEGER, -- 占地面积\n  门票价格 INTEGER, -- 门票价格\n  总投资 INTEGER, -- 总投资\n  所属城市 VARCHAR(50), -- 所属城市\n);\nCREATE TABLE 娱乐项目 (\n  项目名称 VARCHAR(50) PRIMARY KEY, -- 项目名称\n  游乐园id INTEGER, -- 游乐园id\n  季节 VARCHAR(50), -- 季节\n  排名 INTEGER, -- 排名\n);\n-- 临近景区.景区id can be joined with 景区.景区\n-- 临近景区.相邻景区id can be joined with 景区.景区\n-- 馆藏动物.动物园id can be joined with 动物园.动物园\n-- 娱乐项目.游乐园id can be joined with 游乐园.游乐园\n-- 景区景点.景区id can be joined with 景区.景区\n-- 交通站.景区id can be joined with 景区.景区\n-- 景区景点.景点id can be joined with 景点.景点", "columns_en": {"词条id": "词条id", "名称": "名称", "占地面积": "占地面积", "景点级别": "景点级别", "旺季门票价格": "旺季门票价格", "淡季门票价格": "淡季门票价格", "始建时间": "始建时间", "所属城市": "所属城市", "所属省份": "所属省份", "地理位置": "地理位置", "类型": "类型", "景区id": "景区id", "距离": "距离", "景点id": "景点id", "是否著名": "是否著名", "相邻景区id": "相邻景区id", "开馆时间": "开馆时间", "票价": "票价", "门票价格": "门票价格", "保护级别": "保护级别", "评定年份": "评定年份", "竣工时间": "竣工时间", "动物种类": "动物种类", "动物名称": "动物名称", "动物园id": "动物园id", "数量": "数量", "总投资": "总投资", "项目名称": "项目名称", "游乐园id": "游乐园id", "季节": "季节", "排名": "排名"}, "table_en": {"景区": "景区", "景点": "景点", "交通站": "交通站", "景区景点": "景区景点", "临近景区": "临近景区", "博物馆": "博物馆", "重点文物保护单位": "重点文物保护单位", "动物园": "动物园", "馆藏动物": "馆藏动物", "游乐园": "游乐园", "娱乐项目": "娱乐项目"}}, "电影票预定": {"sqlite": "CREATE TABLE 影院 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  地址 VARCHAR(50), -- 地址\n  与当前距离 INTEGER, -- 与当前距离\n  用户评分 INTEGER, -- 用户评分\n);\nCREATE TABLE 电影 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  拍摄国家 VARCHAR(50), -- 拍摄国家\n  类型 VARCHAR(50), -- 类型\n  片长 INTEGER, -- 片长\n  豆瓣评分 INTEGER, -- 豆瓣评分\n);\nCREATE TABLE 影院上映电影 (\n  电影id INTEGER PRIMARY KEY, -- 电影id\n  影院id INTEGER, -- 影院id\n  上映时间 DATETIME, -- 上映时间\n  票价 INTEGER, -- 票价\n  余票数量 INTEGER, -- 余票数量\n);\n-- 影院上映电影.影院id can be joined with 影院.影院\n-- 影院上映电影.电影id can be joined with 电影.电影", "columns_en": {"词条id": "词条id", "名称": "名称", "地址": "地址", "与当前距离": "与当前距离", "用户评分": "用户评分", "拍摄国家": "拍摄国家", "类型": "类型", "片长": "片长", "豆瓣评分": "豆瓣评分", "电影id": "电影id", "影院id": "影院id", "上映时间": "上映时间", "票价": "票价", "余票数量": "余票数量"}, "table_en": {"影院": "影院", "电影": "电影", "影院上映电影": "影院上映电影"}}, "明星关系": {"sqlite": "CREATE TABLE 明星 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  姓名 VARCHAR(50), -- 姓名\n  年龄 INTEGER, -- 年龄\n  毕业院校 VARCHAR(50), -- 毕业院校\n  毕业时间 DATETIME, -- 毕业时间\n);\nCREATE TABLE 明星夫妻 (\n  明星id INTEGER PRIMARY KEY, -- 明星id\n  配偶id INTEGER, -- 配偶id\n  结婚时间 DATETIME, -- 结婚时间\n  子女数量 INTEGER, -- 子女数量\n);\nCREATE TABLE 离异明星 (\n  明星id INTEGER PRIMARY KEY, -- 明星id\n  配偶id INTEGER, -- 配偶id\n  离异时间 DATETIME, -- 离异时间\n  子女数量 INTEGER, -- 子女数量\n);\nCREATE TABLE 明星好友 (\n  明星id INTEGER PRIMARY KEY, -- 明星id\n  好友id INTEGER, -- 好友id\n  关系 VARCHAR(50), -- 关系\n);\n-- 明星夫妻.配偶id can be joined with 明星.明星\n-- 离异明星.配偶id can be joined with 明星.明星\n-- 明星夫妻.明星id can be joined with 明星.明星\n-- 明星好友.好友id can be joined with 明星.明星\n-- 明星好友.明星id can be joined with 明星.明星\n-- 离异明星.明星id can be joined with 明星.明星", "columns_en": {"词条id": "词条id", "姓名": "姓名", "年龄": "年龄", "毕业院校": "毕业院校", "毕业时间": "毕业时间", "明星id": "明星id", "配偶id": "配偶id", "结婚时间": "结婚时间", "子女数量": "子女数量", "离异时间": "离异时间", "好友id": "好友id", "关系": "关系"}, "table_en": {"明星": "明星", "明星夫妻": "明星夫妻", "离异明星": "离异明星", "明星好友": "明星好友"}}, "地震": {"sqlite": "CREATE TABLE 地震 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  发生时间 DATETIME, -- 发生时间\n  地理位置 VARCHAR(50), -- 地理位置\n  震源深度 INTEGER, -- 震源深度\n  震级 INTEGER, -- 震级\n  震中烈度 INTEGER, -- 震中烈度\n  死亡人数 INTEGER, -- 死亡人数\n  受伤人数 INTEGER, -- 受伤人数\n  持续时间 INTEGER, -- 持续时间\n  经济损失 INTEGER, -- 经济损失\n);\nCREATE TABLE 汶川地震受灾地区 (\n  地区 VARCHAR(50) PRIMARY KEY, -- 地区\n  死亡人数 INTEGER, -- 死亡人数\n  受伤人数 INTEGER, -- 受伤人数\n  失踪人数 INTEGER, -- 失踪人数\n);\nCREATE TABLE 地震衍生剧 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  剧名 VARCHAR(50), -- 剧名\n  类型 VARCHAR(50), -- 类型\n  地震id INTEGER, -- 地震id\n  播出时间 DATETIME, -- 播出时间\n  导演 VARCHAR(50), -- 导演\n);\nCREATE TABLE 地震纪念馆 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  地点 INTEGER, -- 地点\n  开馆时间 INTEGER, -- 开馆时间\n  地震id DATETIME, -- 地震id\n  建筑面积 VARCHAR(50), -- 建筑面积\n);\n-- 地震衍生剧.地震id can be joined with 地震.地震\n-- 地震纪念馆.地震id can be joined with 地震.地震", "columns_en": {"词条id": "词条id", "名称": "名称", "发生时间": "发生时间", "地理位置": "地理位置", "震源深度": "震源深度", "震级": "震级", "震中烈度": "震中烈度", "死亡人数": "死亡人数", "受伤人数": "受伤人数", "持续时间": "持续时间", "经济损失": "经济损失", "地区": "地区", "失踪人数": "失踪人数", "剧名": "剧名", "类型": "类型", "地震id": "地震id", "播出时间": "播出时间", "导演": "导演", "地点": "地点", "开馆时间": "开馆时间", "建筑面积": "建筑面积"}, "table_en": {"地震": "地震", "汶川地震受灾地区": "汶川地震受灾地区", "地震衍生剧": "地震衍生剧", "地震纪念馆": "地震纪念馆"}}, "羽毛球": {"sqlite": "CREATE TABLE 重要赛事 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  赛事名称 VARCHAR(50), -- 赛事名称\n  人群 VARCHAR(50), -- 人群\n  成立时间 DATETIME, -- 成立时间\n  比赛间隔年 INTEGER, -- 比赛间隔年\n  比赛项目数量 INTEGER, -- 比赛项目数量\n);\nCREATE TABLE 冠军国家 (\n  国家名称 VARCHAR(50) PRIMARY KEY, -- 国家名称\n  赛事id INTEGER, -- 赛事id\n  冠军数量 INTEGER, -- 冠军数量\n);\nCREATE TABLE 羽毛球球员 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  中文名 VARCHAR(50), -- 中文名\n  性别 VARCHAR(50), -- 性别\n  国籍 VARCHAR(50), -- 国籍\n  出生日期 DATETIME, -- 出生日期\n  身高 INTEGER, -- 身高\n);\nCREATE TABLE 奥运会冠亚军 (\n  奥运会名称 VARCHAR(50) PRIMARY KEY, -- 奥运会名称\n  项目名称 VARCHAR(50), -- 项目名称\n  金牌获得者id INTEGER, -- 金牌获得者id\n  银牌获得者id INTEGER, -- 银牌获得者id\n  铜牌获得者id INTEGER, -- 铜牌获得者id\n);\nCREATE TABLE 球员夺冠次数 (\n  球员id INTEGER PRIMARY KEY, -- 球员id\n  赛事id INTEGER, -- 赛事id\n  冠军次数 INTEGER, -- 冠军次数\n  亚军次数 INTEGER, -- 亚军次数\n  季军次数 INTEGER, -- 季军次数\n);\n-- 冠军国家.赛事id can be joined with 重要赛事.重要赛事\n-- 奥运会冠亚军.铜牌获得者id can be joined with 羽毛球球员.羽毛球球员\n-- 球员夺冠次数.赛事id can be joined with 重要赛事.重要赛事\n-- 球员夺冠次数.球员id can be joined with 羽毛球球员.羽毛球球员\n-- 奥运会冠亚军.金牌获得者id can be joined with 羽毛球球员.羽毛球球员\n-- 奥运会冠亚军.银牌获得者id can be joined with 羽毛球球员.羽毛球球员", "columns_en": {"词条id": "词条id", "赛事名称": "赛事名称", "人群": "人群", "成立时间": "成立时间", "比赛间隔年": "比赛间隔年", "比赛项目数量": "比赛项目数量", "国家名称": "国家名称", "赛事id": "赛事id", "冠军数量": "冠军数量", "中文名": "中文名", "性别": "性别", "国籍": "国籍", "出生日期": "出生日期", "身高": "身高", "奥运会名称": "奥运会名称", "项目名称": "项目名称", "金牌获得者id": "金牌获得者id", "银牌获得者id": "银牌获得者id", "铜牌获得者id": "铜牌获得者id", "球员id": "球员id", "冠军次数": "冠军次数", "亚军次数": "亚军次数", "季军次数": "季军次数"}, "table_en": {"重要赛事": "重要赛事", "冠军国家": "冠军国家", "羽毛球球员": "羽毛球球员", "奥运会冠亚军": "奥运会冠亚军", "球员夺冠次数": "球员夺冠次数"}}, "理财公司": {"sqlite": "CREATE TABLE 理财公司 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  公司名称 VARCHAR(50), -- 公司名称\n  创立时间 DATETIME, -- 创立时间\n  官网 VARCHAR(50), -- 官网\n  所属集团 VARCHAR(50), -- 所属集团\n);\nCREATE TABLE 银行 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  总部地点 VARCHAR(50), -- 总部地点\n  所属城市 VARCHAR(50), -- 所属城市\n  所属省份 VARCHAR(50), -- 所属省份\n  成立时间 DATETIME, -- 成立时间\n  公司类型 VARCHAR(50), -- 公司类型\n);\nCREATE TABLE 理财公司合作银行 (\n  公司id INTEGER PRIMARY KEY, -- 公司id\n  银行id INTEGER, -- 银行id\n  合作时间 DATETIME, -- 合作时间\n  是否有电子银行 BINARY, -- 是否有电子银行\n);\nCREATE TABLE 理财产品 (\n  产品 VARCHAR(50) PRIMARY KEY, -- 产品\n  公司id INTEGER, -- 公司id\n  支持银行id INTEGER, -- 支持银行id\n  年化收益率 INTEGER, -- 年化收益率\n  期限 INTEGER, -- 期限\n  起投金额 INTEGER, -- 起投金额\n);\n-- 理财公司合作银行.银行id can be joined with 银行.银行\n-- 理财产品.支持银行id can be joined with 银行.银行\n-- 理财产品.公司id can be joined with 理财公司.理财公司\n-- 理财公司合作银行.公司id can be joined with 理财公司.理财公司", "columns_en": {"词条id": "词条id", "公司名称": "公司名称", "创立时间": "创立时间", "官网": "官网", "所属集团": "所属集团", "名称": "名称", "总部地点": "总部地点", "所属城市": "所属城市", "所属省份": "所属省份", "成立时间": "成立时间", "公司类型": "公司类型", "公司id": "公司id", "银行id": "银行id", "合作时间": "合作时间", "是否有电子银行": "是否有电子银行", "产品": "产品", "支持银行id": "支持银行id", "年化收益率": "年化收益率", "期限": "期限", "起投金额": "起投金额"}, "table_en": {"理财公司": "理财公司", "银行": "银行", "理财公司合作银行": "理财公司合作银行", "理财产品": "理财产品"}}, "城市活力研究": {"sqlite": "CREATE TABLE 百城 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  城市 VARCHAR(50), -- 城市\n  排名 INTEGER, -- 排名\n  人口吸引力指数 INTEGER, -- 人口吸引力指数\n  同比排名变化 INTEGER, -- 同比排名变化\n  环比排名变化 INTEGER, -- 环比排名变化\n);\nCREATE TABLE 人口来源城市 (\n  城市id VARCHAR(50) PRIMARY KEY, -- 城市id\n  人口来源省份 VARCHAR(50), -- 人口来源省份\n  流入人口占比 INTEGER, -- 流入人口占比\n  排名 INTEGER, -- 排名\n);\nCREATE TABLE 人口去向城市 (\n  城市id VARCHAR(50) PRIMARY KEY, -- 城市id\n  人口去向省份 VARCHAR(50), -- 人口去向省份\n  流出人口占比 INTEGER, -- 流出人口占比\n  排名 INTEGER, -- 排名\n);\nCREATE TABLE 流动人口年龄 (\n  年份 DATETIME PRIMARY KEY, -- 年份\n  年龄段 INTEGER, -- 年龄段\n  占比 INTEGER, -- 占比\n);\nCREATE TABLE 流动人口学历 (\n  年份 DATETIME PRIMARY KEY, -- 年份\n  学历 VARCHAR(50), -- 学历\n  占比 INTEGER, -- 占比\n);\nCREATE TABLE 城市酒吧活力 (\n  城市id VARCHAR(50) PRIMARY KEY, -- 城市id\n  酒吧数量 INTEGER, -- 酒吧数量\n  排名 INTEGER, -- 排名\n  周末客流量 INTEGER, -- 周末客流量\n  节假日客流量 INTEGER, -- 节假日客流量\n  平日客流量 INTEGER, -- 平日客流量\n);\nCREATE TABLE 酒吧顾客年龄 (\n  顾客年龄段 INTEGER PRIMARY KEY, -- 顾客年龄段\n  占比 INTEGER, -- 占比\n);\nCREATE TABLE 城市美食 (\n  城市id VARCHAR(50) PRIMARY KEY, -- 城市id\n  美食名称 VARCHAR(50), -- 美食名称\n  搜索指数 INTEGER, -- 搜索指数\n  关注排名 INTEGER, -- 关注排名\n);\nCREATE TABLE 城市文化 (\n  城市id INTEGER PRIMARY KEY, -- 城市id\n  文化名称 VARCHAR(50), -- 文化名称\n  关注热度 INTEGER, -- 关注热度\n  关注排名 INTEGER, -- 关注排名\n);\n-- 人口去向城市.城市id can be joined with 百城.百城\n-- 城市文化.城市id can be joined with 百城.百城\n-- 城市酒吧活力.城市id can be joined with 百城.百城\n-- 人口来源城市.城市id can be joined with 百城.百城\n-- 城市美食.城市id can be joined with 百城.百城", "columns_en": {"词条id": "词条id", "城市": "城市", "排名": "排名", "人口吸引力指数": "人口吸引力指数", "同比排名变化": "同比排名变化", "环比排名变化": "环比排名变化", "城市id": "城市id", "人口来源省份": "人口来源省份", "流入人口占比": "流入人口占比", "人口去向省份": "人口去向省份", "流出人口占比": "流出人口占比", "年份": "年份", "年龄段": "年龄段", "占比": "占比", "学历": "学历", "酒吧数量": "酒吧数量", "周末客流量": "周末客流量", "节假日客流量": "节假日客流量", "平日客流量": "平日客流量", "顾客年龄段": "顾客年龄段", "美食名称": "美食名称", "搜索指数": "搜索指数", "关注排名": "关注排名", "文化名称": "文化名称", "关注热度": "关注热度"}, "table_en": {"百城": "百城", "人口来源城市": "人口来源城市", "人口去向城市": "人口去向城市", "流动人口年龄": "流动人口年龄", "流动人口学历": "流动人口学历", "城市酒吧活力": "城市酒吧活力", "酒吧顾客年龄": "酒吧顾客年龄", "城市美食": "城市美食", "城市文化": "城市文化"}}, "平台自制节目": {"sqlite": "CREATE TABLE 平台 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  平台名称 VARCHAR(50), -- 平台名称\n  年会费 INTEGER, -- 年会费\n  季度会费 INTEGER, -- 季度会费\n  月会费 INTEGER, -- 月会费\n  口碑 INTEGER, -- 口碑\n);\nCREATE TABLE 综艺节目 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  综艺名称 VARCHAR(50), -- 综艺名称\n  制作公司 VARCHAR(50), -- 制作公司\n  平台id VARCHAR(50), -- 平台id\n  期数 INTEGER, -- 期数\n  首播时间 DATETIME, -- 首播时间\n  每周播出时间 VARCHAR(50), -- 每周播出时间\n  播出状态 VARCHAR(50), -- 播出状态\n);\nCREATE TABLE 艺人 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  姓名 VARCHAR(50), -- 姓名\n  民族 VARCHAR(50), -- 民族\n  经纪公司 VARCHAR(50), -- 经纪公司\n  职业 VARCHAR(50), -- 职业\n);\nCREATE TABLE 节目阵容 (\n  艺人id INTEGER PRIMARY KEY, -- 艺人id\n  综艺节目id INTEGER, -- 综艺节目id\n  身份 VARCHAR(50), -- 身份\n  参加期数 INTEGER, -- 参加期数\n);\n-- 节目阵容.艺人id can be joined with 艺人.艺人\n-- 节目阵容.综艺节目id can be joined with 综艺节目.综艺节目\n-- 综艺节目.平台id can be joined with 平台.平台", "columns_en": {"词条id": "词条id", "平台名称": "平台名称", "年会费": "年会费", "季度会费": "季度会费", "月会费": "月会费", "口碑": "口碑", "综艺名称": "综艺名称", "制作公司": "制作公司", "平台id": "平台id", "期数": "期数", "首播时间": "首播时间", "每周播出时间": "每周播出时间", "播出状态": "播出状态", "姓名": "姓名", "民族": "民族", "经纪公司": "经纪公司", "职业": "职业", "艺人id": "艺人id", "综艺节目id": "综艺节目id", "身份": "身份", "参加期数": "参加期数"}, "table_en": {"平台": "平台", "综艺节目": "综艺节目", "艺人": "艺人", "节目阵容": "节目阵容"}}, "医院": {"sqlite": "CREATE TABLE 城市 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  所属省份 VARCHAR(50), -- 所属省份\n  三甲医院数量 INTEGER, -- 三甲医院数量\n  人口数量 INTEGER, -- 人口数量\n  老年人口占比 INTEGER, -- 老年人口占比\n);\nCREATE TABLE 医院 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  所属城市id INTEGER, -- 所属城市id\n  医院等级 INTEGER, -- 医院等级\n  职工数量 INTEGER, -- 职工数量\n  院士数量 INTEGER, -- 院士数量\n  科室数量 INTEGER, -- 科室数量\n  重点专科数量 INTEGER, -- 重点专科数量\n);\nCREATE TABLE 医院排名 (\n  年份 DATETIME PRIMARY KEY, -- 年份\n  医院id INTEGER, -- 医院id\n  排名 INTEGER, -- 排名\n  接待病患数量(万人次) INTEGER, -- 接待病患数量(万人次)\n  手术数量 INTEGER, -- 手术数量\n);\nCREATE TABLE 特色科室 (\n  科室 INTEGER PRIMARY KEY, -- 科室\n  医院id INTEGER, -- 医院id\n  是否重点 BINARY, -- 是否重点\n  是否研究中心 BINARY, -- 是否研究中心\n);\n-- 医院排名.医院id can be joined with 医院.医院\n-- 特色科室.医院id can be joined with 医院.医院\n-- 医院.所属城市id can be joined with 城市.城市", "columns_en": {"词条id": "词条id", "名称": "名称", "所属省份": "所属省份", "三甲医院数量": "三甲医院数量", "人口数量": "人口数量", "老年人口占比": "老年人口占比", "所属城市id": "所属城市id", "医院等级": "医院等级", "职工数量": "职工数量", "院士数量": "院士数量", "科室数量": "科室数量", "重点专科数量": "重点专科数量", "年份": "年份", "医院id": "医院id", "排名": "排名", "接待病患数量(万人次)": "接待病患数量(万人次)", "手术数量": "手术数量", "科室": "科室", "是否重点": "是否重点", "是否研究中心": "是否研究中心"}, "table_en": {"城市": "城市", "医院": "医院", "医院排名": "医院排名", "特色科室": "特色科室"}}, "动物": {"sqlite": "CREATE TABLE 城市 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  气候地带 VARCHAR(50), -- 气候地带\n  所属国家 VARCHAR(50), -- 所属国家\n  所属洲 VARCHAR(50), -- 所属洲\n);\nCREATE TABLE 动物 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  中文学名 VARCHAR(50), -- 中文学名\n  所属纲 VARCHAR(50), -- 所属纲\n  所属科 VARCHAR(50), -- 所属科\n  食性 VARCHAR(50), -- 食性\n  濒危级别 VARCHAR(50), -- 濒危级别\n  保护级别 VARCHAR(50), -- 保护级别\n);\nCREATE TABLE 动物分布城市 (\n  动物id INTEGER PRIMARY KEY, -- 动物id\n  城市id INTEGER, -- 城市id\n  现存数量 INTEGER, -- 现存数量\n);\nCREATE TABLE 动物电影 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  影片名 VARCHAR(50), -- 影片名\n  动物id INTEGER, -- 动物id\n  拍摄国家 VARCHAR(50), -- 拍摄国家\n  类型 VARCHAR(50), -- 类型\n);\nCREATE TABLE 动物寓言故事 (\n  动物id INTEGER PRIMARY KEY, -- 动物id\n  寓言故事 VARCHAR(50), -- 寓言故事\n  形象 VARCHAR(50), -- 形象\n);\n-- 动物分布城市.城市id can be joined with 城市.城市\n-- 动物分布城市.动物id can be joined with 动物.动物\n-- 动物电影.动物id can be joined with 动物.动物\n-- 动物寓言故事.动物id can be joined with 动物.动物", "columns_en": {"词条id": "词条id", "名称": "名称", "气候地带": "气候地带", "所属国家": "所属国家", "所属洲": "所属洲", "中文学名": "中文学名", "所属纲": "所属纲", "所属科": "所属科", "食性": "食性", "濒危级别": "濒危级别", "保护级别": "保护级别", "动物id": "动物id", "城市id": "城市id", "现存数量": "现存数量", "影片名": "影片名", "拍摄国家": "拍摄国家", "类型": "类型", "寓言故事": "寓言故事", "形象": "形象"}, "table_en": {"城市": "城市", "动物": "动物", "动物分布城市": "动物分布城市", "动物电影": "动物电影", "动物寓言故事": "动物寓言故事"}}, "招聘会和宣讲会": {"sqlite": "CREATE TABLE 公司 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  行业 VARCHAR(50), -- 行业\n  校招人数 INTEGER, -- 校招人数\n);\nCREATE TABLE 学校 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  所在城市 VARCHAR(50), -- 所在城市\n  毕业人数 INTEGER, -- 毕业人数\n);\nCREATE TABLE 学校各专业 (\n  学校id INTEGER PRIMARY KEY, -- 学校id\n  专业 VARCHAR(50), -- 专业\n  毕业人数 INTEGER, -- 毕业人数\n  专业全国排名 INTEGER, -- 专业全国排名\n  平均薪资 INTEGER, -- 平均薪资\n);\nCREATE TABLE 公司对口专业 (\n  公司id INTEGER PRIMARY KEY, -- 公司id\n  专业 VARCHAR(50), -- 专业\n  对应岗位 VARCHAR(50), -- 对应岗位\n  拟招聘人数 INTEGER, -- 拟招聘人数\n  基本工资 INTEGER, -- 基本工资\n  工资幅度 INTEGER, -- 工资幅度\n);\nCREATE TABLE 公司宣讲会 (\n  公司id INTEGER PRIMARY KEY, -- 公司id\n  学校id INTEGER, -- 学校id\n  宣讲时间 DATETIME, -- 宣讲时间\n  拟招聘人数 INTEGER, -- 拟招聘人数\n  参加笔试人数 INTEGER, -- 参加笔试人数\n  参加面试人数 INTEGER, -- 参加面试人数\n  实际招聘人数 INTEGER, -- 实际招聘人数\n);\n-- 学校各专业.学校id can be joined with 学校.学校\n-- 公司对口专业.公司id can be joined with 公司.公司\n-- 公司宣讲会.公司id can be joined with 公司.公司\n-- 公司宣讲会.学校id can be joined with 学校.学校", "columns_en": {"词条id": "词条id", "名称": "名称", "行业": "行业", "校招人数": "校招人数", "所在城市": "所在城市", "毕业人数": "毕业人数", "学校id": "学校id", "专业": "专业", "专业全国排名": "专业全国排名", "平均薪资": "平均薪资", "公司id": "公司id", "对应岗位": "对应岗位", "拟招聘人数": "拟招聘人数", "基本工资": "基本工资", "工资幅度": "工资幅度", "宣讲时间": "宣讲时间", "参加笔试人数": "参加笔试人数", "参加面试人数": "参加面试人数", "实际招聘人数": "实际招聘人数"}, "table_en": {"公司": "公司", "学校": "学校", "学校各专业": "学校各专业", "公司对口专业": "公司对口专业", "公司宣讲会": "公司宣讲会"}}, "火车票预定": {"sqlite": "CREATE TABLE 火车站 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  所属城市 VARCHAR(50), -- 所属城市\n  是否有地铁站 BINARY, -- 是否有地铁站\n  距机场距离 INTEGER, -- 距机场距离\n  距汽车站距离 INTEGER, -- 距汽车站距离\n  距市中心距离 INTEGER, -- 距市中心距离\n);\nCREATE TABLE 列车 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  类型 VARCHAR(50), -- 类型\n  始发站id INTEGER, -- 始发站id\n  到达站id INTEGER, -- 到达站id\n  出发时间 DATETIME, -- 出发时间\n  到达时间 DATETIME, -- 到达时间\n);\nCREATE TABLE 列车票价 (\n  日期 DATETIME PRIMARY KEY, -- 日期\n  列车id INTEGER, -- 列车id\n  车票类型 VARCHAR(50), -- 车票类型\n  票价 INTEGER, -- 票价\n  余票 INTEGER, -- 余票\n);\n-- 列车.始发站id can be joined with 火车站.火车站\n-- 列车票价.列车id can be joined with 列车.列车\n-- 列车.到达站id can be joined with 火车站.火车站", "columns_en": {"词条id": "词条id", "名称": "名称", "所属城市": "所属城市", "是否有地铁站": "是否有地铁站", "距机场距离": "距机场距离", "距汽车站距离": "距汽车站距离", "距市中心距离": "距市中心距离", "类型": "类型", "始发站id": "始发站id", "到达站id": "到达站id", "出发时间": "出发时间", "到达时间": "到达时间", "日期": "日期", "列车id": "列车id", "车票类型": "车票类型", "票价": "票价", "余票": "余票"}, "table_en": {"火车站": "火车站", "列车": "列车", "列车票价": "列车票价"}}, "豆瓣读书": {"sqlite": "CREATE TABLE 书籍 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  作者 VARCHAR(50), -- 作者\n  作者国籍 VARCHAR(50), -- 作者国籍\n  豆瓣评分 INTEGER, -- 豆瓣评分\n  评价人数 INTEGER, -- 评价人数\n  5星占比 INTEGER, -- 5星占比\n  1星占比 INTEGER, -- 1星占比\n);\nCREATE TABLE 高分图书榜单 (\n  年份 DATETIME PRIMARY KEY, -- 年份\n  书籍id INTEGER, -- 书籍id\n  评分 INTEGER, -- 评分\n  排名 INTEGER, -- 排名\n);\nCREATE TABLE 最受关注图书榜单 (\n  年份 DATETIME PRIMARY KEY, -- 年份\n  书籍id INTEGER, -- 书籍id\n  关注数 INTEGER, -- 关注数\n  排名 INTEGER, -- 排名\n);\nCREATE TABLE 最畅销图书榜单 (\n  年份 DATETIME PRIMARY KEY, -- 年份\n  书籍id INTEGER, -- 书籍id\n  购买数 INTEGER, -- 购买数\n  排名 INTEGER, -- 排名\n);\nCREATE TABLE 购买平台 (\n  书籍id INTEGER PRIMARY KEY, -- 书籍id\n  平台 VARCHAR(50), -- 平台\n  售价 INTEGER, -- 售价\n  是否有货 BINARY, -- 是否有货\n);\n-- 最受关注图书榜单.书籍id can be joined with 书籍.书籍\n-- 购买平台.书籍id can be joined with 书籍.书籍\n-- 高分图书榜单.书籍id can be joined with 书籍.书籍\n-- 最畅销图书榜单.书籍id can be joined with 书籍.书籍", "columns_en": {"词条id": "词条id", "名称": "名称", "作者": "作者", "作者国籍": "作者国籍", "豆瓣评分": "豆瓣评分", "评价人数": "评价人数", "5星占比": "5星占比", "1星占比": "1星占比", "年份": "年份", "书籍id": "书籍id", "评分": "评分", "排名": "排名", "关注数": "关注数", "购买数": "购买数", "平台": "平台", "售价": "售价", "是否有货": "是否有货"}, "table_en": {"书籍": "书籍", "高分图书榜单": "高分图书榜单", "最受关注图书榜单": "最受关注图书榜单", "最畅销图书榜单": "最畅销图书榜单", "购买平台": "购买平台"}}, "空调": {"sqlite": "CREATE TABLE 空调品牌 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  所属公司 VARCHAR(50), -- 所属公司\n  国家 VARCHAR(50), -- 国家\n  亚洲企业排名 INTEGER, -- 亚洲企业排名\n  中国上市公司排名 INTEGER, -- 中国上市公司排名\n);\nCREATE TABLE 空调型号 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  毛重 INTEGER, -- 毛重\n  频数类型 VARCHAR(50), -- 频数类型\n  匹数 INTEGER, -- 匹数\n  类别 VARCHAR(50), -- 类别\n  用途 VARCHAR(50), -- 用途\n  制冷量 INTEGER, -- 制冷量\n  制热量 INTEGER, -- 制热量\n  定价 INTEGER, -- 定价\n  制冷剂 VARCHAR(50), -- 制冷剂\n  品牌id INTEGER, -- 品牌id\n);\nCREATE TABLE 匹数对应面积 (\n  匹数 INTEGER PRIMARY KEY, -- 匹数\n  最小面积 INTEGER, -- 最小面积\n  最大面积 INTEGER, -- 最大面积\n);\nCREATE TABLE 空调各季度售卖 (\n  型号id INTEGER PRIMARY KEY, -- 型号id\n  季度 VARCHAR(50), -- 季度\n  售价 INTEGER, -- 售价\n  最高价格 INTEGER, -- 最高价格\n  最低价格 INTEGER, -- 最低价格\n  售卖量 INTEGER, -- 售卖量\n);\nCREATE TABLE 空调各城市售卖 (\n  城市 VARCHAR(50) PRIMARY KEY, -- 城市\n  空调售卖量 INTEGER, -- 空调售卖量\n  空调日平均用时 INTEGER, -- 空调日平均用时\n);\n-- 空调各季度售卖.型号id can be joined with 空调型号.空调型号\n-- 空调型号.品牌id can be joined with 空调品牌.空调品牌", "columns_en": {"词条id": "词条id", "名称": "名称", "所属公司": "所属公司", "国家": "国家", "亚洲企业排名": "亚洲企业排名", "中国上市公司排名": "中国上市公司排名", "毛重": "毛重", "频数类型": "频数类型", "匹数": "匹数", "类别": "类别", "用途": "用途", "制冷量": "制冷量", "制热量": "制热量", "定价": "定价", "制冷剂": "制冷剂", "品牌id": "品牌id", "最小面积": "最小面积", "最大面积": "最大面积", "型号id": "型号id", "季度": "季度", "售价": "售价", "最高价格": "最高价格", "最低价格": "最低价格", "售卖量": "售卖量", "城市": "城市", "空调售卖量": "空调售卖量", "空调日平均用时": "空调日平均用时"}, "table_en": {"空调品牌": "空调品牌", "空调型号": "空调型号", "匹数对应面积": "匹数对应面积", "空调各季度售卖": "空调各季度售卖", "空调各城市售卖": "空调各城市售卖"}}, "机票预定": {"sqlite": "CREATE TABLE 航空公司 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  国内通航城市数量 INTEGER, -- 国内通航城市数量\n  国际通航城市数量 INTEGER, -- 国际通航城市数量\n  机队规模 INTEGER, -- 机队规模\n  运送旅客人数 INTEGER, -- 运送旅客人数\n  飞机餐用户满意度 INTEGER, -- 飞机餐用户满意度\n);\nCREATE TABLE 机场 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  所属地区 VARCHAR(50), -- 所属地区\n  机位数量 INTEGER, -- 机位数量\n  跑道长度 INTEGER, -- 跑道长度\n  跑道数量 INTEGER, -- 跑道数量\n  国内航线数量 INTEGER, -- 国内航线数量\n  国际航线数量 INTEGER, -- 国际航线数量\n  通航城市 INTEGER, -- 通航城市\n  旅客吞量 INTEGER, -- 旅客吞量\n  航站楼数量 INTEGER, -- 航站楼数量\n);\nCREATE TABLE 航空公司主运营基地 (\n  航空公司id INTEGER PRIMARY KEY, -- 航空公司id\n  机场id INTEGER, -- 机场id\n);\nCREATE TABLE 航空公司机队 (\n  航空公司id INTEGER PRIMARY KEY, -- 航空公司id\n  飞机型号 VARCHAR(50), -- 飞机型号\n  数量 INTEGER, -- 数量\n);\nCREATE TABLE 航班信息 (\n  日期 DATETIME PRIMARY KEY, -- 日期\n  出发机场id INTEGER, -- 出发机场id\n  到达机场id INTEGER, -- 到达机场id\n  起飞时间 DATETIME, -- 起飞时间\n  航班号 VARCHAR(50), -- 航班号\n  航空公司id INTEGER, -- 航空公司id\n  机龄 INTEGER, -- 机龄\n  经济舱价格 INTEGER, -- 经济舱价格\n  头等舱价格 INTEGER, -- 头等舱价格\n  经济舱余票 INTEGER, -- 经济舱余票\n  头等舱余票 INTEGER, -- 头等舱余票\n  历经时间 INTEGER, -- 历经时间\n);\n-- 航空公司机队.航空公司id can be joined with 航空公司.航空公司\n-- 航空公司主运营基地.机场id can be joined with 机场.机场\n-- 航空公司主运营基地.航空公司id can be joined with 航空公司.航空公司\n-- 航班信息.到达机场id can be joined with 机场.机场\n-- 航班信息.出发机场id can be joined with 机场.机场\n-- 航班信息.航空公司id can be joined with 航空公司.航空公司", "columns_en": {"词条id": "词条id", "名称": "名称", "国内通航城市数量": "国内通航城市数量", "国际通航城市数量": "国际通航城市数量", "机队规模": "机队规模", "运送旅客人数": "运送旅客人数", "飞机餐用户满意度": "飞机餐用户满意度", "所属地区": "所属地区", "机位数量": "机位数量", "跑道长度": "跑道长度", "跑道数量": "跑道数量", "国内航线数量": "国内航线数量", "国际航线数量": "国际航线数量", "通航城市": "通航城市", "旅客吞量": "旅客吞量", "航站楼数量": "航站楼数量", "航空公司id": "航空公司id", "机场id": "机场id", "飞机型号": "飞机型号", "数量": "数量", "日期": "日期", "出发机场id": "出发机场id", "到达机场id": "到达机场id", "起飞时间": "起飞时间", "航班号": "航班号", "机龄": "机龄", "经济舱价格": "经济舱价格", "头等舱价格": "头等舱价格", "经济舱余票": "经济舱余票", "头等舱余票": "头等舱余票", "历经时间": "历经时间"}, "table_en": {"航空公司": "航空公司", "机场": "机场", "航空公司主运营基地": "航空公司主运营基地", "航空公司机队": "航空公司机队", "航班信息": "航班信息"}}, "明星与经纪公司": {"sqlite": "CREATE TABLE 经纪公司 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  公司名称 VARCHAR(50), -- 公司名称\n  成立时间 DATETIME, -- 成立时间\n  注册资本 INTEGER, -- 注册资本\n);\nCREATE TABLE 明星 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  姓名 VARCHAR(50), -- 姓名\n  所属经纪公司id INTEGER, -- 所属经纪公司id\n  加入时间 DATETIME, -- 加入时间\n  解约时间 DATETIME, -- 解约时间\n);\nCREATE TABLE 经纪人 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  姓名 VARCHAR(50), -- 姓名\n  出生地 VARCHAR(50), -- 出生地\n  出生日期 DATETIME, -- 出生日期\n);\nCREATE TABLE 明星与经纪人 (\n  明星id INTEGER PRIMARY KEY, -- 明星id\n  经纪人id INTEGER, -- 经纪人id\n  合作年数 INTEGER, -- 合作年数\n);\n-- 明星与经纪人.明星id can be joined with 明星.明星\n-- 明星.所属经纪公司id can be joined with 经纪公司.经纪公司\n-- 明星与经纪人.经纪人id can be joined with 经纪人.经纪人", "columns_en": {"词条id": "词条id", "公司名称": "公司名称", "成立时间": "成立时间", "注册资本": "注册资本", "姓名": "姓名", "所属经纪公司id": "所属经纪公司id", "加入时间": "加入时间", "解约时间": "解约时间", "出生地": "出生地", "出生日期": "出生日期", "明星id": "明星id", "经纪人id": "经纪人id", "合作年数": "合作年数"}, "table_en": {"经纪公司": "经纪公司", "明星": "明星", "经纪人": "经纪人", "明星与经纪人": "明星与经纪人"}}, "中国体育场馆": {"sqlite": "CREATE TABLE 体育场 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  面积 INTEGER, -- 面积\n  容纳人数 INTEGER, -- 容纳人数\n  所在城市 VARCHAR(50), -- 所在城市\n);\nCREATE TABLE 中国体育赛事 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  热度 INTEGER, -- 热度\n  商业价值 INTEGER, -- 商业价值\n  影响力 INTEGER, -- 影响力\n);\nCREATE TABLE 2018年具体赛事 (\n  赛事名称 VARCHAR(50) PRIMARY KEY, -- 赛事名称\n  赛事类型id INTEGER, -- 赛事类型id\n  场馆id INTEGER, -- 场馆id\n  时间 DATETIME, -- 时间\n  观众人数 INTEGER, -- 观众人数\n);\nCREATE TABLE 2018年演唱会 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  歌手 VARCHAR(50), -- 歌手\n  场馆id INTEGER, -- 场馆id\n  时间 DATETIME, -- 时间\n  最低票价 INTEGER, -- 最低票价\n);\n-- 2018年演唱会.场馆id can be joined with 体育场.体育场\n-- 2018年具体赛事.场馆id can be joined with 体育场.体育场\n-- 2018年具体赛事.赛事类型id can be joined with 中国体育赛事.中国体育赛事", "columns_en": {"词条id": "词条id", "名称": "名称", "面积": "面积", "容纳人数": "容纳人数", "所在城市": "所在城市", "热度": "热度", "商业价值": "商业价值", "影响力": "影响力", "赛事名称": "赛事名称", "赛事类型id": "赛事类型id", "场馆id": "场馆id", "时间": "时间", "观众人数": "观众人数", "歌手": "歌手", "最低票价": "最低票价"}, "table_en": {"体育场": "体育场", "中国体育赛事": "中国体育赛事", "2018年具体赛事": "2018年具体赛事", "2018年演唱会": "2018年演唱会"}}, "影视企业": {"sqlite": "CREATE TABLE 公司 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  成立时间 DATETIME, -- 成立时间\n  负责人 VARCHAR(50), -- 负责人\n  排名 INTEGER, -- 排名\n);\nCREATE TABLE 电影 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  影片名 VARCHAR(50), -- 影片名\n  上映时间 DATETIME, -- 上映时间\n  票房 INTEGER, -- 票房\n);\nCREATE TABLE 影视公司拍摄的电影 (\n  公司id INTEGER PRIMARY KEY, -- 公司id\n  电影id INTEGER, -- 电影id\n  投资比例 INTEGER, -- 投资比例\n);\n-- 影视公司拍摄的电影.电影id can be joined with 电影.电影\n-- 影视公司拍摄的电影.公司id can be joined with 公司.公司", "columns_en": {"词条id": "词条id", "名称": "名称", "成立时间": "成立时间", "负责人": "负责人", "排名": "排名", "影片名": "影片名", "上映时间": "上映时间", "票房": "票房", "公司id": "公司id", "电影id": "电影id", "投资比例": "投资比例"}, "table_en": {"公司": "公司", "电影": "电影", "影视公司拍摄的电影": "影视公司拍摄的电影"}}, "中国基础设施": {"sqlite": "CREATE TABLE 中国城市供水生产能力 (\n  年份 DATETIME PRIMARY KEY, -- 年份\n  供水生成能力 INTEGER, -- 供水生成能力\n  供水管道长度 INTEGER, -- 供水管道长度\n  供水总量 INTEGER, -- 供水总量\n  供水量增长率 INTEGER, -- 供水量增长率\n  生活用水供水量 INTEGER, -- 生活用水供水量\n  生产用水供水量 INTEGER, -- 生产用水供水量\n  用水人口 INTEGER, -- 用水人口\n  用水人口同比增长 INTEGER, -- 用水人口同比增长\n  人均日生活用水量 INTEGER, -- 人均日生活用水量\n  人均用水量同比增长 INTEGER, -- 人均用水量同比增长\n);\nCREATE TABLE 中国发电量及电力消费量 (\n  年份 DATETIME PRIMARY KEY, -- 年份\n  发电量 INTEGER, -- 发电量\n  电力消费 INTEGER, -- 电力消费\n);\nCREATE TABLE 中国电力结构及发电量 (\n  年份 DATETIME PRIMARY KEY, -- 年份\n  发电类型 VARCHAR(50), -- 发电类型\n  发电量 INTEGER, -- 发电量\n);\nCREATE TABLE 中国电力装机量 (\n  年份 DATETIME PRIMARY KEY, -- 年份\n  发电类型 VARCHAR(50), -- 发电类型\n  新增装机量(MW) INTEGER, -- 新增装机量(MW)\n  累计装机量(MW) INTEGER, -- 累计装机量(MW)\n);\nCREATE TABLE 各省发电量及电力消费量 (\n  省份 VARCHAR(50) PRIMARY KEY, -- 省份\n  发电量(亿千瓦小时) INTEGER, -- 发电量(亿千瓦小时)\n  电力消费(亿千瓦小时) INTEGER, -- 电力消费(亿千瓦小时)\n);\nCREATE TABLE 各省生物质发电量 (\n  省份 VARCHAR(50) PRIMARY KEY, -- 省份\n  累计并网装机容量(万千瓦) INTEGER, -- 累计并网装机容量(万千瓦)\n  农林生物质发电量(亿千瓦小时) INTEGER, -- 农林生物质发电量(亿千瓦小时)\n  生活垃圾焚烧发电量(亿千瓦小时) INTEGER, -- 生活垃圾焚烧发电量(亿千瓦小时)\n  沼气发电量(亿千瓦小时) INTEGER, -- 沼气发电量(亿千瓦小时)\n);\n", "columns_en": {"年份": "年份", "供水生成能力": "供水生成能力", "供水管道长度": "供水管道长度", "供水总量": "供水总量", "供水量增长率": "供水量增长率", "生活用水供水量": "生活用水供水量", "生产用水供水量": "生产用水供水量", "用水人口": "用水人口", "用水人口同比增长": "用水人口同比增长", "人均日生活用水量": "人均日生活用水量", "人均用水量同比增长": "人均用水量同比增长", "发电量": "发电量", "电力消费": "电力消费", "发电类型": "发电类型", "新增装机量(MW)": "新增装机量(MW)", "累计装机量(MW)": "累计装机量(MW)", "省份": "省份", "发电量(亿千瓦小时)": "发电量(亿千瓦小时)", "电力消费(亿千瓦小时)": "电力消费(亿千瓦小时)", "累计并网装机容量(万千瓦)": "累计并网装机容量(万千瓦)", "农林生物质发电量(亿千瓦小时)": "农林生物质发电量(亿千瓦小时)", "生活垃圾焚烧发电量(亿千瓦小时)": "生活垃圾焚烧发电量(亿千瓦小时)", "沼气发电量(亿千瓦小时)": "沼气发电量(亿千瓦小时)"}, "table_en": {"中国城市供水生产能力": "中国城市供水生产能力", "中国发电量及电力消费量": "中国发电量及电力消费量", "中国电力结构及发电量": "中国电力结构及发电量", "中国电力装机量": "中国电力装机量", "各省发电量及电力消费量": "各省发电量及电力消费量", "各省生物质发电量": "各省生物质发电量"}}, "卫视播放节目": {"sqlite": "CREATE TABLE 卫视电视剧 (\n  卫视 VARCHAR(50) PRIMARY KEY, -- 卫视\n  电视剧名 VARCHAR(50), -- 电视剧名\n  日期 DATETIME, -- 日期\n  播放时间 DATETIME, -- 播放时间\n  集数 INTEGER, -- 集数\n);\nCREATE TABLE 卫视综艺节目 (\n  卫视 VARCHAR(50) PRIMARY KEY, -- 卫视\n  节目名 VARCHAR(50), -- 节目名\n  日期 DATETIME, -- 日期\n  播放时间 DATETIME, -- 播放时间\n  期数 INTEGER, -- 期数\n);\nCREATE TABLE 央视栏目 (\n  频道 VARCHAR(50) PRIMARY KEY, -- 频道\n  栏目名 VARCHAR(50), -- 栏目名\n  类型 VARCHAR(50), -- 类型\n  日期 DATETIME, -- 日期\n  播放时间 DATETIME, -- 播放时间\n);\nCREATE TABLE 付费栏目 (\n  频道 VARCHAR(50) PRIMARY KEY, -- 频道\n  栏目名 VARCHAR(50), -- 栏目名\n  类型 VARCHAR(50), -- 类型\n  日期 DATETIME, -- 日期\n  播放时间 DATETIME, -- 播放时间\n  费用 INTEGER, -- 费用\n);\n", "columns_en": {"卫视": "卫视", "电视剧名": "电视剧名", "日期": "日期", "播放时间": "播放时间", "集数": "集数", "节目名": "节目名", "期数": "期数", "频道": "频道", "栏目名": "栏目名", "类型": "类型", "费用": "费用"}, "table_en": {"卫视电视剧": "卫视电视剧", "卫视综艺节目": "卫视综艺节目", "央视栏目": "央视栏目", "付费栏目": "付费栏目"}}, "北京驾校": {"sqlite": "CREATE TABLE 驾校 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  驾校名称 VARCHAR(50), -- 驾校名称\n  驾校地址 VARCHAR(50), -- 驾校地址\n  报名电话 INTEGER, -- 报名电话\n  车辆数量 INTEGER, -- 车辆数量\n  教练数量 INTEGER, -- 教练数量\n  班车点数量 INTEGER, -- 班车点数量\n  学员数量 INTEGER, -- 学员数量\n);\nCREATE TABLE 驾校班型 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  班型名称 VARCHAR(50), -- 班型名称\n  驾照类型 VARCHAR(50), -- 驾照类型\n  拿证时间 INTEGER, -- 拿证时间\n);\nCREATE TABLE 驾校费用 (\n  班型id INTEGER PRIMARY KEY, -- 班型id\n  学校id INTEGER, -- 学校id\n  费用 INTEGER, -- 费用\n);\n-- 驾校费用.学校id can be joined with 驾校.驾校\n-- 驾校费用.班型id can be joined with 驾校班型.驾校班型", "columns_en": {"词条id": "词条id", "驾校名称": "驾校名称", "驾校地址": "驾校地址", "报名电话": "报名电话", "车辆数量": "车辆数量", "教练数量": "教练数量", "班车点数量": "班车点数量", "学员数量": "学员数量", "班型名称": "班型名称", "驾照类型": "驾照类型", "拿证时间": "拿证时间", "班型id": "班型id", "学校id": "学校id", "费用": "费用"}, "table_en": {"驾校": "驾校", "驾校班型": "驾校班型", "驾校费用": "驾校费用"}}, "城市消费": {"sqlite": "CREATE TABLE 40城消费力排名 (\n  城市 VARCHAR(50) PRIMARY KEY, -- 城市\n  所在省份 VARCHAR(50), -- 所在省份\n  社消总额(亿) INTEGER, -- 社消总额(亿)\n  总额排名 INTEGER, -- 总额排名\n  增速 INTEGER, -- 增速\n  增速排名 INTEGER, -- 增速排名\n  人均社消(万) INTEGER, -- 人均社消(万)\n  总GDP(亿) INTEGER, -- 总GDP(亿)\n  人均GDP(万) INTEGER, -- 人均GDP(万)\n  常住人口(万) INTEGER, -- 常住人口(万)\n  参考房价 INTEGER, -- 参考房价\n);\nCREATE TABLE 各城市消费结构 (\n  城市 VARCHAR(50) PRIMARY KEY, -- 城市\n  人均可支配收入 INTEGER, -- 人均可支配收入\n  餐饮消费占比 INTEGER, -- 餐饮消费占比\n  奢侈品消费占比 INTEGER, -- 奢侈品消费占比\n  旅游占比 INTEGER, -- 旅游占比\n  人均网购消费额 INTEGER, -- 人均网购消费额\n  电子产品消费占比 INTEGER, -- 电子产品消费占比\n);\nCREATE TABLE 生态文明消费 (\n  环保消费品 VARCHAR(50) PRIMARY KEY, -- 环保消费品\n  增长率 INTEGER, -- 增长率\n);\nCREATE TABLE 品牌消费 (\n  品牌 VARCHAR(50) PRIMARY KEY, -- 品牌\n  类型 VARCHAR(50), -- 类型\n  销量占比 INTEGER, -- 销量占比\n  销量排名 INTEGER, -- 销量排名\n);\nCREATE TABLE 商品种类消费增速 (\n  种类 VARCHAR(50) PRIMARY KEY, -- 种类\n  2013年增速 INTEGER, -- 2013年增速\n  2015年增速 INTEGER, -- 2015年增速\n  2017年增速 INTEGER, -- 2017年增速\n);\n", "columns_en": {"城市": "城市", "所在省份": "所在省份", "社消总额(亿)": "社消总额(亿)", "总额排名": "总额排名", "增速": "增速", "增速排名": "增速排名", "人均社消(万)": "人均社消(万)", "总GDP(亿)": "总GDP(亿)", "人均GDP(万)": "人均GDP(万)", "常住人口(万)": "常住人口(万)", "参考房价": "参考房价", "人均可支配收入": "人均可支配收入", "餐饮消费占比": "餐饮消费占比", "奢侈品消费占比": "奢侈品消费占比", "旅游占比": "旅游占比", "人均网购消费额": "人均网购消费额", "电子产品消费占比": "电子产品消费占比", "环保消费品": "环保消费品", "增长率": "增长率", "品牌": "品牌", "类型": "类型", "销量占比": "销量占比", "销量排名": "销量排名", "种类": "种类", "2013年增速": "2013年增速", "2015年增速": "2015年增速", "2017年增速": "2017年增速"}, "table_en": {"40城消费力排名": "40城消费力排名", "各城市消费结构": "各城市消费结构", "生态文明消费": "生态文明消费", "品牌消费": "品牌消费", "商品种类消费增速": "商品种类消费增速"}}, "公司收购": {"sqlite": "CREATE TABLE 公司 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  总部地点 VARCHAR(50), -- 总部地点\n  成立时间 DATETIME, -- 成立时间\n  员工数量 INTEGER, -- 员工数量\n  市值 INTEGER, -- 市值\n);\nCREATE TABLE 收购的公司 (\n  公司id INTEGER PRIMARY KEY, -- 公司id\n  被收购公司id INTEGER, -- 被收购公司id\n  时间 DATETIME, -- 时间\n  收购方式 VARCHAR(50), -- 收购方式\n  收购资金 INTEGER, -- 收购资金\n);\nCREATE TABLE 投资的公司 (\n  公司id INTEGER PRIMARY KEY, -- 公司id\n  被投资公司id INTEGER, -- 被投资公司id\n  时间 DATETIME, -- 时间\n  投资资金 INTEGER, -- 投资资金\n  股权占比 INTEGER, -- 股权占比\n);\nCREATE TABLE 并购的公司 (\n  主公司id INTEGER PRIMARY KEY, -- 主公司id\n  并购公司id INTEGER, -- 并购公司id\n  主公司股权占比 INTEGER, -- 主公司股权占比\n  并购公司股权占比 INTEGER, -- 并购公司股权占比\n);\n-- 收购的公司.被收购公司id can be joined with 公司.公司\n-- 并购的公司.并购公司id can be joined with 公司.公司\n-- 收购的公司.公司id can be joined with 公司.公司\n-- 投资的公司.公司id can be joined with 公司.公司\n-- 并购的公司.主公司id can be joined with 公司.公司\n-- 投资的公司.被投资公司id can be joined with 公司.公司", "columns_en": {"词条id": "词条id", "名称": "名称", "总部地点": "总部地点", "成立时间": "成立时间", "员工数量": "员工数量", "市值": "市值", "公司id": "公司id", "被收购公司id": "被收购公司id", "时间": "时间", "收购方式": "收购方式", "收购资金": "收购资金", "被投资公司id": "被投资公司id", "投资资金": "投资资金", "股权占比": "股权占比", "主公司id": "主公司id", "并购公司id": "并购公司id", "主公司股权占比": "主公司股权占比", "并购公司股权占比": "并购公司股权占比"}, "table_en": {"公司": "公司", "收购的公司": "收购的公司", "投资的公司": "投资的公司", "并购的公司": "并购的公司"}}, "酒店预订": {"sqlite": "CREATE TABLE 酒店 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  地址 VARCHAR(50), -- 地址\n  距火车站距离 INTEGER, -- 距火车站距离\n  距机场距离 INTEGER, -- 距机场距离\n  距汽车站距离 INTEGER, -- 距汽车站距离\n  距市中心距离 INTEGER, -- 距市中心距离\n  周围景点数 INTEGER, -- 周围景点数\n  周围饭店数量 INTEGER, -- 周围饭店数量\n);\nCREATE TABLE 酒店交通 (\n  酒店id INTEGER PRIMARY KEY, -- 酒店id\n  地铁线路 VARCHAR(50), -- 地铁线路\n  地铁站名称 VARCHAR(50), -- 地铁站名称\n  步行距离 INTEGER, -- 步行距离\n);\nCREATE TABLE 酒店客房 (\n  酒店id INTEGER PRIMARY KEY, -- 酒店id\n  房型 VARCHAR(50), -- 房型\n  早餐 BINARY, -- 早餐\n  价格 INTEGER, -- 价格\n  剩余房间数 INTEGER, -- 剩余房间数\n);\n-- 酒店客房.酒店id can be joined with 酒店.酒店\n-- 酒店交通.酒店id can be joined with 酒店.酒店", "columns_en": {"词条id": "词条id", "名称": "名称", "地址": "地址", "距火车站距离": "距火车站距离", "距机场距离": "距机场距离", "距汽车站距离": "距汽车站距离", "距市中心距离": "距市中心距离", "周围景点数": "周围景点数", "周围饭店数量": "周围饭店数量", "酒店id": "酒店id", "地铁线路": "地铁线路", "地铁站名称": "地铁站名称", "步行距离": "步行距离", "房型": "房型", "早餐": "早餐", "价格": "价格", "剩余房间数": "剩余房间数"}, "table_en": {"酒店": "酒店", "酒店交通": "酒店交通", "酒店客房": "酒店客房"}}, "NBA篮球": {"sqlite": "CREATE TABLE 篮球运动员 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  中文名 VARCHAR(50), -- 中文名\n  国籍 VARCHAR(50), -- 国籍\n  出生地 VARCHAR(50), -- 出生地\n  出生日期 DATETIME, -- 出生日期\n  身高 INTEGER, -- 身高\n  体重 INTEGER, -- 体重\n  毕业院校 VARCHAR(50), -- 毕业院校\n  场上位置 VARCHAR(50), -- 场上位置\n);\nCREATE TABLE 比赛场馆 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  容纳人数 INTEGER, -- 容纳人数\n);\nCREATE TABLE 篮球俱乐部 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  中文队名 VARCHAR(50), -- 中文队名\n  所属地区 VARCHAR(50), -- 所属地区\n  成立时间 DATETIME, -- 成立时间\n  主场馆id INTEGER, -- 主场馆id\n  赛区 VARCHAR(50), -- 赛区\n);\nCREATE TABLE 俱乐部现役球员 (\n  球员id INTEGER PRIMARY KEY, -- 球员id\n  俱乐部id INTEGER, -- 俱乐部id\n  场上位置 VARCHAR(50), -- 场上位置\n  球衣号码 INTEGER, -- 球衣号码\n  是否主力 BINARY, -- 是否主力\n);\nCREATE TABLE 运动员转会 (\n  运动员id INTEGER PRIMARY KEY, -- 运动员id\n  俱乐部id INTEGER, -- 俱乐部id\n  加入日期 DATETIME, -- 加入日期\n  服役时间 INTEGER, -- 服役时间\n  号码 INTEGER, -- 号码\n  薪资 INTEGER, -- 薪资\n);\nCREATE TABLE 教练 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  中文名 VARCHAR(50), -- 中文名\n  国籍 VARCHAR(50), -- 国籍\n  毕业院校 VARCHAR(50), -- 毕业院校\n  执教时长 INTEGER, -- 执教时长\n  年薪 INTEGER, -- 年薪\n);\nCREATE TABLE 俱乐部教练 (\n  教练id INTEGER PRIMARY KEY, -- 教练id\n  俱乐部id INTEGER, -- 俱乐部id\n  加入日期 DATETIME, -- 加入日期\n  身份 VARCHAR(50), -- 身份\n);\n-- 俱乐部教练.教练id can be joined with 教练.教练\n-- 篮球俱乐部.主场馆id can be joined with 比赛场馆.比赛场馆\n-- 运动员转会.俱乐部id can be joined with 篮球俱乐部.篮球俱乐部\n-- 俱乐部现役球员.球员id can be joined with 篮球运动员.篮球运动员\n-- 俱乐部教练.俱乐部id can be joined with 篮球俱乐部.篮球俱乐部\n-- 运动员转会.运动员id can be joined with 篮球运动员.篮球运动员\n-- 俱乐部现役球员.俱乐部id can be joined with 篮球俱乐部.篮球俱乐部", "columns_en": {"词条id": "词条id", "中文名": "中文名", "国籍": "国籍", "出生地": "出生地", "出生日期": "出生日期", "身高": "身高", "体重": "体重", "毕业院校": "毕业院校", "场上位置": "场上位置", "名称": "名称", "容纳人数": "容纳人数", "中文队名": "中文队名", "所属地区": "所属地区", "成立时间": "成立时间", "主场馆id": "主场馆id", "赛区": "赛区", "球员id": "球员id", "俱乐部id": "俱乐部id", "球衣号码": "球衣号码", "是否主力": "是否主力", "运动员id": "运动员id", "加入日期": "加入日期", "服役时间": "服役时间", "号码": "号码", "薪资": "薪资", "执教时长": "执教时长", "年薪": "年薪", "教练id": "教练id", "身份": "身份"}, "table_en": {"篮球运动员": "篮球运动员", "比赛场馆": "比赛场馆", "篮球俱乐部": "篮球俱乐部", "俱乐部现役球员": "俱乐部现役球员", "运动员转会": "运动员转会", "教练": "教练", "俱乐部教练": "俱乐部教练"}}, "中国姓氏": {"sqlite": "CREATE TABLE 汉字 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  汉字 VARCHAR(50), -- 汉字\n  部首 VARCHAR(50), -- 部首\n  笔画 INTEGER, -- 笔画\n);\nCREATE TABLE 姓氏 (\n  姓氏id INTEGER PRIMARY KEY, -- 姓氏id\n  源自姓氏id INTEGER, -- 源自姓氏id\n  人口 INTEGER, -- 人口\n  占比 INTEGER, -- 占比\n);\nCREATE TABLE 姓氏分布区域 (\n  姓氏id INTEGER PRIMARY KEY, -- 姓氏id\n  区域 VARCHAR(50), -- 区域\n  人口占比 INTEGER, -- 人口占比\n);\n-- 姓氏.姓氏id can be joined with 汉字.汉字\n-- 姓氏.源自姓氏id can be joined with 汉字.汉字\n-- 姓氏分布区域.姓氏id can be joined with 汉字.汉字", "columns_en": {"词条id": "词条id", "汉字": "汉字", "部首": "部首", "笔画": "笔画", "姓氏id": "姓氏id", "源自姓氏id": "源自姓氏id", "人口": "人口", "占比": "占比", "区域": "区域", "人口占比": "人口占比"}, "table_en": {"汉字": "汉字", "姓氏": "姓氏", "姓氏分布区域": "姓氏分布区域"}}, "澳网公开赛": {"sqlite": "CREATE TABLE 网球运动员 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  姓名 VARCHAR(50), -- 姓名\n  性别 VARCHAR(50), -- 性别\n  国籍 VARCHAR(50), -- 国籍\n  专业特点 VARCHAR(50), -- 专业特点\n);\nCREATE TABLE 网球赛事单打冠军排名 (\n  运动员id INTEGER PRIMARY KEY, -- 运动员id\n  赛事 VARCHAR(50), -- 赛事\n  夺冠次数 INTEGER, -- 夺冠次数\n  夺冠年份 VARCHAR(50), -- 夺冠年份\n);\nCREATE TABLE 网球赛事历届单打冠军 (\n  年份 DATETIME PRIMARY KEY, -- 年份\n  赛事 VARCHAR(50), -- 赛事\n  性别 VARCHAR(50), -- 性别\n  冠军id INTEGER, -- 冠军id\n  亚军id INTEGER, -- 亚军id\n  决赛比分 INTEGER, -- 决赛比分\n);\nCREATE TABLE 网球比赛记录 (\n  记录项目 VARCHAR(50) PRIMARY KEY, -- 记录项目\n  保持者id INTEGER, -- 保持者id\n  说明 VARCHAR(50), -- 说明\n);\n-- 网球赛事历届单打冠军.亚军id can be joined with 网球运动员.网球运动员\n-- 网球比赛记录.保持者id can be joined with 网球运动员.网球运动员\n-- 网球赛事单打冠军排名.运动员id can be joined with 网球运动员.网球运动员\n-- 网球赛事历届单打冠军.冠军id can be joined with 网球运动员.网球运动员", "columns_en": {"词条id": "词条id", "姓名": "姓名", "性别": "性别", "国籍": "国籍", "专业特点": "专业特点", "运动员id": "运动员id", "赛事": "赛事", "夺冠次数": "夺冠次数", "夺冠年份": "夺冠年份", "年份": "年份", "冠军id": "冠军id", "亚军id": "亚军id", "决赛比分": "决赛比分", "记录项目": "记录项目", "保持者id": "保持者id", "说明": "说明"}, "table_en": {"网球运动员": "网球运动员", "网球赛事单打冠军排名": "网球赛事单打冠军排名", "网球赛事历届单打冠军": "网球赛事历届单打冠军", "网球比赛记录": "网球比赛记录"}}, "足球奖项": {"sqlite": "CREATE TABLE 足球运动员 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  中文名 VARCHAR(50), -- 中文名\n  国籍 VARCHAR(50), -- 国籍\n  年龄 INTEGER, -- 年龄\n  俱乐部 VARCHAR(50), -- 俱乐部\n);\nCREATE TABLE 世界杯金球奖 (\n  年份 DATETIME PRIMARY KEY, -- 年份\n  世界杯名称 VARCHAR(50), -- 世界杯名称\n  金球奖运动员id INTEGER, -- 金球奖运动员id\n  银球奖运动员id INTEGER, -- 银球奖运动员id\n  铜球奖运动员id INTEGER, -- 铜球奖运动员id\n);\nCREATE TABLE 欧洲杯金球奖 (\n  赛季 INTEGER PRIMARY KEY, -- 赛季\n  运动员id INTEGER, -- 运动员id\n  国籍 VARCHAR(50), -- 国籍\n  俱乐部 VARCHAR(50), -- 俱乐部\n  进球数 INTEGER, -- 进球数\n);\nCREATE TABLE FIFA金球奖 (\n  年度 DATETIME PRIMARY KEY, -- 年度\n  运动员id INTEGER, -- 运动员id\n  获奖时国籍 VARCHAR(50), -- 获奖时国籍\n  获奖时俱乐部 VARCHAR(50), -- 获奖时俱乐部\n);\n-- 世界杯金球奖.金球奖运动员id can be joined with 足球运动员.足球运动员\n-- FIFA金球奖.运动员id can be joined with 足球运动员.足球运动员\n-- 欧洲杯金球奖.运动员id can be joined with 足球运动员.足球运动员\n-- 世界杯金球奖.银球奖运动员id can be joined with 足球运动员.足球运动员\n-- 世界杯金球奖.铜球奖运动员id can be joined with 足球运动员.足球运动员", "columns_en": {"词条id": "词条id", "中文名": "中文名", "国籍": "国籍", "年龄": "年龄", "俱乐部": "俱乐部", "年份": "年份", "世界杯名称": "世界杯名称", "金球奖运动员id": "金球奖运动员id", "银球奖运动员id": "银球奖运动员id", "铜球奖运动员id": "铜球奖运动员id", "赛季": "赛季", "运动员id": "运动员id", "进球数": "进球数", "年度": "年度", "获奖时国籍": "获奖时国籍", "获奖时俱乐部": "获奖时俱乐部"}, "table_en": {"足球运动员": "足球运动员", "世界杯金球奖": "世界杯金球奖", "欧洲杯金球奖": "欧洲杯金球奖", "FIFA金球奖": "FIFA金球奖"}}, "视频软件": {"sqlite": "CREATE TABLE 视频平台 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  平台名称 VARCHAR(50), -- 平台名称\n  有无插件 BINARY, -- 有无插件\n  客户端大小 INTEGER, -- 客户端大小\n  会费 INTEGER, -- 会费\n  好评率 INTEGER, -- 好评率\n);\nCREATE TABLE 各视频平台自制剧 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  平台id INTEGER, -- 平台id\n  播出年份 DATETIME, -- 播出年份\n  类型 VARCHAR(50), -- 类型\n  观看量 INTEGER, -- 观看量\n  评分 INTEGER, -- 评分\n);\nCREATE TABLE 体育赛事 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  所属项目 VARCHAR(50), -- 所属项目\n);\nCREATE TABLE 赛事转播 (\n  赛事id INTEGER PRIMARY KEY, -- 赛事id\n  平台id INTEGER, -- 平台id\n  转播费 INTEGER, -- 转播费\n);\n-- 赛事转播.赛事id can be joined with 体育赛事.体育赛事\n-- 各视频平台自制剧.平台id can be joined with 视频平台.视频平台\n-- 赛事转播.平台id can be joined with 视频平台.视频平台", "columns_en": {"词条id": "词条id", "平台名称": "平台名称", "有无插件": "有无插件", "客户端大小": "客户端大小", "会费": "会费", "好评率": "好评率", "名称": "名称", "平台id": "平台id", "播出年份": "播出年份", "类型": "类型", "观看量": "观看量", "评分": "评分", "所属项目": "所属项目", "赛事id": "赛事id", "转播费": "转播费"}, "table_en": {"视频平台": "视频平台", "各视频平台自制剧": "各视频平台自制剧", "体育赛事": "体育赛事", "赛事转播": "赛事转播"}}, "网红食品": {"sqlite": "CREATE TABLE 网红食品 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  品类数量 INTEGER, -- 品类数量\n  商家数量 INTEGER, -- 商家数量\n  出现年份 DATETIME, -- 出现年份\n);\nCREATE TABLE 网红食品销售 (\n  类型id INTEGER PRIMARY KEY, -- 类型id\n  年份 DATETIME, -- 年份\n  销售额 INTEGER, -- 销售额\n  购买人数 INTEGER, -- 购买人数\n);\nCREATE TABLE 网红食品购买者 (\n  类型id INTEGER PRIMARY KEY, -- 类型id\n  年龄段 VARCHAR(50), -- 年龄段\n  人数占比 INTEGER, -- 人数占比\n);\nCREATE TABLE 网红食品分布城市 (\n  类型id INTEGER PRIMARY KEY, -- 类型id\n  省份 VARCHAR(50), -- 省份\n  销售量占比 INTEGER, -- 销售量占比\n  商家占比 INTEGER, -- 商家占比\n  安全事件关注度 INTEGER, -- 安全事件关注度\n);\n-- 网红食品销售.类型id can be joined with 网红食品.网红食品\n-- 网红食品购买者.类型id can be joined with 网红食品.网红食品\n-- 网红食品分布城市.类型id can be joined with 网红食品.网红食品", "columns_en": {"词条id": "词条id", "名称": "名称", "品类数量": "品类数量", "商家数量": "商家数量", "出现年份": "出现年份", "类型id": "类型id", "年份": "年份", "销售额": "销售额", "购买人数": "购买人数", "年龄段": "年龄段", "人数占比": "人数占比", "省份": "省份", "销售量占比": "销售量占比", "商家占比": "商家占比", "安全事件关注度": "安全事件关注度"}, "table_en": {"网红食品": "网红食品", "网红食品销售": "网红食品销售", "网红食品购买者": "网红食品购买者", "网红食品分布城市": "网红食品分布城市"}}, "中国演员和电影": {"sqlite": "CREATE TABLE 演职员 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  姓名 VARCHAR(50), -- 姓名\n  身高 INTEGER, -- 身高\n  体重 INTEGER, -- 体重\n  出生地 VARCHAR(50), -- 出生地\n  出生日期 DATETIME, -- 出生日期\n  毕业院校 VARCHAR(50), -- 毕业院校\n  职业 VARCHAR(50), -- 职业\n);\nCREATE TABLE 电影 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  电影名称 VARCHAR(50), -- 电影名称\n  制片地区 VARCHAR(50), -- 制片地区\n  制片成本 INTEGER, -- 制片成本\n  片长 INTEGER, -- 片长\n  导演 INTEGER, -- 导演\n  上映时间 DATETIME, -- 上映时间\n  票房 INTEGER, -- 票房\n  类型 VARCHAR(50), -- 类型\n);\nCREATE TABLE 演员和电影 (\n  演员id INTEGER PRIMARY KEY, -- 演员id\n  电影id INTEGER, -- 电影id\n  饰演角色 VARCHAR(50), -- 饰演角色\n  片酬 INTEGER, -- 片酬\n);\nCREATE TABLE 电影平台 (\n  电影id INTEGER PRIMARY KEY, -- 电影id\n  播放平台 VARCHAR(50), -- 播放平台\n  播放量 INTEGER, -- 播放量\n  评分 INTEGER, -- 评分\n);\n-- 演员和电影.电影id can be joined with 电影.电影\n-- 演员和电影.演员id can be joined with 演职员.演职员\n-- 电影平台.电影id can be joined with 电影.电影", "columns_en": {"词条id": "词条id", "姓名": "姓名", "身高": "身高", "体重": "体重", "出生地": "出生地", "出生日期": "出生日期", "毕业院校": "毕业院校", "职业": "职业", "电影名称": "电影名称", "制片地区": "制片地区", "制片成本": "制片成本", "片长": "片长", "导演": "导演", "上映时间": "上映时间", "票房": "票房", "类型": "类型", "演员id": "演员id", "电影id": "电影id", "饰演角色": "饰演角色", "片酬": "片酬", "播放平台": "播放平台", "播放量": "播放量", "评分": "评分"}, "table_en": {"演职员": "演职员", "电影": "电影", "演员和电影": "演员和电影", "电影平台": "电影平台"}}, "豆瓣电影": {"sqlite": "CREATE TABLE 电影 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  影名 VARCHAR(50), -- 影名\n  语言 VARCHAR(50), -- 语言\n  类型 VARCHAR(50), -- 类型\n  豆瓣评分 INTEGER, -- 豆瓣评分\n  评价人数 INTEGER, -- 评价人数\n  5星占比 INTEGER, -- 5星占比\n);\nCREATE TABLE 一周口碑榜 (\n  电影id INTEGER PRIMARY KEY, -- 电影id\n  名次 INTEGER, -- 名次\n  名次变化 INTEGER, -- 名次变化\n);\nCREATE TABLE top10票房榜 (\n  电影id INTEGER PRIMARY KEY, -- 电影id\n  上映日期 DATETIME, -- 上映日期\n  总票房 INTEGER, -- 总票房\n  制作预算 INTEGER, -- 制作预算\n);\nCREATE TABLE top100电影 (\n  电影id INTEGER PRIMARY KEY, -- 电影id\n  名次 INTEGER, -- 名次\n  点赞次数 INTEGER, -- 点赞次数\n);\n-- top10票房榜.电影id can be joined with 电影.电影\n-- 一周口碑榜.电影id can be joined with 电影.电影\n-- top100电影.电影id can be joined with 电影.电影", "columns_en": {"词条id": "词条id", "影名": "影名", "语言": "语言", "类型": "类型", "豆瓣评分": "豆瓣评分", "评价人数": "评价人数", "5星占比": "5星占比", "电影id": "电影id", "名次": "名次", "名次变化": "名次变化", "上映日期": "上映日期", "总票房": "总票房", "制作预算": "制作预算", "点赞次数": "点赞次数"}, "table_en": {"电影": "电影", "一周口碑榜": "一周口碑榜", "top10票房榜": "top10票房榜", "top100电影": "top100电影"}}, "中国资源城市": {"sqlite": "CREATE TABLE 城市 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  行政区划 VARCHAR(50), -- 行政区划\n  所属省份 VARCHAR(50), -- 所属省份\n  类型 VARCHAR(50), -- 类型\n);\nCREATE TABLE 资源 (\n  名称 VARCHAR(50) PRIMARY KEY, -- 名称\n  城市id INTEGER, -- 城市id\n  资源所占面积 INTEGER, -- 资源所占面积\n  储量 INTEGER, -- 储量\n  已开采量 INTEGER, -- 已开采量\n);\n-- 资源.城市id can be joined with 城市.城市", "columns_en": {"词条id": "词条id", "名称": "名称", "行政区划": "行政区划", "所属省份": "所属省份", "类型": "类型", "城市id": "城市id", "资源所占面积": "资源所占面积", "储量": "储量", "已开采量": "已开采量"}, "table_en": {"城市": "城市", "资源": "资源"}}, "数字单位": {"sqlite": "CREATE TABLE 单位 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  类别 VARCHAR(50), -- 类别\n);\nCREATE TABLE 进制换算 (\n  单位id INTEGER PRIMARY KEY, -- 单位id\n  转换单位id INTEGER, -- 转换单位id\n  进制 INTEGER, -- 进制\n);\n-- 进制换算.转换单位id can be joined with 单位.单位\n-- 进制换算.单位id can be joined with 单位.单位", "columns_en": {"词条id": "词条id", "名称": "名称", "类别": "类别", "单位id": "单位id", "转换单位id": "转换单位id", "进制": "进制"}, "table_en": {"单位": "单位", "进制换算": "进制换算"}}, "举重比赛": {"sqlite": "CREATE TABLE 运动员 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  姓名 VARCHAR(50), -- 姓名\n  性别 VARCHAR(50), -- 性别\n  国籍 VARCHAR(50), -- 国籍\n  出生地 VARCHAR(50), -- 出生地\n  出生日期 DATETIME, -- 出生日期\n  体重 INTEGER, -- 体重\n);\nCREATE TABLE 举重世界记录 (\n  公斤级别 INTEGER PRIMARY KEY, -- 公斤级别\n  项目类型 VARCHAR(50), -- 项目类型\n  记录成绩 INTEGER, -- 记录成绩\n  运动员id INTEGER, -- 运动员id\n  破纪录时间 DATETIME, -- 破纪录时间\n);\nCREATE TABLE 举重奥运会冠军 (\n  奥运会名称 VARCHAR(50) PRIMARY KEY, -- 奥运会名称\n  公斤级别 INTEGER, -- 公斤级别\n  运动员id INTEGER, -- 运动员id\n);\n-- 举重世界记录.运动员id can be joined with 运动员.运动员\n-- 举重奥运会冠军.运动员id can be joined with 运动员.运动员", "columns_en": {"词条id": "词条id", "姓名": "姓名", "性别": "性别", "国籍": "国籍", "出生地": "出生地", "出生日期": "出生日期", "体重": "体重", "公斤级别": "公斤级别", "项目类型": "项目类型", "记录成绩": "记录成绩", "运动员id": "运动员id", "破纪录时间": "破纪录时间", "奥运会名称": "奥运会名称"}, "table_en": {"运动员": "运动员", "举重世界记录": "举重世界记录", "举重奥运会冠军": "举重奥运会冠军"}}, "当前上映电影": {"sqlite": "CREATE TABLE 电影 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  片长 INTEGER, -- 片长\n  类型 VARCHAR(50), -- 类型\n  拍摄国家 VARCHAR(50), -- 拍摄国家\n  排名 INTEGER, -- 排名\n  影评数 INTEGER, -- 影评数\n  评分 INTEGER, -- 评分\n);\nCREATE TABLE 影院 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  地址 VARCHAR(50), -- 地址\n  会员费 INTEGER, -- 会员费\n  影厅数 INTEGER, -- 影厅数\n  评分 INTEGER, -- 评分\n);\nCREATE TABLE 电影上映 (\n  电影id INTEGER PRIMARY KEY, -- 电影id\n  影院id INTEGER, -- 影院id\n  播放日期 DATETIME, -- 播放日期\n  播放时间 DATETIME, -- 播放时间\n  票价 INTEGER, -- 票价\n  会员票价 INTEGER, -- 会员票价\n  余票 INTEGER, -- 余票\n);\n-- 电影上映.电影id can be joined with 电影.电影\n-- 电影上映.影院id can be joined with 影院.影院", "columns_en": {"词条id": "词条id", "名称": "名称", "片长": "片长", "类型": "类型", "拍摄国家": "拍摄国家", "排名": "排名", "影评数": "影评数", "评分": "评分", "地址": "地址", "会员费": "会员费", "影厅数": "影厅数", "电影id": "电影id", "影院id": "影院id", "播放日期": "播放日期", "播放时间": "播放时间", "票价": "票价", "会员票价": "会员票价", "余票": "余票"}, "table_en": {"电影": "电影", "影院": "影院", "电影上映": "电影上映"}}, "公司招聘": {"sqlite": "CREATE TABLE 公司 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  所在城市 VARCHAR(50), -- 所在城市\n  是否上市 BINARY, -- 是否上市\n);\nCREATE TABLE 招聘岗位 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  岗位名称 VARCHAR(50), -- 岗位名称\n  学历要求 VARCHAR(50), -- 学历要求\n  职责 VARCHAR(50), -- 职责\n  工作年限最低要求 INTEGER, -- 工作年限最低要求\n  年龄最低限 INTEGER, -- 年龄最低限\n  年龄最大限 INTEGER, -- 年龄最大限\n);\nCREATE TABLE 公司招聘计划 (\n  公司id INTEGER PRIMARY KEY, -- 公司id\n  招聘岗位id INTEGER, -- 招聘岗位id\n  基本月薪 INTEGER, -- 基本月薪\n  发放月数 INTEGER, -- 发放月数\n  浮动幅度 INTEGER, -- 浮动幅度\n  招聘人数 INTEGER, -- 招聘人数\n);\n-- 公司招聘计划.招聘岗位id can be joined with 招聘岗位.招聘岗位\n-- 公司招聘计划.公司id can be joined with 公司.公司", "columns_en": {"词条id": "词条id", "名称": "名称", "所在城市": "所在城市", "是否上市": "是否上市", "岗位名称": "岗位名称", "学历要求": "学历要求", "职责": "职责", "工作年限最低要求": "工作年限最低要求", "年龄最低限": "年龄最低限", "年龄最大限": "年龄最大限", "公司id": "公司id", "招聘岗位id": "招聘岗位id", "基本月薪": "基本月薪", "发放月数": "发放月数", "浮动幅度": "浮动幅度", "招聘人数": "招聘人数"}, "table_en": {"公司": "公司", "招聘岗位": "招聘岗位", "公司招聘计划": "公司招聘计划"}}, "世界河流": {"sqlite": "CREATE TABLE 河流 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  全长 INTEGER, -- 全长\n  流域面积 INTEGER, -- 流域面积\n  发源地 VARCHAR(50), -- 发源地\n  所属水系 VARCHAR(50), -- 所属水系\n  所属国家 VARCHAR(50), -- 所属国家\n  所属洲 VARCHAR(50), -- 所属洲\n  流域国家数 INTEGER, -- 流域国家数\n);\nCREATE TABLE 城市 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  所属国家 VARCHAR(50), -- 所属国家\n);\nCREATE TABLE 河流流经的城市 (\n  河流id INTEGER PRIMARY KEY, -- 河流id\n  城市id INTEGER, -- 城市id\n);\nCREATE TABLE 河流支流 (\n  河流id INTEGER PRIMARY KEY, -- 河流id\n  所属河流id INTEGER, -- 所属河流id\n);\n-- 河流支流.河流id can be joined with 河流.河流\n-- 河流流经的城市.城市id can be joined with 城市.城市\n-- 河流流经的城市.河流id can be joined with 河流.河流\n-- 河流支流.所属河流id can be joined with 河流.河流", "columns_en": {"词条id": "词条id", "名称": "名称", "全长": "全长", "流域面积": "流域面积", "发源地": "发源地", "所属水系": "所属水系", "所属国家": "所属国家", "所属洲": "所属洲", "流域国家数": "流域国家数", "河流id": "河流id", "城市id": "城市id", "所属河流id": "所属河流id"}, "table_en": {"河流": "河流", "城市": "城市", "河流流经的城市": "河流流经的城市", "河流支流": "河流支流"}}, "音乐金曲奖": {"sqlite": "CREATE TABLE 各届金曲奖 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  年份 DATETIME, -- 年份\n  奖项数量 INTEGER, -- 奖项数量\n  主持人 VARCHAR(50), -- 主持人\n  参赛作品数量 INTEGER, -- 参赛作品数量\n  入围作品数量 INTEGER, -- 入围作品数量\n);\nCREATE TABLE 歌手 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  姓名 VARCHAR(50), -- 姓名\n  性别 VARCHAR(50), -- 性别\n  出生地 VARCHAR(50), -- 出生地\n  专辑数量 INTEGER, -- 专辑数量\n  歌曲数量 INTEGER, -- 歌曲数量\n  演唱会总场次 INTEGER, -- 演唱会总场次\n  粉丝总数 INTEGER, -- 粉丝总数\n  红粉数量 INTEGER, -- 红粉数量\n);\nCREATE TABLE 歌手签约唱片公司 (\n  歌手id INTEGER PRIMARY KEY, -- 歌手id\n  唱片公司 VARCHAR(50), -- 唱片公司\n  签约时间 DATETIME, -- 签约时间\n);\nCREATE TABLE 金曲奖提名名单 (\n  奖届id INTEGER PRIMARY KEY, -- 奖届id\n  奖项名称 VARCHAR(50), -- 奖项名称\n  提名歌手id INTEGER, -- 提名歌手id\n  提名作品 VARCHAR(50), -- 提名作品\n);\nCREATE TABLE 金曲奖获奖名单 (\n  奖届id INTEGER PRIMARY KEY, -- 奖届id\n  奖项名称 VARCHAR(50), -- 奖项名称\n  获奖歌手id INTEGER, -- 获奖歌手id\n  歌手唱片公司 VARCHAR(50), -- 歌手唱片公司\n);\n-- 金曲奖提名名单.奖届id can be joined with 各届金曲奖.各届金曲奖\n-- 歌手签约唱片公司.歌手id can be joined with 歌手.歌手\n-- 金曲奖获奖名单.奖届id can be joined with 各届金曲奖.各届金曲奖\n-- 金曲奖提名名单.提名歌手id can be joined with 歌手.歌手\n-- 金曲奖获奖名单.获奖歌手id can be joined with 歌手.歌手", "columns_en": {"词条id": "词条id", "名称": "名称", "年份": "年份", "奖项数量": "奖项数量", "主持人": "主持人", "参赛作品数量": "参赛作品数量", "入围作品数量": "入围作品数量", "姓名": "姓名", "性别": "性别", "出生地": "出生地", "专辑数量": "专辑数量", "歌曲数量": "歌曲数量", "演唱会总场次": "演唱会总场次", "粉丝总数": "粉丝总数", "红粉数量": "红粉数量", "歌手id": "歌手id", "唱片公司": "唱片公司", "签约时间": "签约时间", "奖届id": "奖届id", "奖项名称": "奖项名称", "提名歌手id": "提名歌手id", "提名作品": "提名作品", "获奖歌手id": "获奖歌手id", "歌手唱片公司": "歌手唱片公司"}, "table_en": {"各届金曲奖": "各届金曲奖", "歌手": "歌手", "歌手签约唱片公司": "歌手签约唱片公司", "金曲奖提名名单": "金曲奖提名名单", "金曲奖获奖名单": "金曲奖获奖名单"}}, "房产公司": {"sqlite": "CREATE TABLE 地产集团 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  位于城市 VARCHAR(50), -- 位于城市\n  所属省份 VARCHAR(50), -- 所属省份\n  年销售额 INTEGER, -- 年销售额\n  销售额同比增长 INTEGER, -- 销售额同比增长\n  销售额市场占比 INTEGER, -- 销售额市场占比\n  商品房销售面积 INTEGER, -- 商品房销售面积\n  销售面积同比增长 INTEGER, -- 销售面积同比增长\n  销售面积 INTEGER, -- 销售面积\n  市场占比 INTEGER, -- 市场占比\n);\nCREATE TABLE 2019年房地产企业500强 (\n  集团id INTEGER PRIMARY KEY, -- 集团id\n  总排名 INTEGER, -- 总排名\n  发展潜力排名 INTEGER, -- 发展潜力排名\n  成长速度排名 INTEGER, -- 成长速度排名\n  综合发展排名 INTEGER, -- 综合发展排名\n  创新能力排名 INTEGER, -- 创新能力排名\n);\nCREATE TABLE 2019年房地产企业运营100强 (\n  集团id INTEGER PRIMARY KEY, -- 集团id\n  运营效率排名 INTEGER, -- 运营效率排名\n  区域运营排名 INTEGER, -- 区域运营排名\n  稳健运营排名 INTEGER, -- 稳健运营排名\n  商业地产运营排名 INTEGER, -- 商业地产运营排名\n  社区文化运营排名 INTEGER, -- 社区文化运营排名\n  长租公寓运营排名 INTEGER, -- 长租公寓运营排名\n);\nCREATE TABLE 房地产各城市排名 (\n  集团id INTEGER PRIMARY KEY, -- 集团id\n  城市 VARCHAR(50), -- 城市\n  排名 INTEGER, -- 排名\n  销售面积 INTEGER, -- 销售面积\n  销售额 INTEGER, -- 销售额\n);\nCREATE TABLE 房产公司典型项目 (\n  项目名称 VARCHAR(50) PRIMARY KEY, -- 项目名称\n  所属集团id INTEGER, -- 所属集团id\n  位于城市 VARCHAR(50), -- 位于城市\n  占地面积 INTEGER, -- 占地面积\n  总户数 INTEGER, -- 总户数\n  户型面积 INTEGER, -- 户型面积\n);\n-- 房地产各城市排名.集团id can be joined with 地产集团.地产集团\n-- 房产公司典型项目.所属集团id can be joined with 地产集团.地产集团\n-- 2019年房地产企业500强.集团id can be joined with 地产集团.地产集团\n-- 2019年房地产企业运营100强.集团id can be joined with 地产集团.地产集团", "columns_en": {"词条id": "词条id", "名称": "名称", "位于城市": "位于城市", "所属省份": "所属省份", "年销售额": "年销售额", "销售额同比增长": "销售额同比增长", "销售额市场占比": "销售额市场占比", "商品房销售面积": "商品房销售面积", "销售面积同比增长": "销售面积同比增长", "销售面积": "销售面积", "市场占比": "市场占比", "集团id": "集团id", "总排名": "总排名", "发展潜力排名": "发展潜力排名", "成长速度排名": "成长速度排名", "综合发展排名": "综合发展排名", "创新能力排名": "创新能力排名", "运营效率排名": "运营效率排名", "区域运营排名": "区域运营排名", "稳健运营排名": "稳健运营排名", "商业地产运营排名": "商业地产运营排名", "社区文化运营排名": "社区文化运营排名", "长租公寓运营排名": "长租公寓运营排名", "城市": "城市", "排名": "排名", "销售额": "销售额", "项目名称": "项目名称", "所属集团id": "所属集团id", "占地面积": "占地面积", "总户数": "总户数", "户型面积": "户型面积"}, "table_en": {"地产集团": "地产集团", "2019年房地产企业500强": "2019年房地产企业500强", "2019年房地产企业运营100强": "2019年房地产企业运营100强", "房地产各城市排名": "房地产各城市排名", "房产公司典型项目": "房产公司典型项目"}}, "地图软件": {"sqlite": "CREATE TABLE 地图软件 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  上线时间 DATETIME, -- 上线时间\n  运营公司 VARCHAR(50), -- 运营公司\n  覆盖国家和地区数量 INTEGER, -- 覆盖国家和地区数量\n  评分 INTEGER, -- 评分\n);\nCREATE TABLE 地图软件支持的平台 (\n  软件id INTEGER PRIMARY KEY, -- 软件id\n  平台 VARCHAR(50), -- 平台\n  首次支持版本号 INTEGER, -- 首次支持版本号\n  发布时间 DATETIME, -- 发布时间\n);\nCREATE TABLE 地图软件支持的功能 (\n  软件id INTEGER PRIMARY KEY, -- 软件id\n  功能 VARCHAR(50), -- 功能\n  是否创新亮点 BINARY, -- 是否创新亮点\n  首次支持版本号 INTEGER, -- 首次支持版本号\n  发布时间 DATETIME, -- 发布时间\n);\nCREATE TABLE 软件支持的打车APP (\n  软件id INTEGER PRIMARY KEY, -- 软件id\n  打车app VARCHAR(50), -- 打车app\n  车型数量 INTEGER, -- 车型数量\n  日均单数 INTEGER, -- 日均单数\n);\n-- 地图软件支持的功能.软件id can be joined with 地图软件.地图软件\n-- 地图软件支持的平台.软件id can be joined with 地图软件.地图软件\n-- 软件支持的打车APP.软件id can be joined with 地图软件.地图软件", "columns_en": {"词条id": "词条id", "名称": "名称", "上线时间": "上线时间", "运营公司": "运营公司", "覆盖国家和地区数量": "覆盖国家和地区数量", "评分": "评分", "软件id": "软件id", "平台": "平台", "首次支持版本号": "首次支持版本号", "发布时间": "发布时间", "功能": "功能", "是否创新亮点": "是否创新亮点", "打车app": "打车app", "车型数量": "车型数量", "日均单数": "日均单数"}, "table_en": {"地图软件": "地图软件", "地图软件支持的平台": "地图软件支持的平台", "地图软件支持的功能": "地图软件支持的功能", "软件支持的打车APP": "软件支持的打车APP"}}, "中国演员和电视剧": {"sqlite": "CREATE TABLE 演员 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  姓名 VARCHAR(50), -- 姓名\n  民族 VARCHAR(50), -- 民族\n  星座 VARCHAR(50), -- 星座\n  血型 VARCHAR(50), -- 血型\n  身高 INTEGER, -- 身高\n  体重 INTEGER, -- 体重\n  出生地 VARCHAR(50), -- 出生地\n  出生日期 DATETIME, -- 出生日期\n  毕业院校 VARCHAR(50), -- 毕业院校\n);\nCREATE TABLE 导演 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  姓名 VARCHAR(50), -- 姓名\n  出生地 VARCHAR(50), -- 出生地\n  出生日期 DATETIME, -- 出生日期\n  毕业院校 VARCHAR(50), -- 毕业院校\n);\nCREATE TABLE 角色 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  姓名 VARCHAR(50), -- 姓名\n  饰演演员id INTEGER, -- 饰演演员id\n  配音演员id INTEGER, -- 配音演员id\n  出场作品 VARCHAR(50), -- 出场作品\n);\nCREATE TABLE 电视剧 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  剧名 VARCHAR(50), -- 剧名\n  导演 VARCHAR(50), -- 导演\n  编剧 VARCHAR(50), -- 编剧\n  制片人 VARCHAR(50), -- 制片人\n  集数 INTEGER, -- 集数\n  类型 VARCHAR(50), -- 类型\n);\nCREATE TABLE 演员及导演作品 (\n  演员id INTEGER PRIMARY KEY, -- 演员id\n  导演id INTEGER, -- 导演id\n  合作作品id INTEGER, -- 合作作品id\n  作品出品时间 DATETIME, -- 作品出品时间\n);\nCREATE TABLE 演员与导演的合作 (\n  演员id INTEGER PRIMARY KEY, -- 演员id\n  导演id INTEGER, -- 导演id\n  合作次数 INTEGER, -- 合作次数\n);\nCREATE TABLE 演员的作品 (\n  演员id INTEGER PRIMARY KEY, -- 演员id\n  作品id INTEGER, -- 作品id\n  角色类型 VARCHAR(50), -- 角色类型\n);\n-- 演员的作品.作品id can be joined with 电视剧.电视剧\n-- 角色.饰演演员id can be joined with 演员.演员\n-- 演员及导演作品.演员id can be joined with 演员.演员\n-- 演员及导演作品.合作作品id can be joined with 电视剧.电视剧\n-- 角色.配音演员id can be joined with 演员.演员\n-- 演员与导演的合作.导演id can be joined with 导演.导演\n-- 演员及导演作品.导演id can be joined with 导演.导演\n-- 演员与导演的合作.演员id can be joined with 演员.演员\n-- 演员的作品.演员id can be joined with 演员.演员", "columns_en": {"词条id": "词条id", "姓名": "姓名", "民族": "民族", "星座": "星座", "血型": "血型", "身高": "身高", "体重": "体重", "出生地": "出生地", "出生日期": "出生日期", "毕业院校": "毕业院校", "饰演演员id": "饰演演员id", "配音演员id": "配音演员id", "出场作品": "出场作品", "剧名": "剧名", "导演": "导演", "编剧": "编剧", "制片人": "制片人", "集数": "集数", "类型": "类型", "演员id": "演员id", "导演id": "导演id", "合作作品id": "合作作品id", "作品出品时间": "作品出品时间", "合作次数": "合作次数", "作品id": "作品id", "角色类型": "角色类型"}, "table_en": {"演员": "演员", "导演": "导演", "角色": "角色", "电视剧": "电视剧", "演员及导演作品": "演员及导演作品", "演员与导演的合作": "演员与导演的合作", "演员的作品": "演员的作品"}}, "奥运会参赛队伍": {"sqlite": "CREATE TABLE 国家 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  所属洲 VARCHAR(50), -- 所属洲\n);\nCREATE TABLE 夏季奥运会 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  举办国家id INTEGER, -- 举办国家id\n  举办城市 VARCHAR(50), -- 举办城市\n  吉祥物 VARCHAR(50), -- 吉祥物\n  参赛国家数量 INTEGER, -- 参赛国家数量\n  参赛运动员数量 INTEGER, -- 参赛运动员数量\n  大项项目数 INTEGER, -- 大项项目数\n  小项项目数 INTEGER, -- 小项项目数\n);\nCREATE TABLE 公司 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  国家id INTEGER, -- 国家id\n);\nCREATE TABLE 2008北京奥运会奖牌榜 (\n  排名 INTEGER PRIMARY KEY, -- 排名\n  国家id INTEGER, -- 国家id\n  金牌数 INTEGER, -- 金牌数\n  银牌数 INTEGER, -- 银牌数\n  铜牌数 INTEGER, -- 铜牌数\n  奖牌总数 INTEGER, -- 奖牌总数\n);\nCREATE TABLE 奥运会赞助商 (\n  奥运会id INTEGER PRIMARY KEY, -- 奥运会id\n  赞助商id INTEGER, -- 赞助商id\n);\n-- 奥运会赞助商.奥运会id can be joined with 夏季奥运会.夏季奥运会\n-- 2008北京奥运会奖牌榜.国家id can be joined with 国家.国家\n-- 夏季奥运会.举办国家id can be joined with 国家.国家\n-- 公司.国家id can be joined with 国家.国家\n-- 奥运会赞助商.赞助商id can be joined with 公司.公司", "columns_en": {"词条id": "词条id", "名称": "名称", "所属洲": "所属洲", "举办国家id": "举办国家id", "举办城市": "举办城市", "吉祥物": "吉祥物", "参赛国家数量": "参赛国家数量", "参赛运动员数量": "参赛运动员数量", "大项项目数": "大项项目数", "小项项目数": "小项项目数", "国家id": "国家id", "排名": "排名", "金牌数": "金牌数", "银牌数": "银牌数", "铜牌数": "铜牌数", "奖牌总数": "奖牌总数", "奥运会id": "奥运会id", "赞助商id": "赞助商id"}, "table_en": {"国家": "国家", "夏季奥运会": "夏季奥运会", "公司": "公司", "2008北京奥运会奖牌榜": "2008北京奥运会奖牌榜", "奥运会赞助商": "奥运会赞助商"}}, "酒店": {"sqlite": "CREATE TABLE 酒店集团 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  总部所在省 VARCHAR(50), -- 总部所在省\n  上级主管部门 VARCHAR(50), -- 上级主管部门\n  酒店数量 INTEGER, -- 酒店数量\n  客房数量 INTEGER, -- 客房数量\n  省排名 INTEGER, -- 省排名\n  中国500最具价值品牌排名 INTEGER, -- 中国500最具价值品牌排名\n  全球酒店集团300强排名 INTEGER, -- 全球酒店集团300强排名\n);\nCREATE TABLE 酒店 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  酒店地址 VARCHAR(50), -- 酒店地址\n  开业时间 DATETIME, -- 开业时间\n  酒店星级 INTEGER, -- 酒店星级\n  所属集团id INTEGER, -- 所属集团id\n  客房数量 INTEGER, -- 客房数量\n  大厅容纳人数 INTEGER, -- 大厅容纳人数\n);\nCREATE TABLE 机场 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  所属城市 VARCHAR(50), -- 所属城市\n  类型 VARCHAR(50), -- 类型\n);\nCREATE TABLE 火车站 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  所属城市 VARCHAR(50), -- 所属城市\n  类型 VARCHAR(50), -- 类型\n);\nCREATE TABLE 酒店距离机场路程 (\n  酒店id INTEGER PRIMARY KEY, -- 酒店id\n  机场id INTEGER, -- 机场id\n  距离 INTEGER, -- 距离\n  打车费用 INTEGER, -- 打车费用\n  高峰用时 INTEGER, -- 高峰用时\n  平时用时 INTEGER, -- 平时用时\n);\nCREATE TABLE 酒店距离火车站路程 (\n  酒店id INTEGER PRIMARY KEY, -- 酒店id\n  火车站id INTEGER, -- 火车站id\n  公交线路数 INTEGER, -- 公交线路数\n  地铁线路数 INTEGER, -- 地铁线路数\n  地铁用时 INTEGER, -- 地铁用时\n);\nCREATE TABLE 酒店活动费用 (\n  酒店id INTEGER PRIMARY KEY, -- 酒店id\n  活动类型 VARCHAR(50), -- 活动类型\n  人数规模 INTEGER, -- 人数规模\n  费用 INTEGER, -- 费用\n);\n-- 酒店距离机场路程.机场id can be joined with 机场.机场\n-- 酒店距离火车站路程.酒店id can be joined with 酒店.酒店\n-- 酒店距离机场路程.酒店id can be joined with 酒店.酒店\n-- 酒店活动费用.酒店id can be joined with 酒店.酒店\n-- 酒店.所属集团id can be joined with 酒店集团.酒店集团\n-- 酒店距离火车站路程.火车站id can be joined with 火车站.火车站", "columns_en": {"词条id": "词条id", "名称": "名称", "总部所在省": "总部所在省", "上级主管部门": "上级主管部门", "酒店数量": "酒店数量", "客房数量": "客房数量", "省排名": "省排名", "中国500最具价值品牌排名": "中国500最具价值品牌排名", "全球酒店集团300强排名": "全球酒店集团300强排名", "酒店地址": "酒店地址", "开业时间": "开业时间", "酒店星级": "酒店星级", "所属集团id": "所属集团id", "大厅容纳人数": "大厅容纳人数", "所属城市": "所属城市", "类型": "类型", "酒店id": "酒店id", "机场id": "机场id", "距离": "距离", "打车费用": "打车费用", "高峰用时": "高峰用时", "平时用时": "平时用时", "火车站id": "火车站id", "公交线路数": "公交线路数", "地铁线路数": "地铁线路数", "地铁用时": "地铁用时", "活动类型": "活动类型", "人数规模": "人数规模", "费用": "费用"}, "table_en": {"酒店集团": "酒店集团", "酒店": "酒店", "机场": "机场", "火车站": "火车站", "酒店距离机场路程": "酒店距离机场路程", "酒店距离火车站路程": "酒店距离火车站路程", "酒店活动费用": "酒店活动费用"}}, "世博会/园博会": {"sqlite": "CREATE TABLE 世博会 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  时间 DATETIME, -- 时间\n  地点 VARCHAR(50), -- 地点\n  种类 VARCHAR(50), -- 种类\n  举办天数 INTEGER, -- 举办天数\n  主题 VARCHAR(50), -- 主题\n  参展方数量 INTEGER, -- 参展方数量\n  投资成本 INTEGER, -- 投资成本\n  会场面积 INTEGER, -- 会场面积\n  参观人数 INTEGER, -- 参观人数\n  单日客流 INTEGER, -- 单日客流\n);\nCREATE TABLE 世博会场馆 (\n  世博会id INTEGER PRIMARY KEY, -- 世博会id\n  场馆 VARCHAR(50), -- 场馆\n  场馆所属国家 VARCHAR(50), -- 场馆所属国家\n  排名 INTEGER, -- 排名\n  占比面积 INTEGER, -- 占比面积\n  参观人数 INTEGER, -- 参观人数\n);\nCREATE TABLE 世界园博会 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  时间 DATETIME, -- 时间\n  地点 VARCHAR(50), -- 地点\n  级别 VARCHAR(50), -- 级别\n  会期 INTEGER, -- 会期\n  主题 VARCHAR(50), -- 主题\n  场馆数量 INTEGER, -- 场馆数量\n  会场面积 INTEGER, -- 会场面积\n  参观人数 INTEGER, -- 参观人数\n  票价 INTEGER, -- 票价\n);\nCREATE TABLE 中国花卉园博会 (\n  时间 DATETIME PRIMARY KEY, -- 时间\n  届数 INTEGER, -- 届数\n  举办城市 VARCHAR(50), -- 举办城市\n  地点 VARCHAR(50), -- 地点\n  展园数量 INTEGER, -- 展园数量\n  参与机构数量 INTEGER, -- 参与机构数量\n);\n-- 世博会场馆.世博会id can be joined with 世博会.世博会", "columns_en": {"词条id": "词条id", "名称": "名称", "时间": "时间", "地点": "地点", "种类": "种类", "举办天数": "举办天数", "主题": "主题", "参展方数量": "参展方数量", "投资成本": "投资成本", "会场面积": "会场面积", "参观人数": "参观人数", "单日客流": "单日客流", "世博会id": "世博会id", "场馆": "场馆", "场馆所属国家": "场馆所属国家", "排名": "排名", "占比面积": "占比面积", "级别": "级别", "会期": "会期", "场馆数量": "场馆数量", "票价": "票价", "届数": "届数", "举办城市": "举办城市", "展园数量": "展园数量", "参与机构数量": "参与机构数量"}, "table_en": {"世博会": "世博会", "世博会场馆": "世博会场馆", "世界园博会": "世界园博会", "中国花卉园博会": "中国花卉园博会"}}, "二手车": {"sqlite": "CREATE TABLE 车型 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  上牌时间 DATETIME, -- 上牌时间\n  上牌地 VARCHAR(50), -- 上牌地\n  里程数 INTEGER, -- 里程数\n  排量 INTEGER, -- 排量\n  过户记录 INTEGER, -- 过户记录\n  所属公司 VARCHAR(50), -- 所属公司\n);\nCREATE TABLE 车型平台售卖 (\n  车型id INTEGER PRIMARY KEY, -- 车型id\n  平台 VARCHAR(50), -- 平台\n  售价 INTEGER, -- 售价\n  服务费比例 INTEGER, -- 服务费比例\n);\n-- 车型平台售卖.车型id can be joined with 车型.车型", "columns_en": {"词条id": "词条id", "名称": "名称", "上牌时间": "上牌时间", "上牌地": "上牌地", "里程数": "里程数", "排量": "排量", "过户记录": "过户记录", "所属公司": "所属公司", "车型id": "车型id", "平台": "平台", "售价": "售价", "服务费比例": "服务费比例"}, "table_en": {"车型": "车型", "车型平台售卖": "车型平台售卖"}}, "在线英语教学": {"sqlite": "CREATE TABLE 平台 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  成立年数 INTEGER, -- 成立年数\n  教师数量 INTEGER, -- 教师数量\n  课程体系分级 INTEGER, -- 课程体系分级\n);\nCREATE TABLE 青少年课程 (\n  平台id INTEGER PRIMARY KEY, -- 平台id\n  适合群体 VARCHAR(50), -- 适合群体\n  一节课时间 INTEGER, -- 一节课时间\n  课时数 INTEGER, -- 课时数\n  主题数 INTEGER, -- 主题数\n  词汇量 INTEGER, -- 词汇量\n);\nCREATE TABLE 教师 (\n  平台id INTEGER PRIMARY KEY, -- 平台id\n  外教来自国家 VARCHAR(50), -- 外教来自国家\n  外教数量 INTEGER, -- 外教数量\n  教师职业占比 INTEGER, -- 教师职业占比\n);\nCREATE TABLE 学费 (\n  平台id INTEGER PRIMARY KEY, -- 平台id\n  课时数 INTEGER, -- 课时数\n  原价 INTEGER, -- 原价\n  折扣 INTEGER, -- 折扣\n);\n-- 学费.平台id can be joined with 平台.平台\n-- 青少年课程.平台id can be joined with 平台.平台\n-- 教师.平台id can be joined with 平台.平台", "columns_en": {"词条id": "词条id", "名称": "名称", "成立年数": "成立年数", "教师数量": "教师数量", "课程体系分级": "课程体系分级", "平台id": "平台id", "适合群体": "适合群体", "一节课时间": "一节课时间", "课时数": "课时数", "主题数": "主题数", "词汇量": "词汇量", "外教来自国家": "外教来自国家", "外教数量": "外教数量", "教师职业占比": "教师职业占比", "原价": "原价", "折扣": "折扣"}, "table_en": {"平台": "平台", "青少年课程": "青少年课程", "教师": "教师", "学费": "学费"}}, "中国城市的企业": {"sqlite": "CREATE TABLE 省份 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  500强企业数量 INTEGER, -- 500强企业数量\n  总营收(亿元) INTEGER, -- 总营收(亿元)\n  总利润(亿元) INTEGER, -- 总利润(亿元)\n);\nCREATE TABLE 企业 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  省份id INTEGER, -- 省份id\n  成立时间 DATETIME, -- 成立时间\n  公司类型 VARCHAR(50), -- 公司类型\n  领域分类 VARCHAR(50), -- 领域分类\n  年营业额 INTEGER, -- 年营业额\n  员工数 INTEGER, -- 员工数\n  注册资本 INTEGER, -- 注册资本\n  500强排名 INTEGER, -- 500强排名\n);\n-- 企业.省份id can be joined with 省份.省份", "columns_en": {"词条id": "词条id", "名称": "名称", "500强企业数量": "500强企业数量", "总营收(亿元)": "总营收(亿元)", "总利润(亿元)": "总利润(亿元)", "省份id": "省份id", "成立时间": "成立时间", "公司类型": "公司类型", "领域分类": "领域分类", "年营业额": "年营业额", "员工数": "员工数", "注册资本": "注册资本", "500强排名": "500强排名"}, "table_en": {"省份": "省份", "企业": "企业"}}, "汽车": {"sqlite": "CREATE TABLE 汽车公司 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  所属国家 VARCHAR(50), -- 所属国家\n  经营范围 VARCHAR(50), -- 经营范围\n  母公司 VARCHAR(50), -- 母公司\n  主要车系数量 INTEGER, -- 主要车系数量\n  世界500强排名 INTEGER, -- 世界500强排名\n  主要荣誉 VARCHAR(50), -- 主要荣誉\n);\nCREATE TABLE 汽车公司中国事业部 (\n  公司id INTEGER PRIMARY KEY, -- 公司id\n  中国事业部名称 VARCHAR(50), -- 中国事业部名称\n  位于城市 VARCHAR(50), -- 位于城市\n  所属省份 VARCHAR(50), -- 所属省份\n  总投资金额 INTEGER, -- 总投资金额\n  负责产品数量 INTEGER, -- 负责产品数量\n  主要产品 VARCHAR(50), -- 主要产品\n);\nCREATE TABLE 汽车产品 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  推出时间 DATETIME, -- 推出时间\n  车型 VARCHAR(50), -- 车型\n  车款数量 INTEGER, -- 车款数量\n  保值率 INTEGER, -- 保值率\n  生产公司id INTEGER, -- 生产公司id\n);\nCREATE TABLE 车型 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  排量 INTEGER, -- 排量\n  油耗 INTEGER, -- 油耗\n  售价 INTEGER, -- 售价\n  所属产品id INTEGER, -- 所属产品id\n  关注指数 INTEGER, -- 关注指数\n  累计销量 INTEGER, -- 累计销量\n  安全排行 INTEGER, -- 安全排行\n  性能排行 INTEGER, -- 性能排行\n  油耗排行 INTEGER, -- 油耗排行\n  空间排行 INTEGER, -- 空间排行\n  舒适排行 INTEGER, -- 舒适排行\n);\n-- 车型.所属产品id can be joined with 汽车产品.汽车产品\n-- 汽车公司中国事业部.公司id can be joined with 汽车公司.汽车公司\n-- 汽车产品.生产公司id can be joined with 汽车公司.汽车公司", "columns_en": {"词条id": "词条id", "名称": "名称", "所属国家": "所属国家", "经营范围": "经营范围", "母公司": "母公司", "主要车系数量": "主要车系数量", "世界500强排名": "世界500强排名", "主要荣誉": "主要荣誉", "公司id": "公司id", "中国事业部名称": "中国事业部名称", "位于城市": "位于城市", "所属省份": "所属省份", "总投资金额": "总投资金额", "负责产品数量": "负责产品数量", "主要产品": "主要产品", "推出时间": "推出时间", "车型": "车型", "车款数量": "车款数量", "保值率": "保值率", "生产公司id": "生产公司id", "排量": "排量", "油耗": "油耗", "售价": "售价", "所属产品id": "所属产品id", "关注指数": "关注指数", "累计销量": "累计销量", "安全排行": "安全排行", "性能排行": "性能排行", "油耗排行": "油耗排行", "空间排行": "空间排行", "舒适排行": "舒适排行"}, "table_en": {"汽车公司": "汽车公司", "汽车公司中国事业部": "汽车公司中国事业部", "汽车产品": "汽车产品", "车型": "车型"}}, "相亲软件": {"sqlite": "CREATE TABLE 相亲软件 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  是否实名认证 BINARY, -- 是否实名认证\n  是否资产认证 BINARY, -- 是否资产认证\n  是否跨城 BINARY, -- 是否跨城\n  经营年限 INTEGER, -- 经营年限\n  注册会员数 INTEGER, -- 注册会员数\n);\nCREATE TABLE 相亲软件会费 (\n  软件id INTEGER PRIMARY KEY, -- 软件id\n  会员类型 VARCHAR(50), -- 会员类型\n  会费 INTEGER, -- 会费\n);\nCREATE TABLE 会员年龄分布 (\n  软件id INTEGER PRIMARY KEY, -- 软件id\n  会员性别 VARCHAR(50), -- 会员性别\n  25~30岁会员数量 INTEGER, -- 25~30岁会员数量\n  31~35岁会员数量 INTEGER, -- 31~35岁会员数量\n  36~40岁会员数量 INTEGER, -- 36~40岁会员数量\n  41~45岁会员数量 INTEGER, -- 41~45岁会员数量\n  45~55岁会员数量 INTEGER, -- 45~55岁会员数量\n);\nCREATE TABLE 会员城市分布 (\n  软件id INTEGER PRIMARY KEY, -- 软件id\n  会员性别 VARCHAR(50), -- 会员性别\n  城市 VARCHAR(50), -- 城市\n  会员数量 INTEGER, -- 会员数量\n  成功率 INTEGER, -- 成功率\n);\n-- 会员年龄分布.软件id can be joined with 相亲软件.相亲软件\n-- 相亲软件会费.软件id can be joined with 相亲软件.相亲软件\n-- 会员城市分布.软件id can be joined with 相亲软件.相亲软件", "columns_en": {"词条id": "词条id", "名称": "名称", "是否实名认证": "是否实名认证", "是否资产认证": "是否资产认证", "是否跨城": "是否跨城", "经营年限": "经营年限", "注册会员数": "注册会员数", "软件id": "软件id", "会员类型": "会员类型", "会费": "会费", "会员性别": "会员性别", "25~30岁会员数量": "25~30岁会员数量", "31~35岁会员数量": "31~35岁会员数量", "36~40岁会员数量": "36~40岁会员数量", "41~45岁会员数量": "41~45岁会员数量", "45~55岁会员数量": "45~55岁会员数量", "城市": "城市", "会员数量": "会员数量", "成功率": "成功率"}, "table_en": {"相亲软件": "相亲软件", "相亲软件会费": "相亲软件会费", "会员年龄分布": "会员年龄分布", "会员城市分布": "会员城市分布"}}, "城市外资吸引力": {"sqlite": "CREATE TABLE 城市 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  所属省份 VARCHAR(50), -- 所属省份\n  行政级别 VARCHAR(50), -- 行政级别\n  车牌代码 VARCHAR(50), -- 车牌代码\n);\nCREATE TABLE 城市城建 (\n  年份 DATETIME PRIMARY KEY, -- 年份\n  城市id INTEGER, -- 城市id\n  市区面积 INTEGER, -- 市区面积\n  建成区面积 INTEGER, -- 建成区面积\n  城市建设用地面积 INTEGER, -- 城市建设用地面积\n  本年征地面积 INTEGER, -- 本年征地面积\n  建成区排名 INTEGER, -- 建成区排名\n);\nCREATE TABLE 城市外资吸引力 (\n  年份 DATETIME PRIMARY KEY, -- 年份\n  城市id INTEGER, -- 城市id\n  工业总产值(亿) INTEGER, -- 工业总产值(亿)\n  内资(亿) INTEGER, -- 内资(亿)\n  外资(亿) INTEGER, -- 外资(亿)\n  省内排名 INTEGER, -- 省内排名\n);\nCREATE TABLE 城市实际利用外资 (\n  年份 DATETIME PRIMARY KEY, -- 年份\n  城市id INTEGER, -- 城市id\n  实际利用外资(亿美元) INTEGER, -- 实际利用外资(亿美元)\n  同比增速 INTEGER, -- 同比增速\n);\n-- 城市实际利用外资.城市id can be joined with 城市.城市\n-- 城市外资吸引力.城市id can be joined with 城市.城市\n-- 城市城建.城市id can be joined with 城市.城市", "columns_en": {"词条id": "词条id", "名称": "名称", "所属省份": "所属省份", "行政级别": "行政级别", "车牌代码": "车牌代码", "年份": "年份", "城市id": "城市id", "市区面积": "市区面积", "建成区面积": "建成区面积", "城市建设用地面积": "城市建设用地面积", "本年征地面积": "本年征地面积", "建成区排名": "建成区排名", "工业总产值(亿)": "工业总产值(亿)", "内资(亿)": "内资(亿)", "外资(亿)": "外资(亿)", "省内排名": "省内排名", "实际利用外资(亿美元)": "实际利用外资(亿美元)", "同比增速": "同比增速"}, "table_en": {"城市": "城市", "城市城建": "城市城建", "城市外资吸引力": "城市外资吸引力", "城市实际利用外资": "城市实际利用外资"}}, "朝代": {"sqlite": "CREATE TABLE 朝代 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  起始时间 DATETIME, -- 起始时间\n  结束时间 DATETIME, -- 结束时间\n  都城 VARCHAR(50), -- 都城\n  人口数量 INTEGER, -- 人口数量\n  国土面积 INTEGER, -- 国土面积\n);\nCREATE TABLE 皇帝 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  中文名 VARCHAR(50), -- 中文名\n  所处朝代id INTEGER, -- 所处朝代id\n  出生时间 DATETIME, -- 出生时间\n  去世时间 DATETIME, -- 去世时间\n  主要成就 VARCHAR(50), -- 主要成就\n  年号 VARCHAR(50), -- 年号\n);\nCREATE TABLE 各朝代皇帝 (\n  皇帝id INTEGER PRIMARY KEY, -- 皇帝id\n  朝代id INTEGER, -- 朝代id\n  登基时间 DATETIME, -- 登基时间\n  在位时间 INTEGER, -- 在位时间\n  第几位 INTEGER, -- 第几位\n);\nCREATE TABLE 年号 (\n  年号 VARCHAR(50) PRIMARY KEY, -- 年号\n  朝代id INTEGER, -- 朝代id\n  上一年号 VARCHAR(50), -- 上一年号\n  下一年号 VARCHAR(50), -- 下一年号\n);\nCREATE TABLE 大臣 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  姓名 VARCHAR(50), -- 姓名\n  所处朝代id INTEGER, -- 所处朝代id\n  出生时间 DATETIME, -- 出生时间\n  去世时间 DATETIME, -- 去世时间\n  职业 VARCHAR(50), -- 职业\n);\nCREATE TABLE 大臣辅佐的皇帝 (\n  大臣id INTEGER PRIMARY KEY, -- 大臣id\n  皇帝id INTEGER, -- 皇帝id\n  辅佐时间 INTEGER, -- 辅佐时间\n);\n-- 大臣辅佐的皇帝.皇帝id can be joined with 皇帝.皇帝\n-- 大臣.所处朝代id can be joined with 朝代.朝代\n-- 各朝代皇帝.皇帝id can be joined with 皇帝.皇帝\n-- 年号.朝代id can be joined with 朝代.朝代\n-- 各朝代皇帝.朝代id can be joined with 朝代.朝代\n-- 皇帝.所处朝代id can be joined with 朝代.朝代\n-- 大臣辅佐的皇帝.大臣id can be joined with 大臣.大臣", "columns_en": {"词条id": "词条id", "名称": "名称", "起始时间": "起始时间", "结束时间": "结束时间", "都城": "都城", "人口数量": "人口数量", "国土面积": "国土面积", "中文名": "中文名", "所处朝代id": "所处朝代id", "出生时间": "出生时间", "去世时间": "去世时间", "主要成就": "主要成就", "年号": "年号", "皇帝id": "皇帝id", "朝代id": "朝代id", "登基时间": "登基时间", "在位时间": "在位时间", "第几位": "第几位", "上一年号": "上一年号", "下一年号": "下一年号", "姓名": "姓名", "职业": "职业", "大臣id": "大臣id", "辅佐时间": "辅佐时间"}, "table_en": {"朝代": "朝代", "皇帝": "皇帝", "各朝代皇帝": "各朝代皇帝", "年号": "年号", "大臣": "大臣", "大臣辅佐的皇帝": "大臣辅佐的皇帝"}}, "电视机": {"sqlite": "CREATE TABLE 电视机品牌 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  所属公司 VARCHAR(50), -- 所属公司\n  国家 VARCHAR(50), -- 国家\n  市场份额 INTEGER, -- 市场份额\n);\nCREATE TABLE 电视机型号 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  产品定位 VARCHAR(50), -- 产品定位\n  屏幕尺寸 INTEGER, -- 屏幕尺寸\n  屏幕比例 VARCHAR(50), -- 屏幕比例\n  分辨率 INTEGER, -- 分辨率\n  背光灯寿命 INTEGER, -- 背光灯寿命\n  定价 INTEGER, -- 定价\n  品牌id INTEGER, -- 品牌id\n);\nCREATE TABLE 电视机平台售卖 (\n  型号id INTEGER PRIMARY KEY, -- 型号id\n  平台 VARCHAR(50), -- 平台\n  售价 INTEGER, -- 售价\n  最高价格 INTEGER, -- 最高价格\n  最低价格 INTEGER, -- 最低价格\n  售卖量 INTEGER, -- 售卖量\n  用户评分 INTEGER, -- 用户评分\n);\nCREATE TABLE 各城市电视机售卖 (\n  城市 VARCHAR(50) PRIMARY KEY, -- 城市\n  所属省份 VARCHAR(50), -- 所属省份\n  电视机售卖量 INTEGER, -- 电视机售卖量\n  观看电视日平均用时 INTEGER, -- 观看电视日平均用时\n);\n-- 电视机型号.品牌id can be joined with 电视机品牌.电视机品牌\n-- 电视机平台售卖.型号id can be joined with 电视机型号.电视机型号", "columns_en": {"词条id": "词条id", "名称": "名称", "所属公司": "所属公司", "国家": "国家", "市场份额": "市场份额", "产品定位": "产品定位", "屏幕尺寸": "屏幕尺寸", "屏幕比例": "屏幕比例", "分辨率": "分辨率", "背光灯寿命": "背光灯寿命", "定价": "定价", "品牌id": "品牌id", "型号id": "型号id", "平台": "平台", "售价": "售价", "最高价格": "最高价格", "最低价格": "最低价格", "售卖量": "售卖量", "用户评分": "用户评分", "城市": "城市", "所属省份": "所属省份", "电视机售卖量": "电视机售卖量", "观看电视日平均用时": "观看电视日平均用时"}, "table_en": {"电视机品牌": "电视机品牌", "电视机型号": "电视机型号", "电视机平台售卖": "电视机平台售卖", "各城市电视机售卖": "各城市电视机售卖"}}, "中国城市产业结构": {"sqlite": "CREATE TABLE 省份产业 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  第一产业收入 INTEGER, -- 第一产业收入\n  第一产业增长 INTEGER, -- 第一产业增长\n  第二产业收入 INTEGER, -- 第二产业收入\n  第二产业增长 INTEGER, -- 第二产业增长\n  第三产业收入 INTEGER, -- 第三产业收入\n  第三产业增长 INTEGER, -- 第三产业增长\n);\nCREATE TABLE 城市交通 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  所属省份id INTEGER, -- 所属省份id\n  机场数量 INTEGER, -- 机场数量\n  火车站数量 INTEGER, -- 火车站数量\n  地铁线数量 INTEGER, -- 地铁线数量\n  公交线数量 INTEGER, -- 公交线数量\n);\nCREATE TABLE 高铁城市 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  省份id INTEGER, -- 省份id\n  高铁站数量 INTEGER, -- 高铁站数量\n  联通城市数量 INTEGER, -- 联通城市数量\n);\nCREATE TABLE 码头 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  城市id INTEGER, -- 城市id\n  旅客吞吐量 INTEGER, -- 旅客吞吐量\n);\n-- 城市交通.所属省份id can be joined with 省份产业.省份产业\n-- 码头.城市id can be joined with 城市交通.城市交通\n-- 高铁城市.省份id can be joined with 省份产业.省份产业", "columns_en": {"词条id": "词条id", "名称": "名称", "第一产业收入": "第一产业收入", "第一产业增长": "第一产业增长", "第二产业收入": "第二产业收入", "第二产业增长": "第二产业增长", "第三产业收入": "第三产业收入", "第三产业增长": "第三产业增长", "所属省份id": "所属省份id", "机场数量": "机场数量", "火车站数量": "火车站数量", "地铁线数量": "地铁线数量", "公交线数量": "公交线数量", "省份id": "省份id", "高铁站数量": "高铁站数量", "联通城市数量": "联通城市数量", "城市id": "城市id", "旅客吞吐量": "旅客吞吐量"}, "table_en": {"省份产业": "省份产业", "城市交通": "城市交通", "高铁城市": "高铁城市", "码头": "码头"}}, "高考": {"sqlite": "CREATE TABLE 2018年各地区考生 (\n  考生所在省份 VARCHAR(50) PRIMARY KEY, -- 考生所在省份\n  考生类别 VARCHAR(50), -- 考生类别\n  考卷类型 VARCHAR(50), -- 考卷类型\n  状元分数线 INTEGER, -- 状元分数线\n  考生数量 INTEGER, -- 考生数量\n  700以上考生数量 INTEGER, -- 700以上考生数量\n);\nCREATE TABLE 2018年各地区分数线 (\n  考生所在省份 VARCHAR(50) PRIMARY KEY, -- 考生所在省份\n  考生类别 VARCHAR(50), -- 考生类别\n  批次 VARCHAR(50), -- 批次\n  分数线 INTEGER, -- 分数线\n  录取率 INTEGER, -- 录取率\n);\nCREATE TABLE 2018年高校分数线 (\n  院校名称 VARCHAR(50) PRIMARY KEY, -- 院校名称\n  考生所在省份 VARCHAR(50), -- 考生所在省份\n  考生类别 VARCHAR(50), -- 考生类别\n  批次 VARCHAR(50), -- 批次\n  分数线 INTEGER, -- 分数线\n  最高分 INTEGER, -- 最高分\n  平均分 INTEGER, -- 平均分\n  招生人数 INTEGER, -- 招生人数\n);\nCREATE TABLE 一分一档 (\n  考生所在省份 VARCHAR(50) PRIMARY KEY, -- 考生所在省份\n  考生类别 VARCHAR(50), -- 考生类别\n  分数段 INTEGER, -- 分数段\n  本段人数 INTEGER, -- 本段人数\n  累计人数 INTEGER, -- 累计人数\n);\n", "columns_en": {"考生所在省份": "考生所在省份", "考生类别": "考生类别", "考卷类型": "考卷类型", "状元分数线": "状元分数线", "考生数量": "考生数量", "700以上考生数量": "700以上考生数量", "批次": "批次", "分数线": "分数线", "录取率": "录取率", "院校名称": "院校名称", "最高分": "最高分", "平均分": "平均分", "招生人数": "招生人数", "分数段": "分数段", "本段人数": "本段人数", "累计人数": "累计人数"}, "table_en": {"2018年各地区考生": "2018年各地区考生", "2018年各地区分数线": "2018年各地区分数线", "2018年高校分数线": "2018年高校分数线", "一分一档": "一分一档"}}, "城市图书馆": {"sqlite": "CREATE TABLE 城市 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  所属省份 VARCHAR(50), -- 所属省份\n  图书馆数量 INTEGER, -- 图书馆数量\n  教育排名 INTEGER, -- 教育排名\n);\nCREATE TABLE 图书馆 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  地址 VARCHAR(50), -- 地址\n  所属城市id INTEGER, -- 所属城市id\n  属性 VARCHAR(50), -- 属性\n  建馆时间 DATETIME, -- 建馆时间\n  面积 INTEGER, -- 面积\n  藏品数量 INTEGER, -- 藏品数量\n  阅览室数量 INTEGER, -- 阅览室数量\n  座位数量 INTEGER, -- 座位数量\n  古籍数 INTEGER, -- 古籍数\n  数字资源 INTEGER, -- 数字资源\n);\nCREATE TABLE 员工数量 (\n  年份 DATETIME PRIMARY KEY, -- 年份\n  图书馆id INTEGER, -- 图书馆id\n  在编职工数量 INTEGER, -- 在编职工数量\n  研究生学历占比 INTEGER, -- 研究生学历占比\n  本科学历占比 INTEGER, -- 本科学历占比\n);\n-- 员工数量.图书馆id can be joined with 图书馆.图书馆\n-- 图书馆.所属城市id can be joined with 城市.城市", "columns_en": {"词条id": "词条id", "名称": "名称", "所属省份": "所属省份", "图书馆数量": "图书馆数量", "教育排名": "教育排名", "地址": "地址", "所属城市id": "所属城市id", "属性": "属性", "建馆时间": "建馆时间", "面积": "面积", "藏品数量": "藏品数量", "阅览室数量": "阅览室数量", "座位数量": "座位数量", "古籍数": "古籍数", "数字资源": "数字资源", "年份": "年份", "图书馆id": "图书馆id", "在编职工数量": "在编职工数量", "研究生学历占比": "研究生学历占比", "本科学历占比": "本科学历占比"}, "table_en": {"城市": "城市", "图书馆": "图书馆", "员工数量": "员工数量"}}, "企业股东": {"sqlite": "CREATE TABLE 企业 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  企业名称 VARCHAR(50), -- 企业名称\n  市值 INTEGER, -- 市值\n  当前股价 INTEGER, -- 当前股价\n);\nCREATE TABLE 股东 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  姓名 VARCHAR(50), -- 姓名\n  年龄 INTEGER, -- 年龄\n  最高学历 VARCHAR(50), -- 最高学历\n);\nCREATE TABLE 企业股东 (\n  股东id INTEGER PRIMARY KEY, -- 股东id\n  企业id INTEGER, -- 企业id\n  任职职位 VARCHAR(50), -- 任职职位\n  拥有股份 INTEGER, -- 拥有股份\n);\n-- 企业股东.股东id can be joined with 股东.股东\n-- 企业股东.企业id can be joined with 企业.企业", "columns_en": {"词条id": "词条id", "企业名称": "企业名称", "市值": "市值", "当前股价": "当前股价", "姓名": "姓名", "年龄": "年龄", "最高学历": "最高学历", "股东id": "股东id", "企业id": "企业id", "任职职位": "任职职位", "拥有股份": "拥有股份"}, "table_en": {"企业": "企业", "股东": "股东", "企业股东": "企业股东"}}, "人口出生死亡及结婚离婚率": {"sqlite": "CREATE TABLE 各省人口出生及死亡率 (\n  年份 DATETIME PRIMARY KEY, -- 年份\n  省份 VARCHAR(50), -- 省份\n  婴儿出生率 INTEGER, -- 婴儿出生率\n  二胎出生率 INTEGER, -- 二胎出生率\n  人口死亡率 INTEGER, -- 人口死亡率\n  总人口 INTEGER, -- 总人口\n);\nCREATE TABLE 各省结婚及离婚率 (\n  年份 DATETIME PRIMARY KEY, -- 年份\n  省份 VARCHAR(50), -- 省份\n  结婚登记 INTEGER, -- 结婚登记\n  离婚登记 INTEGER, -- 离婚登记\n  离婚率 INTEGER, -- 离婚率\n);\nCREATE TABLE 省份单身人口年龄分布 (\n  省份 VARCHAR(50) PRIMARY KEY, -- 省份\n  性别 VARCHAR(50), -- 性别\n  年龄段 VARCHAR(50), -- 年龄段\n  单身人数 INTEGER, -- 单身人数\n  占总单身人数比例 INTEGER, -- 占总单身人数比例\n);\n", "columns_en": {"年份": "年份", "省份": "省份", "婴儿出生率": "婴儿出生率", "二胎出生率": "二胎出生率", "人口死亡率": "人口死亡率", "总人口": "总人口", "结婚登记": "结婚登记", "离婚登记": "离婚登记", "离婚率": "离婚率", "性别": "性别", "年龄段": "年龄段", "单身人数": "单身人数", "占总单身人数比例": "占总单身人数比例"}, "table_en": {"各省人口出生及死亡率": "各省人口出生及死亡率", "各省结婚及离婚率": "各省结婚及离婚率", "省份单身人口年龄分布": "省份单身人口年龄分布"}}, "世界语言分布": {"sqlite": "CREATE TABLE 语言 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  所属语系 VARCHAR(50), -- 所属语系\n  词汇量 INTEGER, -- 词汇量\n  使用人数 INTEGER, -- 使用人数\n  占全球人口比例 INTEGER, -- 占全球人口比例\n  国际评分 INTEGER, -- 国际评分\n  学习难度 VARCHAR(50), -- 学习难度\n  分支数量 INTEGER, -- 分支数量\n  官方语言国家数量 INTEGER, -- 官方语言国家数量\n);\nCREATE TABLE 各国家语言 (\n  语言id INTEGER PRIMARY KEY, -- 语言id\n  国家 VARCHAR(50), -- 国家\n  地位 VARCHAR(50), -- 地位\n  使用人数 INTEGER, -- 使用人数\n  人口占比 INTEGER, -- 人口占比\n);\nCREATE TABLE 中国英语考试 (\n  申请国家 VARCHAR(50) PRIMARY KEY, -- 申请国家\n  考试类型 VARCHAR(50), -- 考试类型\n  通过分数 INTEGER, -- 通过分数\n);\n-- 各国家语言.语言id can be joined with 语言.语言", "columns_en": {"词条id": "词条id", "名称": "名称", "所属语系": "所属语系", "词汇量": "词汇量", "使用人数": "使用人数", "占全球人口比例": "占全球人口比例", "国际评分": "国际评分", "学习难度": "学习难度", "分支数量": "分支数量", "官方语言国家数量": "官方语言国家数量", "语言id": "语言id", "国家": "国家", "地位": "地位", "人口占比": "人口占比", "申请国家": "申请国家", "考试类型": "考试类型", "通过分数": "通过分数"}, "table_en": {"语言": "语言", "各国家语言": "各国家语言", "中国英语考试": "中国英语考试"}}, "中国城市潜力": {"sqlite": "CREATE TABLE 城市 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  所属省份 VARCHAR(50), -- 所属省份\n  城镇比例 INTEGER, -- 城镇比例\n  GDP总额 INTEGER, -- GDP总额\n  平均工资 INTEGER, -- 平均工资\n  房租收入占比 INTEGER, -- 房租收入占比\n);\nCREATE TABLE 消费力前十城市 (\n  城市id INTEGER PRIMARY KEY, -- 城市id\n  消费总额 INTEGER, -- 消费总额\n  人均消费 INTEGER, -- 人均消费\n);\nCREATE TABLE 人口结构 (\n  城市id INTEGER PRIMARY KEY, -- 城市id\n  名称 VARCHAR(50), -- 名称\n  出生比例 INTEGER, -- 出生比例\n  死亡比例 INTEGER, -- 死亡比例\n  老年人口比例 INTEGER, -- 老年人口比例\n  流入比例 INTEGER, -- 流入比例\n);\nCREATE TABLE 房价前十城市 (\n  城市id INTEGER PRIMARY KEY, -- 城市id\n  名称 INTEGER, -- 名称\n  房价 INTEGER, -- 房价\n  商品房销售面积 INTEGER, -- 商品房销售面积\n);\n-- 人口结构.城市id can be joined with 城市.城市\n-- 消费力前十城市.城市id can be joined with 城市.城市\n-- 房价前十城市.城市id can be joined with 城市.城市", "columns_en": {"词条id": "词条id", "名称": "名称", "所属省份": "所属省份", "城镇比例": "城镇比例", "GDP总额": "GDP总额", "平均工资": "平均工资", "房租收入占比": "房租收入占比", "城市id": "城市id", "消费总额": "消费总额", "人均消费": "人均消费", "出生比例": "出生比例", "死亡比例": "死亡比例", "老年人口比例": "老年人口比例", "流入比例": "流入比例", "房价": "房价", "商品房销售面积": "商品房销售面积"}, "table_en": {"城市": "城市", "消费力前十城市": "消费力前十城市", "人口结构": "人口结构", "房价前十城市": "房价前十城市"}}, "二手车软件": {"sqlite": "CREATE TABLE 二手车软件 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  上线时间 DATETIME, -- 上线时间\n  创始人 VARCHAR(50), -- 创始人\n  官网 VARCHAR(50), -- 官网\n  覆盖省份数量 INTEGER, -- 覆盖省份数量\n  覆盖城市数量 INTEGER, -- 覆盖城市数量\n  二手车数量 INTEGER, -- 二手车数量\n  评分 INTEGER, -- 评分\n);\nCREATE TABLE 二手车软件覆盖省份 (\n  软件id INTEGER PRIMARY KEY, -- 软件id\n  省份 VARCHAR(50), -- 省份\n  覆盖时间 DATETIME, -- 覆盖时间\n  二手车数量 INTEGER, -- 二手车数量\n  交易车数量 INTEGER, -- 交易车数量\n  累计交易额 INTEGER, -- 累计交易额\n  所在省排名 INTEGER, -- 所在省排名\n);\nCREATE TABLE 二手车软件代言人 (\n  软件id INTEGER PRIMARY KEY, -- 软件id\n  代言人 VARCHAR(50), -- 代言人\n  年份 DATETIME, -- 年份\n);\n-- 二手车软件代言人.软件id can be joined with 二手车软件.二手车软件\n-- 二手车软件覆盖省份.软件id can be joined with 二手车软件.二手车软件", "columns_en": {"词条id": "词条id", "名称": "名称", "上线时间": "上线时间", "创始人": "创始人", "官网": "官网", "覆盖省份数量": "覆盖省份数量", "覆盖城市数量": "覆盖城市数量", "二手车数量": "二手车数量", "评分": "评分", "软件id": "软件id", "省份": "省份", "覆盖时间": "覆盖时间", "交易车数量": "交易车数量", "累计交易额": "累计交易额", "所在省排名": "所在省排名", "代言人": "代言人", "年份": "年份"}, "table_en": {"二手车软件": "二手车软件", "二手车软件覆盖省份": "二手车软件覆盖省份", "二手车软件代言人": "二手车软件代言人"}}, "世界湖泊": {"sqlite": "CREATE TABLE 湖泊 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  地理位置 VARCHAR(50), -- 地理位置\n  占地面积 INTEGER, -- 占地面积\n  蓄水量 INTEGER, -- 蓄水量\n  最大深度 INTEGER, -- 最大深度\n  属性 BINARY, -- 属性\n  接壤国家数 INTEGER, -- 接壤国家数\n);\nCREATE TABLE 湖泊接壤国家 (\n  湖泊id INTEGER PRIMARY KEY, -- 湖泊id\n  国家 VARCHAR(50), -- 国家\n  接壤方式 BINARY, -- 接壤方式\n);\nCREATE TABLE 湖泊沿岸城市 (\n  湖泊id INTEGER PRIMARY KEY, -- 湖泊id\n  城市 VARCHAR(50), -- 城市\n  国家 VARCHAR(50), -- 国家\n);\nCREATE TABLE 河流 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  流域面积 INTEGER, -- 流域面积\n  河长 INTEGER, -- 河长\n);\nCREATE TABLE 湖泊注入河流 (\n  湖泊id INTEGER PRIMARY KEY, -- 湖泊id\n  河流id INTEGER, -- 河流id\n);\nCREATE TABLE 湖泊流出河流 (\n  湖泊id INTEGER PRIMARY KEY, -- 湖泊id\n  河流id INTEGER, -- 河流id\n);\n-- 湖泊流出河流.湖泊id can be joined with 湖泊.湖泊\n-- 湖泊注入河流.河流id can be joined with 河流.河流\n-- 湖泊沿岸城市.湖泊id can be joined with 湖泊.湖泊\n-- 湖泊流出河流.河流id can be joined with 河流.河流\n-- 湖泊注入河流.湖泊id can be joined with 湖泊.湖泊\n-- 湖泊接壤国家.湖泊id can be joined with 湖泊.湖泊", "columns_en": {"词条id": "词条id", "名称": "名称", "地理位置": "地理位置", "占地面积": "占地面积", "蓄水量": "蓄水量", "最大深度": "最大深度", "属性": "属性", "接壤国家数": "接壤国家数", "湖泊id": "湖泊id", "国家": "国家", "接壤方式": "接壤方式", "城市": "城市", "流域面积": "流域面积", "河长": "河长", "河流id": "河流id"}, "table_en": {"湖泊": "湖泊", "湖泊接壤国家": "湖泊接壤国家", "湖泊沿岸城市": "湖泊沿岸城市", "河流": "河流", "湖泊注入河流": "湖泊注入河流", "湖泊流出河流": "湖泊流出河流"}}, "银行贷款": {"sqlite": "CREATE TABLE 城市 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  首套房首付比例 INTEGER, -- 首套房首付比例\n  二套房首付比例 INTEGER, -- 二套房首付比例\n  平均房价 INTEGER, -- 平均房价\n);\nCREATE TABLE 银行 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  公司类型 VARCHAR(50), -- 公司类型\n  500强排名 INTEGER, -- 500强排名\n);\nCREATE TABLE 银行房贷利率 (\n  银行id INTEGER PRIMARY KEY, -- 银行id\n  城市id INTEGER, -- 城市id\n  首套房贷款利率 INTEGER, -- 首套房贷款利率\n  二套房贷款利率 INTEGER, -- 二套房贷款利率\n  提前还款最低年限 INTEGER, -- 提前还款最低年限\n);\n-- 银行房贷利率.城市id can be joined with 城市.城市\n-- 银行房贷利率.银行id can be joined with 银行.银行", "columns_en": {"词条id": "词条id", "名称": "名称", "首套房首付比例": "首套房首付比例", "二套房首付比例": "二套房首付比例", "平均房价": "平均房价", "公司类型": "公司类型", "500强排名": "500强排名", "银行id": "银行id", "城市id": "城市id", "首套房贷款利率": "首套房贷款利率", "二套房贷款利率": "二套房贷款利率", "提前还款最低年限": "提前还款最低年限"}, "table_en": {"城市": "城市", "银行": "银行", "银行房贷利率": "银行房贷利率"}}, "空难": {"sqlite": "CREATE TABLE 航空公司 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  总部地点 VARCHAR(50), -- 总部地点\n  成立时间 DATETIME, -- 成立时间\n  营业收入 INTEGER, -- 营业收入\n  净利润 INTEGER, -- 净利润\n  国内客运收入占比 INTEGER, -- 国内客运收入占比\n  港澳台客运收入占比 INTEGER, -- 港澳台客运收入占比\n  国际客运收入占比 INTEGER, -- 国际客运收入占比\n  全年客座率 INTEGER, -- 全年客座率\n);\nCREATE TABLE 空难 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  发生时间 DATETIME, -- 发生时间\n  遇难人数 INTEGER, -- 遇难人数\n  生还人数 INTEGER, -- 生还人数\n  事故原因 VARCHAR(50), -- 事故原因\n  航空公司id INTEGER, -- 航空公司id\n  起飞地 VARCHAR(50), -- 起飞地\n  目的地 VARCHAR(50), -- 目的地\n);\n-- 空难.航空公司id can be joined with 航空公司.航空公司", "columns_en": {"词条id": "词条id", "名称": "名称", "总部地点": "总部地点", "成立时间": "成立时间", "营业收入": "营业收入", "净利润": "净利润", "国内客运收入占比": "国内客运收入占比", "港澳台客运收入占比": "港澳台客运收入占比", "国际客运收入占比": "国际客运收入占比", "全年客座率": "全年客座率", "发生时间": "发生时间", "遇难人数": "遇难人数", "生还人数": "生还人数", "事故原因": "事故原因", "航空公司id": "航空公司id", "起飞地": "起飞地", "目的地": "目的地"}, "table_en": {"航空公司": "航空公司", "空难": "空难"}}, "留学移民签证公司": {"sqlite": "CREATE TABLE 移民中介 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  位于城市 VARCHAR(50), -- 位于城市\n  创立时间 DATETIME, -- 创立时间\n  服务人数 INTEGER, -- 服务人数\n  成功人数 INTEGER, -- 成功人数\n  点赞数 INTEGER, -- 点赞数\n  分享数 INTEGER, -- 分享数\n  咨询数 INTEGER, -- 咨询数\n  收藏数 INTEGER, -- 收藏数\n  总得票数 INTEGER, -- 总得票数\n);\nCREATE TABLE 移民费用 (\n  移民中介id INTEGER PRIMARY KEY, -- 移民中介id\n  国家 VARCHAR(50), -- 国家\n  移民类型 VARCHAR(50), -- 移民类型\n  最低费用 INTEGER, -- 最低费用\n  中介费用 INTEGER, -- 中介费用\n);\nCREATE TABLE 留学中介 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  申请成功率 INTEGER, -- 申请成功率\n  国内排名 INTEGER, -- 国内排名\n);\nCREATE TABLE 留学费用 (\n  留学中介id INTEGER PRIMARY KEY, -- 留学中介id\n  申请国家 VARCHAR(50), -- 申请国家\n  学校排名 INTEGER, -- 学校排名\n  前期收费 INTEGER, -- 前期收费\n  排名收费 INTEGER, -- 排名收费\n  未录取退费比例 INTEGER, -- 未录取退费比例\n);\n-- 移民费用.移民中介id can be joined with 移民中介.移民中介\n-- 留学费用.留学中介id can be joined with 留学中介.留学中介", "columns_en": {"词条id": "词条id", "名称": "名称", "位于城市": "位于城市", "创立时间": "创立时间", "服务人数": "服务人数", "成功人数": "成功人数", "点赞数": "点赞数", "分享数": "分享数", "咨询数": "咨询数", "收藏数": "收藏数", "总得票数": "总得票数", "移民中介id": "移民中介id", "国家": "国家", "移民类型": "移民类型", "最低费用": "最低费用", "中介费用": "中介费用", "申请成功率": "申请成功率", "国内排名": "国内排名", "留学中介id": "留学中介id", "申请国家": "申请国家", "学校排名": "学校排名", "前期收费": "前期收费", "排名收费": "排名收费", "未录取退费比例": "未录取退费比例"}, "table_en": {"移民中介": "移民中介", "移民费用": "移民费用", "留学中介": "留学中介", "留学费用": "留学费用"}}, "考研": {"sqlite": "CREATE TABLE 高校 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  所在城市 VARCHAR(50), -- 所在城市\n  是否985 BINARY, -- 是否985\n  是否211 BINARY, -- 是否211\n  本科毕业人数 INTEGER, -- 本科毕业人数\n  继续深造人数 INTEGER, -- 继续深造人数\n  本科就业率 INTEGER, -- 本科就业率\n);\nCREATE TABLE 各专业推免生 (\n  学校id INTEGER PRIMARY KEY, -- 学校id\n  专业 VARCHAR(50), -- 专业\n  专业全国排名 INTEGER, -- 专业全国排名\n  专业毕业人数 INTEGER, -- 专业毕业人数\n  硕士导师数量 INTEGER, -- 硕士导师数量\n  硕士招生人数 INTEGER, -- 硕士招生人数\n  推免生人数 INTEGER, -- 推免生人数\n);\nCREATE TABLE 各省考研报名情况 (\n  省份 VARCHAR(50) PRIMARY KEY, -- 省份\n  考生性别 VARCHAR(50), -- 考生性别\n  考生数量 INTEGER, -- 考生数量\n);\nCREATE TABLE 报考高校 (\n  考生生源高校id INTEGER PRIMARY KEY, -- 考生生源高校id\n  考生报考高校id INTEGER, -- 考生报考高校id\n  考生数量 INTEGER, -- 考生数量\n);\n-- 报考高校.考生生源高校id can be joined with 高校.高校\n-- 报考高校.考生报考高校id can be joined with 高校.高校\n-- 各专业推免生.学校id can be joined with 高校.高校", "columns_en": {"词条id": "词条id", "名称": "名称", "所在城市": "所在城市", "是否985": "是否985", "是否211": "是否211", "本科毕业人数": "本科毕业人数", "继续深造人数": "继续深造人数", "本科就业率": "本科就业率", "学校id": "学校id", "专业": "专业", "专业全国排名": "专业全国排名", "专业毕业人数": "专业毕业人数", "硕士导师数量": "硕士导师数量", "硕士招生人数": "硕士招生人数", "推免生人数": "推免生人数", "省份": "省份", "考生性别": "考生性别", "考生数量": "考生数量", "考生生源高校id": "考生生源高校id", "考生报考高校id": "考生报考高校id"}, "table_en": {"高校": "高校", "各专业推免生": "各专业推免生", "各省考研报名情况": "各省考研报名情况", "报考高校": "报考高校"}}, "足球世界杯": {"sqlite": "CREATE TABLE 球队 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  中文队名 VARCHAR(50), -- 中文队名\n  所属地区 VARCHAR(50), -- 所属地区\n  成立时间 DATETIME, -- 成立时间\n  FIFA排名 INTEGER, -- FIFA排名\n  冠军次数 INTEGER, -- 冠军次数\n);\nCREATE TABLE 世界杯 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  名称 VARCHAR(50), -- 名称\n  举办时间 DATETIME, -- 举办时间\n  举办国家 VARCHAR(50), -- 举办国家\n  参赛球队数量 INTEGER, -- 参赛球队数量\n  比赛场数 INTEGER, -- 比赛场数\n  决赛场地 VARCHAR(50), -- 决赛场地\n);\nCREATE TABLE 世界杯进球记录 (\n  球员 VARCHAR(50) PRIMARY KEY, -- 球员\n  球队id INTEGER, -- 球队id\n  进球数量 INTEGER, -- 进球数量\n);\nCREATE TABLE 世界杯四强 (\n  年份 DATETIME PRIMARY KEY, -- 年份\n  世界杯名称 VARCHAR(50), -- 世界杯名称\n  冠军球队id INTEGER, -- 冠军球队id\n  亚军球队id INTEGER, -- 亚军球队id\n  季军球队id INTEGER, -- 季军球队id\n  殿军球队id INTEGER, -- 殿军球队id\n);\nCREATE TABLE 世界杯比分记录 (\n  年份 DATETIME PRIMARY KEY, -- 年份\n  世界杯名称 VARCHAR(50), -- 世界杯名称\n  赢方id INTEGER, -- 赢方id\n  输方id INTEGER, -- 输方id\n  比分 INTEGER, -- 比分\n);\n-- 世界杯四强.亚军球队id can be joined with 球队.球队\n-- 世界杯比分记录.输方id can be joined with 球队.球队\n-- 世界杯四强.季军球队id can be joined with 球队.球队\n-- 世界杯四强.殿军球队id can be joined with 球队.球队\n-- 世界杯比分记录.赢方id can be joined with 球队.球队\n-- 世界杯四强.冠军球队id can be joined with 球队.球队\n-- 世界杯进球记录.球队id can be joined with 球队.球队", "columns_en": {"词条id": "词条id", "中文队名": "中文队名", "所属地区": "所属地区", "成立时间": "成立时间", "FIFA排名": "FIFA排名", "冠军次数": "冠军次数", "名称": "名称", "举办时间": "举办时间", "举办国家": "举办国家", "参赛球队数量": "参赛球队数量", "比赛场数": "比赛场数", "决赛场地": "决赛场地", "球员": "球员", "球队id": "球队id", "进球数量": "进球数量", "年份": "年份", "世界杯名称": "世界杯名称", "冠军球队id": "冠军球队id", "亚军球队id": "亚军球队id", "季军球队id": "季军球队id", "殿军球队id": "殿军球队id", "赢方id": "赢方id", "输方id": "输方id", "比分": "比分"}, "table_en": {"球队": "球队", "世界杯": "世界杯", "世界杯进球记录": "世界杯进球记录", "世界杯四强": "世界杯四强", "世界杯比分记录": "世界杯比分记录"}}, "翻拍电视剧": {"sqlite": "CREATE TABLE 电视剧 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  剧名 VARCHAR(50), -- 剧名\n  原著 VARCHAR(50), -- 原著\n  拍摄年份 DATETIME, -- 拍摄年份\n  导演 VARCHAR(50), -- 导演\n  评分 INTEGER, -- 评分\n);\nCREATE TABLE 主题曲 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  主题曲名称 VARCHAR(50), -- 主题曲名称\n  演唱者 VARCHAR(50), -- 演唱者\n  作词 VARCHAR(50), -- 作词\n  作曲 VARCHAR(50), -- 作曲\n  电视剧id INTEGER, -- 电视剧id\n);\nCREATE TABLE 演员 (\n  姓名 VARCHAR(50) PRIMARY KEY, -- 姓名\n  电视剧id INTEGER, -- 电视剧id\n  饰演角色 VARCHAR(50), -- 饰演角色\n  主配角 VARCHAR(50), -- 主配角\n);\n-- 演员.电视剧id can be joined with 电视剧.电视剧\n-- 主题曲.电视剧id can be joined with 电视剧.电视剧", "columns_en": {"词条id": "词条id", "剧名": "剧名", "原著": "原著", "拍摄年份": "拍摄年份", "导演": "导演", "评分": "评分", "主题曲名称": "主题曲名称", "演唱者": "演唱者", "作词": "作词", "作曲": "作曲", "电视剧id": "电视剧id", "姓名": "姓名", "饰演角色": "饰演角色", "主配角": "主配角"}, "table_en": {"电视剧": "电视剧", "主题曲": "主题曲", "演员": "演员"}}, "中国歌手及歌曲": {"sqlite": "CREATE TABLE 歌手 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  姓名 VARCHAR(50), -- 姓名\n  民族 VARCHAR(50), -- 民族\n  身高 INTEGER, -- 身高\n  体重 INTEGER, -- 体重\n  出生地 VARCHAR(50), -- 出生地\n  出生日期 DATETIME, -- 出生日期\n  毕业院校 VARCHAR(50), -- 毕业院校\n);\nCREATE TABLE 专辑 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  专辑名 VARCHAR(50), -- 专辑名\n  歌手id INTEGER, -- 歌手id\n  曲目数量 INTEGER, -- 曲目数量\n  发行时间 DATETIME, -- 发行时间\n  风格 VARCHAR(50), -- 风格\n  唱片公司 VARCHAR(50), -- 唱片公司\n);\nCREATE TABLE 歌曲 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  歌曲名称 VARCHAR(50), -- 歌曲名称\n  所属专辑id INTEGER, -- 所属专辑id\n  时长 INTEGER, -- 时长\n  原唱歌手id INTEGER, -- 原唱歌手id\n  发行时间 DATETIME, -- 发行时间\n  填词 VARCHAR(50), -- 填词\n  谱曲 VARCHAR(50), -- 谱曲\n  编曲 VARCHAR(50), -- 编曲\n  语言 VARCHAR(50), -- 语言\n);\nCREATE TABLE 翻唱歌曲 (\n  歌曲id INTEGER PRIMARY KEY, -- 歌曲id\n  歌手id INTEGER, -- 歌手id\n  评分 INTEGER, -- 评分\n);\nCREATE TABLE 歌手与作词人 (\n  歌手id INTEGER PRIMARY KEY, -- 歌手id\n  作词人 VARCHAR(50), -- 作词人\n  合作曲目数量 INTEGER, -- 合作曲目数量\n);\nCREATE TABLE 台湾金曲奖 (\n  届数 INTEGER PRIMARY KEY, -- 届数\n  具体奖项 VARCHAR(50), -- 具体奖项\n  人物id INTEGER, -- 人物id\n  歌曲id INTEGER, -- 歌曲id\n);\n-- 台湾金曲奖.歌曲id can be joined with 歌曲.歌曲\n-- 专辑.歌手id can be joined with 歌手.歌手\n-- 台湾金曲奖.人物id can be joined with 歌手.歌手\n-- 歌曲.所属专辑id can be joined with 专辑.专辑\n-- 歌曲.原唱歌手id can be joined with 歌手.歌手\n-- 翻唱歌曲.歌曲id can be joined with 歌曲.歌曲\n-- 歌手与作词人.歌手id can be joined with 歌手.歌手\n-- 翻唱歌曲.歌手id can be joined with 歌手.歌手", "columns_en": {"词条id": "词条id", "姓名": "姓名", "民族": "民族", "身高": "身高", "体重": "体重", "出生地": "出生地", "出生日期": "出生日期", "毕业院校": "毕业院校", "专辑名": "专辑名", "歌手id": "歌手id", "曲目数量": "曲目数量", "发行时间": "发行时间", "风格": "风格", "唱片公司": "唱片公司", "歌曲名称": "歌曲名称", "所属专辑id": "所属专辑id", "时长": "时长", "原唱歌手id": "原唱歌手id", "填词": "填词", "谱曲": "谱曲", "编曲": "编曲", "语言": "语言", "歌曲id": "歌曲id", "评分": "评分", "作词人": "作词人", "合作曲目数量": "合作曲目数量", "届数": "届数", "具体奖项": "具体奖项", "人物id": "人物id"}, "table_en": {"歌手": "歌手", "专辑": "专辑", "歌曲": "歌曲", "翻唱歌曲": "翻唱歌曲", "歌手与作词人": "歌手与作词人", "台湾金曲奖": "台湾金曲奖"}}, "企业营收": {"sqlite": "CREATE TABLE 企业 (\n  词条id INTEGER PRIMARY KEY, -- 词条id\n  公司名 VARCHAR(50), -- 公司名\n  股票代码 INTEGER, -- 股票代码\n  注册资本 INTEGER, -- 注册资本\n  成立日期 DATETIME, -- 成立日期\n  行业领域 VARCHAR(50), -- 行业领域\n  经营范围 VARCHAR(50), -- 经营范围\n);\nCREATE TABLE 企业年报 (\n  企业id INTEGER PRIMARY KEY, -- 企业id\n  年份 DATETIME, -- 年份\n  营收 INTEGER, -- 营收\n  收入增长率 INTEGER, -- 收入增长率\n  净利润 INTEGER, -- 净利润\n  净利润增长率 INTEGER, -- 净利润增长率\n  每股收益 INTEGER, -- 每股收益\n);\nCREATE TABLE 企业股价 (\n  股票代码 INTEGER PRIMARY KEY, -- 股票代码\n  年份 DATETIME, -- 年份\n  最高股价 INTEGER, -- 最高股价\n  最低股价 INTEGER, -- 最低股价\n  目标价 INTEGER, -- 目标价\n);\nCREATE TABLE 企业当前股价 (\n  股票代码 INTEGER PRIMARY KEY, -- 股票代码\n  昨收股价 INTEGER, -- 昨收股价\n  今开股价 INTEGER, -- 今开股价\n  最低股价 INTEGER, -- 最低股价\n  最高股价 INTEGER, -- 最高股价\n  当前价 INTEGER, -- 当前价\n  成交量 INTEGER, -- 成交量\n);\n-- 企业年报.企业id can be joined with 企业.企业\n-- 企业股价.股票代码 can be joined with 企业.企业\n-- 企业当前股价.股票代码 can be joined with 企业.企业", "columns_en": {"词条id": "词条id", "公司名": "公司名", "股票代码": "股票代码", "注册资本": "注册资本", "成立日期": "成立日期", "行业领域": "行业领域", "经营范围": "经营范围", "企业id": "企业id", "年份": "年份", "营收": "营收", "收入增长率": "收入增长率", "净利润": "净利润", "净利润增长率": "净利润增长率", "每股收益": "每股收益", "最高股价": "最高股价", "最低股价": "最低股价", "目标价": "目标价", "昨收股价": "昨收股价", "今开股价": "今开股价", "当前价": "当前价", "成交量": "成交量"}, "table_en": {"企业": "企业", "企业年报": "企业年报", "企业股价": "企业股价", "企业当前股价": "企业当前股价"}}}