{"交通运输": {"sqlite": "CREATE TABLE 铁路运输旅客 (\n  年份 VARCHAR(50) PRIMARY KEY, -- Year\n  铁路营业里程 DATETIME, -- Railway operations mileage\n  里程同比增长 INTEGER, -- The mileage rises the same as the rest of the year\n  高铁里程占比 INTEGER, -- Iron mileage ratio\n  旅客发送量 INTEGER, -- Passengers ' dispatches\n  旅客同比增长 INTEGER, -- Traveler growth over time\n  客运周转量 INTEGER, -- Portfolio turnover\n  周转量同比增长 INTEGER, -- Growth in liquidity on a one-year basis\n  高铁承运占比 INTEGER, -- High Iron Carrier Ratio\n);\nCREATE TABLE 铁路运输货物 (\n  年份 INTEGER PRIMARY KEY, -- Year\n  货运发送量 DATETIME, -- Shipment volume\n  发送量同比增长 INTEGER, -- Sends increase on the same basis\n  货运周转量 INTEGER, -- Freight turnover\n  周转量同比增长 INTEGER, -- Growth in liquidity on a one-year basis\n);\nCREATE TABLE 民航航线 (\n  年份 INTEGER PRIMARY KEY, -- Year\n  民用航空颁证机场数量 DATETIME, -- Number of civil aviation certified airports\n  定期通航机场数量 INTEGER, -- Number of regular air access airports\n  通航城市数量 INTEGER, -- Number of navigable cities\n  飞机数量 INTEGER, -- Number of aircraft\n  航线里程 INTEGER, -- Course miles\n  地级市覆盖率 INTEGER, -- Urban coverage at the local level\n  县覆盖率 INTEGER, -- District coverage\n  国际航线数量 INTEGER, -- Number of international routes\n  通航国家数量 INTEGER, -- Number of shipping countries\n);\nCREATE TABLE 民航运输旅客 (\n  年份 INTEGER PRIMARY KEY, -- Year\n  旅客运输量 DATETIME, -- Passenger traffic\n  旅客同比增长 INTEGER, -- Traveler growth over time\n  旅客周转量 INTEGER, -- Passenger turnover\n  周转量同比增长 INTEGER, -- Growth in liquidity on a one-year basis\n);\nCREATE TABLE 民航运输货物 (\n  年份 INTEGER PRIMARY KEY, -- Year\n  货邮运输量 DATETIME, -- Postage traffic\n  运输量同比增长 INTEGER, -- Increase in volume of transport on a par\n  货邮周转量 INTEGER, -- Postage turnover\n  周转量同比增长 INTEGER, -- Growth in liquidity on a one-year basis\n);\n", "columns_en": {"年份": "Year", "铁路营业里程": "Railway_operations_mileage", "里程同比增长": "The_mileage_rises_the_same_as_the_rest_of_the_year", "高铁里程占比": "Iron_mileage_ratio", "旅客发送量": "Passengers_'_dispatches", "旅客同比增长": "Traveler_growth_over_time", "客运周转量": "Portfolio_turnover", "周转量同比增长": "Growth_in_liquidity_on_a_one-year_basis", "高铁承运占比": "High_Iron_Carrier_Ratio", "货运发送量": "Shipment_volume", "发送量同比增长": "Sends_increase_on_the_same_basis", "货运周转量": "Freight_turnover", "民用航空颁证机场数量": "Number_of_civil_aviation_certified_airports", "定期通航机场数量": "Number_of_regular_air_access_airports", "通航城市数量": "Number_of_navigable_cities", "飞机数量": "Number_of_aircraft", "航线里程": "Course_miles", "地级市覆盖率": "Urban_coverage_at_the_local_level", "县覆盖率": "District_coverage", "国际航线数量": "Number_of_international_routes", "通航国家数量": "Number_of_shipping_countries", "旅客运输量": "Passenger_traffic", "旅客周转量": "Passenger_turnover", "货邮运输量": "Postage_traffic", "运输量同比增长": "Increase_in_volume_of_transport_on_a_par", "货邮周转量": "Postage_turnover"}, "table_en": {"铁路运输旅客": "Passengers_on_rail_transport", "铁路运输货物": "Goods_transported_by_rail", "民航航线": "Civil_aviation_routes", "民航运输旅客": "Passengers_transported_by_civil_aviation", "民航运输货物": "Transport_of_goods_by_civil_aviation"}}, "水果": {"sqlite": "CREATE TABLE 水果 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  特性 VARCHAR(50), -- Features\n  适合季节 VARCHAR(50), -- It's fit for the season\n  每100克热量 VARCHAR(50), -- Per 100 grams of heat\n  每100克水分 INTEGER, -- Per 100 grams of water\n);\nCREATE TABLE 省份 (\n  词条id INTEGER PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  气候 VARCHAR(50), -- Climate\n  所属区域 VARCHAR(50), -- Organisation\n);\nCREATE TABLE 水果产地 (\n  水果id VARCHAR(50) PRIMARY KEY, -- Fruitid\n  省份id INTEGER, -- Province id\n  是否特产 INTEGER, -- Is it special?\n  年平均产量 BINARY, -- Average annual production\n  销售形式 INTEGER, -- Forms of sale\n);\nCREATE TABLE 水果销售城市 (\n  水果id VARCHAR(50) PRIMARY KEY, -- Fruitid\n  原产省份id INTEGER, -- Province of origind\n  销往省份id INTEGER, -- To the provinceid\n  年销售量 INTEGER, -- Annual sales\n);\n-- 水果产地.水果id can be joined with 水果.水果\n-- 水果销售城市.原产省份id can be joined with 省份.省份\n-- 水果销售城市.销往省份id can be joined with 省份.省份\n-- 水果产地.省份id can be joined with 省份.省份\n-- 水果销售城市.水果id can be joined with 水果.水果", "columns_en": {"词条id": "Phrase_id", "名称": "Name", "特性": "Features", "适合季节": "It's_fit_for_the_season", "每100克热量": "Per_100_grams_of_heat", "每100克水分": "Per_100_grams_of_water", "气候": "Climate", "所属区域": "Organisation", "水果id": "Fruitid", "省份id": "Province_id", "是否特产": "Is_it_special?", "年平均产量": "Average_annual_production", "销售形式": "Forms_of_sale", "原产省份id": "Province_of_origind", "销往省份id": "To_the_provinceid", "年销售量": "Annual_sales"}, "table_en": {"水果": "Fruit", "省份": "Province", "水果产地": "Fruit-producing_areas", "水果销售城市": "Fruit_sales_city"}}, "大麦网演唱会": {"sqlite": "CREATE TABLE 演唱会 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  歌手 VARCHAR(50), -- Singer\n  演出场次 VARCHAR(50), -- Showtime\n  单场演出时长 INTEGER, -- The length of a single show\n  演出曲目 INTEGER, -- Play a song\n);\nCREATE TABLE 场馆 (\n  词条id INTEGER PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  城市 VARCHAR(50), -- Urban\n  容纳人数 VARCHAR(50), -- Number of persons accommodated\n  占地面积 INTEGER, -- Area of land area\n);\nCREATE TABLE 演唱会场馆 (\n  演唱会id INTEGER PRIMARY KEY, -- concert id\n  场馆id INTEGER, -- Field id\n  演出日期 INTEGER, -- Date of performance\n  开始时间 DATETIME, --  Other Organiser\n  票数 DATETIME, -- Number of votes\n  售出数量 INTEGER, -- Number of sales\n  最低票价 INTEGER, -- Minimum fare\n  最高票价 INTEGER, -- Highest fare\n);\n-- 演唱会场馆.演唱会id can be joined with 演唱会.演唱会\n-- 演唱会场馆.场馆id can be joined with 场馆.场馆", "columns_en": {"词条id": "Phrase_id", "名称": "Name", "歌手": "Singer", "演出场次": "Showtime", "单场演出时长": "The_length_of_a_single_show", "演出曲目": "Play_a_song", "城市": "Urban", "容纳人数": "Number_of_persons_accommodated", "占地面积": "Area_of_land_area", "演唱会id": "concert_id", "场馆id": "Field_id", "演出日期": "Date_of_performance", "开始时间": "_Other_Organiser", "票数": "Number_of_votes", "售出数量": "Number_of_sales", "最低票价": "Minimum_fare", "最高票价": "Highest_fare"}, "table_en": {"演唱会": "A_concert", "场馆": "The_courtyard", "演唱会场馆": "The_concert_hall"}}, "食物功效": {"sqlite": "CREATE TABLE 食物 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  功效 VARCHAR(50), -- Effectiveness\n);\nCREATE TABLE 相克食物 (\n  食物id VARCHAR(50) PRIMARY KEY, -- Foodid\n  相克食物id INTEGER, -- Sang-kuk Foodid\n  原因 INTEGER, -- Reason\n  是否致命 VARCHAR(50), -- Is it fatal?\n);\nCREATE TABLE 互补食物 (\n  食物id BINARY PRIMARY KEY, -- Foodid\n  互补食物id INTEGER, -- ♪ Complementary foodid ♪\n  同食益处 INTEGER, -- Benefits of eating together\n  推荐做法 VARCHAR(50), -- Recommended practices\n);\n-- 相克食物.相克食物id can be joined with 食物.食物\n-- 互补食物.食物id can be joined with 食物.食物\n-- 互补食物.互补食物id can be joined with 食物.食物\n-- 相克食物.食物id can be joined with 食物.食物", "columns_en": {"词条id": "Phrase_id", "名称": "Name", "功效": "Effectiveness", "食物id": "Foodid", "相克食物id": "Sang-kuk_Foodid", "原因": "Reason", "是否致命": "Is_it_fatal?", "互补食物id": "♪_Complementary_foodid_♪", "同食益处": "Benefits_of_eating_together", "推荐做法": "Recommended_practices"}, "table_en": {"食物": "Food", "相克食物": "Psych_food", "互补食物": "Complementarity_of_foods"}}, "诗词": {"sqlite": "CREATE TABLE 诗人 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  姓名 INTEGER, -- Name\n  性别 VARCHAR(50), -- Gender\n  所处朝代 VARCHAR(50), -- Where you're headed\n  年龄 VARCHAR(50), -- Age\n  作品数量 INTEGER, -- Number of works\n  称号 INTEGER, -- Title\n);\nCREATE TABLE 诗词 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  诗词名 INTEGER, -- Poetry name\n  作者id VARCHAR(50), -- Authorid\n  文学体裁 INTEGER, -- Literary style\n  传播度 VARCHAR(50), -- Dissemination\n);\nCREATE TABLE 做官的诗人 (\n  诗人id INTEGER PRIMARY KEY, -- Poet id\n  所处年号 INTEGER, -- The number of the year in which you were born\n  做官时间 VARCHAR(50), -- It's official time\n);\nCREATE TABLE 纪念景点 (\n  词条id INTEGER PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  所属城市 VARCHAR(50), -- City to which you belong\n  地址 VARCHAR(50), -- Address\n  纪念人物id VARCHAR(50), -- Memorialist id\n);\n-- 纪念景点.纪念人物id can be joined with 诗人.诗人\n-- 诗词.作者id can be joined with 诗人.诗人\n-- 做官的诗人.诗人id can be joined with 诗人.诗人", "columns_en": {"词条id": "Phrase_id", "姓名": "Name", "性别": "Gender", "所处朝代": "Where_you're_headed", "年龄": "Age", "作品数量": "Number_of_works", "称号": "Title", "诗词名": "Poetry_name", "作者id": "Authorid", "文学体裁": "Literary_style", "传播度": "Dissemination", "诗人id": "Poet_id", "所处年号": "The_number_of_the_year_in_which_you_were_born", "做官时间": "It's_official_time", "名称": "Name", "所属城市": "City_to_which_you_belong", "地址": "Address", "纪念人物id": "Memorialist_id"}, "table_en": {"诗人": "Poets", "诗词": "Poetry", "做官的诗人": "I'm_a_poet", "纪念景点": "Monument_sites"}}, "基金公司": {"sqlite": "CREATE TABLE 基金公司 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  注册资本 VARCHAR(50), -- Registered capital\n  封闭式基金数量 INTEGER, -- Number of closed funds\n  开放式基金数量 INTEGER, -- Number of open funds\n  亚洲债券基金数量 INTEGER, -- Number of Asian Bond Funds\n  基金数量排名 INTEGER, -- Number of funds ranked\n  基金品种数排名 INTEGER, -- Ranking of fund varieties\n);\nCREATE TABLE 基金公司的股东公司 (\n  公司id INTEGER PRIMARY KEY, -- Companyid\n  股东公司 INTEGER, -- Shareholders\n  出资比例 VARCHAR(50), -- Percentage of funding\n);\nCREATE TABLE 基金公司收入 (\n  年份 INTEGER PRIMARY KEY, -- Year\n  公司id DATETIME, -- Companyid\n  资产规模 INTEGER, -- Size of assets\n  利润合计 INTEGER, -- Total profits\n  管理费合计 INTEGER, -- Total management costs\n);\n-- 基金公司的股东公司.公司id can be joined with 基金公司.基金公司\n-- 基金公司收入.公司id can be joined with 基金公司.基金公司", "columns_en": {"词条id": "Phrase_id", "名称": "Name", "注册资本": "Registered_capital", "封闭式基金数量": "Number_of_closed_funds", "开放式基金数量": "Number_of_open_funds", "亚洲债券基金数量": "Number_of_Asian_Bond_Funds", "基金数量排名": "Number_of_funds_ranked", "基金品种数排名": "Ranking_of_fund_varieties", "公司id": "Companyid", "股东公司": "Shareholders", "出资比例": "Percentage_of_funding", "年份": "Year", "资产规模": "Size_of_assets", "利润合计": "Total_profits", "管理费合计": "Total_management_costs"}, "table_en": {"基金公司": "Foundation", "基金公司的股东公司": "Shareholders_of_the_Foundation", "基金公司收入": "Fund_company_income"}}, "坚果": {"sqlite": "CREATE TABLE 坚果 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  饱和脂肪含量 VARCHAR(50), -- Saturated fat content\n  不饱和脂肪含量 INTEGER, -- Unsaturated fat content\n  每100克热量 INTEGER, -- Per 100 grams of heat\n);\nCREATE TABLE 每100克坚果营养成分 (\n  坚果id INTEGER PRIMARY KEY, -- Nut id\n  营养成分 INTEGER, -- Nutritional component\n  含量 VARCHAR(50), -- Content\n);\nCREATE TABLE 坚果产地 (\n  坚果id INTEGER PRIMARY KEY, -- Nut id\n  产地 INTEGER, -- Country of origin\n  市场占比 VARCHAR(50), -- Market share\n);\nCREATE TABLE 坚果摄入量 (\n  坚果id INTEGER PRIMARY KEY, -- Nut id\n  国家 INTEGER, -- National\n  人均摄入量 VARCHAR(50), -- Per capita intake\n  世界人均摄入量 INTEGER, -- World per capita intake\n);\nCREATE TABLE 坚果中国人均消费 (\n  坚果id INTEGER PRIMARY KEY, -- Nut id\n  消费次数 INTEGER, -- Number of consumption\n  占比 INTEGER, -- Percentage\n);\nCREATE TABLE 坚果季节性营业收入 (\n  坚果id INTEGER PRIMARY KEY, -- Nut id\n  季节 INTEGER, -- Season\n  营业收入 VARCHAR(50), -- Operating income\n  全年占比 INTEGER, -- Percentage of total year\n);\nCREATE TABLE 坚果销售渠道 (\n  坚果id INTEGER PRIMARY KEY, -- Nut id\n  年份 INTEGER, -- Year\n  线上销售收入 DATETIME, -- Revenue from online sales\n  线下销售收入 INTEGER, -- Underline sales revenue\n);\n-- 坚果摄入量.坚果id can be joined with 坚果.坚果\n-- 每100克坚果营养成分.坚果id can be joined with 坚果.坚果\n-- 坚果季节性营业收入.坚果id can be joined with 坚果.坚果\n-- 坚果销售渠道.坚果id can be joined with 坚果.坚果\n-- 坚果产地.坚果id can be joined with 坚果.坚果\n-- 坚果中国人均消费.坚果id can be joined with 坚果.坚果", "columns_en": {"词条id": "Phrase_id", "名称": "Name", "饱和脂肪含量": "Saturated_fat_content", "不饱和脂肪含量": "Unsaturated_fat_content", "每100克热量": "Per_100_grams_of_heat", "坚果id": "Nut_id", "营养成分": "Nutritional_component", "含量": "Content", "产地": "Country_of_origin", "市场占比": "Market_share", "国家": "National", "人均摄入量": "Per_capita_intake", "世界人均摄入量": "World_per_capita_intake", "消费次数": "Number_of_consumption", "占比": "Percentage", "季节": "Season", "营业收入": "Operating_income", "全年占比": "Percentage_of_total_year", "年份": "Year", "线上销售收入": "Revenue_from_online_sales", "线下销售收入": "Underline_sales_revenue"}, "table_en": {"坚果": "Nuts", "每100克坚果营养成分": "Nutritional_composition_per_100_grams_of_nuts", "坚果产地": "Nuts", "坚果摄入量": "Nut_intake", "坚果中国人均消费": "Per_capita_consumption_of_nuts_in_China", "坚果季节性营业收入": "Seasonal_operating_income_from_nuts", "坚果销售渠道": "Nut_sales_channels"}}, "文集": {"sqlite": "CREATE TABLE 作者 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  姓名 INTEGER, -- Name\n  国籍 VARCHAR(50), -- Nationality\n  毕业院校 VARCHAR(50), -- Graduate schools\n  民族 VARCHAR(50), -- Nationalities\n);\nCREATE TABLE 文集 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  作者id VARCHAR(50), -- Authorid\n  页数 INTEGER, -- Pages\n  定价 INTEGER, -- Pricing\n  出版社 INTEGER, -- Publications\n  出版时间 VARCHAR(50), -- Publication time\n  开本 DATETIME, -- It's a book\n);\n-- 文集.作者id can be joined with 作者.作者", "columns_en": {"词条id": "Phrase_id", "姓名": "Name", "国籍": "Nationality", "毕业院校": "Graduate_schools", "民族": "Nationalities", "名称": "Name", "作者id": "Authorid", "页数": "Pages", "定价": "Pricing", "出版社": "Publications", "出版时间": "Publication_time", "开本": "It's_a_book"}, "table_en": {"作者": "Author", "文集": "Book"}}, "AI峰会": {"sqlite": "CREATE TABLE 峰会 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  主办单位 VARCHAR(50), -- Host\n  举办时间 VARCHAR(50), -- Date of holding\n  历时天数 DATETIME, -- Days of service\n  举办地点 INTEGER, -- Location\n  分论坛数量 VARCHAR(50), -- Number of sub-forums\n  门票价格 INTEGER, -- Price of tickets\n  门票数量 INTEGER, -- Number of tickets\n  报名人数 INTEGER, -- Number of persons registered\n  直播观看人数 INTEGER, -- Number of live viewers\n);\nCREATE TABLE 嘉宾 (\n  词条id INTEGER PRIMARY KEY, -- Phrase id\n  姓名 INTEGER, -- Name\n  任职单位 VARCHAR(50), -- Encumbered\n  职位 VARCHAR(50), -- Positions\n);\nCREATE TABLE 峰会嘉宾 (\n  嘉宾id VARCHAR(50) PRIMARY KEY, -- Hey  hey  hey  hey  hey  hey  hey  hey  hey  hey  hey  hey  hey  hey  hey  hey  hey  hey  hey  hey  hey  hey  hey  hey  hey  hey  hey  hey  hey  hey\n  峰会id INTEGER, -- Summit id\n  演讲主题 INTEGER, -- Themes for the presentation\n  论坛 VARCHAR(50), -- Forum\n  开始时间 VARCHAR(50), --  Other Organiser\n  演讲时长 DATETIME, -- The length of the speech\n);\nCREATE TABLE 峰会赞助公司 (\n  峰会id INTEGER PRIMARY KEY, -- Summit id\n  公司 INTEGER, -- Company\n  赞助级别 VARCHAR(50), -- Sponsorship level\n);\n-- 峰会嘉宾.嘉宾id can be joined with 嘉宾.嘉宾\n-- 峰会嘉宾.峰会id can be joined with 峰会.峰会\n-- 峰会赞助公司.峰会id can be joined with 峰会.峰会", "columns_en": {"词条id": "Phrase_id", "名称": "Name", "主办单位": "Host", "举办时间": "Date_of_holding", "历时天数": "Days_of_service", "举办地点": "Location", "分论坛数量": "Number_of_sub-forums", "门票价格": "Price_of_tickets", "门票数量": "Number_of_tickets", "报名人数": "Number_of_persons_registered", "直播观看人数": "Number_of_live_viewers", "姓名": "Name", "任职单位": "Encumbered", "职位": "Positions", "嘉宾id": "Hey__hey__hey__hey__hey__hey__hey__hey__hey__hey__hey__hey__hey__hey__hey__hey__hey__hey__hey__hey__hey__hey__hey__hey__hey__hey__hey__hey__hey__hey", "峰会id": "Summit_id", "演讲主题": "Themes_for_the_presentation", "论坛": "Forum", "开始时间": "_Other_Organiser", "演讲时长": "The_length_of_the_speech", "公司": "Company", "赞助级别": "Sponsorship_level"}, "table_en": {"峰会": "Summit", "嘉宾": "Guests", "峰会嘉宾": "Guests_of_the_Summit", "峰会赞助公司": "Summit_Sponsors"}}, "明星富豪": {"sqlite": "CREATE TABLE 明星 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  姓名 INTEGER, -- Name\n  国籍 VARCHAR(50), -- Nationality\n  性别 VARCHAR(50), -- Gender\n  职业 VARCHAR(50), -- Occupation\n  年龄 VARCHAR(50), -- Age\n  薪酬 INTEGER, -- Remuneration\n  票房 INTEGER, -- Ticket room\n);\nCREATE TABLE 2018年财富排名 (\n  明星id INTEGER PRIMARY KEY, -- Starid\n  排名 INTEGER, -- Rank\n  资产 INTEGER, -- Assets\n);\nCREATE TABLE 2017年财富排名 (\n  明星id INTEGER PRIMARY KEY, -- Starid\n  排名 INTEGER, -- Rank\n  资产 INTEGER, -- Assets\n);\n-- 2017年财富排名.明星id can be joined with 明星.明星\n-- 2018年财富排名.明星id can be joined with 明星.明星", "columns_en": {"词条id": "Phrase_id", "姓名": "Name", "国籍": "Nationality", "性别": "Gender", "职业": "Occupation", "年龄": "Age", "薪酬": "Remuneration", "票房": "Ticket_room", "明星id": "Starid", "排名": "Rank", "资产": "Assets"}, "table_en": {"明星": "Star", "2018年财富排名": "Treasure_ranking_in_2018", "2017年财富排名": "Treasure_ranking__2017"}}, "手机": {"sqlite": "CREATE TABLE 公司 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  创始人 VARCHAR(50), -- Founder\n  所属国家 VARCHAR(50), -- Country of nationality\n  年营业额 VARCHAR(50), -- Annual turnover\n);\nCREATE TABLE 手机品牌 (\n  词条id INTEGER PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  发布时间 VARCHAR(50), -- Release Time\n  研发公司id DATETIME, -- R & D companyd\n);\nCREATE TABLE 手机型号 (\n  词条id INTEGER PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  主频尺寸 VARCHAR(50), -- Main frequency size\n  像素 INTEGER, -- Pixels\n  内存容量 INTEGER, -- Memory Capacity\n  操作系统 INTEGER, -- Operating system\n  解锁方式 VARCHAR(50), -- Unlock Method\n  售价 VARCHAR(50), -- Price of sale\n  售出量 INTEGER, -- Sales\n  品牌id INTEGER, -- Brandid\n);\nCREATE TABLE 型号使用人群 (\n  型号id INTEGER PRIMARY KEY, -- Model id\n  人群 INTEGER, -- The crowd\n  使用占比 VARCHAR(50), -- Use percentage\n);\n-- 手机型号.品牌id can be joined with 手机品牌.手机品牌\n-- 型号使用人群.型号id can be joined with 手机型号.手机型号\n-- 手机品牌.研发公司id can be joined with 公司.公司", "columns_en": {"词条id": "Phrase_id", "名称": "Name", "创始人": "Founder", "所属国家": "Country_of_nationality", "年营业额": "Annual_turnover", "发布时间": "Release_Time", "研发公司id": "R_&_D_companyd", "主频尺寸": "Main_frequency_size", "像素": "Pixels", "内存容量": "Memory_Capacity", "操作系统": "Operating_system", "解锁方式": "Unlock_Method", "售价": "Price_of_sale", "售出量": "Sales", "品牌id": "Brandid", "型号id": "Model_id", "人群": "The_crowd", "使用占比": "Use_percentage"}, "table_en": {"公司": "Company", "手机品牌": "Mobile_brand", "手机型号": "Cell_phone_type", "型号使用人群": "The_model_uses_the_population"}}, "豆瓣音乐人": {"sqlite": "CREATE TABLE 音乐人 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  姓名 INTEGER, -- Name\n  歌曲数量 VARCHAR(50), -- Number of songs\n  关注数量 INTEGER, -- Number of concerns\n);\nCREATE TABLE 歌曲 (\n  词条id INTEGER PRIMARY KEY, -- Phrase id\n  歌曲名称 INTEGER, -- Song Name\n  音乐人id VARCHAR(50), -- Musician id\n  播放次数 INTEGER, -- Playbacks\n  下载次数 INTEGER, -- Number of downloads\n);\nCREATE TABLE 歌单 (\n  词条id INTEGER PRIMARY KEY, -- Phrase id\n  歌单名称 INTEGER, -- List Name\n  类型 VARCHAR(50), -- Type\n  歌曲数量 VARCHAR(50), -- Number of songs\n  收藏次数 INTEGER, -- Collections\n  播放次数 INTEGER, -- Playbacks\n);\nCREATE TABLE 歌曲歌单 (\n  歌曲id INTEGER PRIMARY KEY, -- Songid\n  歌单id INTEGER, -- ♪ The songlist id ♪\n);\n-- 歌曲歌单.歌曲id can be joined with 歌曲.歌曲\n-- 歌曲歌单.歌单id can be joined with 歌单.歌单\n-- 歌曲.音乐人id can be joined with 音乐人.音乐人", "columns_en": {"词条id": "Phrase_id", "姓名": "Name", "歌曲数量": "Number_of_songs", "关注数量": "Number_of_concerns", "歌曲名称": "Song_Name", "音乐人id": "Musician_id", "播放次数": "Playbacks", "下载次数": "Number_of_downloads", "歌单名称": "List_Name", "类型": "Type", "收藏次数": "Collections", "歌曲id": "Songid", "歌单id": "♪_The_songlist_id_♪"}, "table_en": {"音乐人": "Musicians", "歌曲": "Songs", "歌单": "The_sheet", "歌曲歌单": "A_song_sheet"}}, "中国旅行社": {"sqlite": "CREATE TABLE 旅行社 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  级别 VARCHAR(50), -- Level\n  出境游国家数量 VARCHAR(50), -- Number of countries travelling abroad\n  国内游城市数量 INTEGER, -- Number of cities in the country\n  出境游路线数量 INTEGER, -- Number of exit routes\n  国内游路线数量 INTEGER, -- Number of internal routes\n  亚洲排名 INTEGER, -- Asian ranking\n  接待海外游客数量 INTEGER, -- Number of overseas visitors\n  境外公司数量 INTEGER, -- Number of offshore companies\n  控股子公司数量 INTEGER, -- Number of holding subsidiaries\n  有业务关系的旅行商数量 INTEGER, -- Number of travellers in business relationship\n  免税店数量 INTEGER, -- Number of duty-free shops\n);\nCREATE TABLE 出境游路线 (\n  词条id INTEGER PRIMARY KEY, -- Phrase id\n  路线名称 INTEGER, -- Route Name\n  旅行社id VARCHAR(50), -- Travel agencyid\n  出发城市 INTEGER, -- Let's go to the city\n  天数 VARCHAR(50), -- Days\n  成人价格 INTEGER, -- Adult price\n  儿童价格 INTEGER, -- Child price\n  国家数量 INTEGER, -- Number of countries\n  景点数 INTEGER, -- Viewpoints\n  门票总价格 INTEGER, -- Total ticket prices\n);\nCREATE TABLE 出境游所含国家 (\n  路线id INTEGER PRIMARY KEY, -- Route id\n  国家 INTEGER, -- National\n  旅行天数 VARCHAR(50), -- Days of travel\n  景点数量 INTEGER, -- Number of sites\n);\nCREATE TABLE 国内游路线 (\n  词条id INTEGER PRIMARY KEY, -- Phrase id\n  路线名称 INTEGER, -- Route Name\n  旅行社id VARCHAR(50), -- Travel agencyid\n  出发城市 INTEGER, -- Let's go to the city\n  天数 VARCHAR(50), -- Days\n  预售价格 INTEGER, -- Pre-sale price\n  参团价格 INTEGER, -- Panel price\n  起团人数 INTEGER, -- Number of people starting a mission\n  个人价格 INTEGER, -- Personal price\n  景点数 INTEGER, -- Viewpoints\n);\nCREATE TABLE 邮轮路线 (\n  词条id INTEGER PRIMARY KEY, -- Phrase id\n  路线名称 INTEGER, -- Route Name\n  旅行社id VARCHAR(50), -- Travel agencyid\n  出发城市 INTEGER, -- Let's go to the city\n  天数 VARCHAR(50), -- Days\n  内舱房价格 INTEGER, -- Indoor room prices\n  海景房价格 INTEGER, -- Seaview House Prices\n  阳台房价格 INTEGER, -- Price of balcony room\n  航行区域 INTEGER, -- Navigation area\n  邮轮公司 VARCHAR(50), -- Cruise Company\n);\n-- 邮轮路线.旅行社id can be joined with 旅行社.旅行社\n-- 出境游所含国家.路线id can be joined with 出境游路线.出境游路线\n-- 国内游路线.旅行社id can be joined with 旅行社.旅行社\n-- 出境游路线.旅行社id can be joined with 旅行社.旅行社", "columns_en": {"词条id": "Phrase_id", "名称": "Name", "级别": "Level", "出境游国家数量": "Number_of_countries_travelling_abroad", "国内游城市数量": "Number_of_cities_in_the_country", "出境游路线数量": "Number_of_exit_routes", "国内游路线数量": "Number_of_internal_routes", "亚洲排名": "Asian_ranking", "接待海外游客数量": "Number_of_overseas_visitors", "境外公司数量": "Number_of_offshore_companies", "控股子公司数量": "Number_of_holding_subsidiaries", "有业务关系的旅行商数量": "Number_of_travellers_in_business_relationship", "免税店数量": "Number_of_duty-free_shops", "路线名称": "Route_Name", "旅行社id": "Travel_agencyid", "出发城市": "Let's_go_to_the_city", "天数": "Days", "成人价格": "Adult_price", "儿童价格": "Child_price", "国家数量": "Number_of_countries", "景点数": "Viewpoints", "门票总价格": "Total_ticket_prices", "路线id": "Route_id", "国家": "National", "旅行天数": "Days_of_travel", "景点数量": "Number_of_sites", "预售价格": "Pre-sale_price", "参团价格": "Panel_price", "起团人数": "Number_of_people_starting_a_mission", "个人价格": "Personal_price", "内舱房价格": "Indoor_room_prices", "海景房价格": "Seaview_House_Prices", "阳台房价格": "Price_of_balcony_room", "航行区域": "Navigation_area", "邮轮公司": "Cruise_Company"}, "table_en": {"旅行社": "Travel_agency", "出境游路线": "Outbound_route", "出境游所含国家": "Countries_covered_by_travel_abroad", "国内游路线": "Internal_routes", "邮轮路线": "Cruise_route"}}, "世界经济峰会": {"sqlite": "CREATE TABLE G20峰会 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  年份 VARCHAR(50), -- Year\n  届次 DATETIME, -- Session\n  主办国 INTEGER, -- Host country\n  主办城市 VARCHAR(50), -- Host city\n  参加国家数量 VARCHAR(50), -- Number of countries participating\n);\nCREATE TABLE 世界经济论坛 (\n  年份 INTEGER PRIMARY KEY, -- Year\n  届次 DATETIME, -- Session\n  参加国家数量 INTEGER, -- Number of countries participating\n  参加的元首人数 INTEGER, -- Number of Führers participating\n  参加总人数 INTEGER, -- Total number of participants\n  研讨会数量 INTEGER, -- Number of seminars\n);\nCREATE TABLE 世界物联网博览会 (\n  词条id INTEGER PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  年份 VARCHAR(50), -- Year\n  高峰论坛数量 DATETIME, -- Number of summit forums\n  参会嘉宾数 INTEGER, -- Number of guests\n  参会企业数 INTEGER, -- Number of participating enterprises\n  观展人数 INTEGER, -- Number of visitors\n);\nCREATE TABLE 中国国际进口博览会 (\n  词条id INTEGER PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  年份 VARCHAR(50), -- Year\n  参加企业数 DATETIME, -- Number of enterprises participating\n  意向成交额 INTEGER, -- I'm willing to make a deal\n  成交额增长率 INTEGER, -- Growth rate of turnover\n);\n", "columns_en": {"词条id": "Phrase_id", "名称": "Name", "年份": "Year", "届次": "Session", "主办国": "Host_country", "主办城市": "Host_city", "参加国家数量": "Number_of_countries_participating", "参加的元首人数": "Number_of_Führers_participating", "参加总人数": "Total_number_of_participants", "研讨会数量": "Number_of_seminars", "高峰论坛数量": "Number_of_summit_forums", "参会嘉宾数": "Number_of_guests", "参会企业数": "Number_of_participating_enterprises", "观展人数": "Number_of_visitors", "参加企业数": "Number_of_enterprises_participating", "意向成交额": "I'm_willing_to_make_a_deal", "成交额增长率": "Growth_rate_of_turnover"}, "table_en": {"G20峰会": "G20_Summit", "世界经济论坛": "World_Economic_Forum", "世界物联网博览会": "World_Property_Networking_Expo", "中国国际进口博览会": "China_International_Import_Fair"}}, "中国城市": {"sqlite": "CREATE TABLE 省份 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  下辖区数量 VARCHAR(50), -- Number of Bailiwicks\n  面积 INTEGER, -- Area\n  人口 INTEGER, -- Population\n  气候条件 INTEGER, -- Climate conditions\n  省花 VARCHAR(50), -- Save the flowers\n  省树 VARCHAR(50), -- - No  no  no  no  no  no  no  no  no  no  no  no  no  no  no  no  no  no  no  no  no  no  no  no  no  no  no  no  no  no  no  no  no  no  no  no  no\n);\nCREATE TABLE 城市 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  面积 VARCHAR(50), -- Area\n  人口 INTEGER, -- Population\n  市花 INTEGER, -- The market flower\n  所属省id VARCHAR(50), -- Departmental id\n);\nCREATE TABLE 省生产总值 (\n  年份 INTEGER PRIMARY KEY, -- Year\n  省份id DATETIME, -- Province id\n  GDP INTEGER, -- GDP\n  人均GDP INTEGER, -- GDP per capita\n);\nCREATE TABLE 市生产总值 (\n  年份 INTEGER PRIMARY KEY, -- Year\n  城市id DATETIME, -- Urban id\n  GDP INTEGER, -- GDP\n  人均GDP INTEGER, -- GDP per capita\n);\n-- 市生产总值.城市id can be joined with 城市.城市\n-- 城市.所属省id can be joined with 省份.省份\n-- 省生产总值.省份id can be joined with 省份.省份", "columns_en": {"词条id": "Phrase_id", "名称": "Name", "下辖区数量": "Number_of_Bailiwicks", "面积": "Area", "人口": "Population", "气候条件": "Climate_conditions", "省花": "Save_the_flowers", "省树": "-_No__no__no__no__no__no__no__no__no__no__no__no__no__no__no__no__no__no__no__no__no__no__no__no__no__no__no__no__no__no__no__no__no__no__no__no__no", "市花": "The_market_flower", "所属省id": "Departmental_id", "年份": "Year", "省份id": "Province_id", "GDP": "GDP", "人均GDP": "GDP_per_capita", "城市id": "Urban_id"}, "table_en": {"省份": "Province", "城市": "Urban", "省生产总值": "Total_provincial_production", "市生产总值": "Gross_municipal_product"}}, "中国菜系": {"sqlite": "CREATE TABLE 菜系 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  起源地区 VARCHAR(50), -- Region of origin\n  起源时间 VARCHAR(50), -- Time of origin\n  口味 VARCHAR(50), -- Taste\n  是否是四大菜系 VARCHAR(50), -- Is it the four major dishes?\n  是否是八大菜系 VARCHAR(50), -- Is it the 8th class?\n);\nCREATE TABLE 菜系分布城市 (\n  菜系id VARCHAR(50) PRIMARY KEY, -- It's the id\n  城市 INTEGER, -- Urban\n  受欢迎程度 VARCHAR(50), -- Level of popularity\n  主要餐厅数量 INTEGER, -- Number of main restaurants\n  分布密度 INTEGER, -- Distribution Density\n  版本类型 INTEGER, -- Version Type\n);\nCREATE TABLE 菜品 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  起源地 VARCHAR(50), -- Place of origin\n  版本数量 VARCHAR(50), -- Version Number\n  排名 INTEGER, -- Rank\n);\nCREATE TABLE 菜品对应菜系 (\n  菜品id INTEGER PRIMARY KEY, -- Vegetable id\n  菜系id INTEGER, -- It's the id\n  口味 INTEGER, -- Taste\n);\n-- 菜品对应菜系.菜系id can be joined with 菜系.菜系\n-- 菜系分布城市.菜系id can be joined with 菜系.菜系\n-- 菜品对应菜系.菜品id can be joined with 菜品.菜品", "columns_en": {"词条id": "Phrase_id", "名称": "Name", "起源地区": "Region_of_origin", "起源时间": "Time_of_origin", "口味": "Taste", "是否是四大菜系": "Is_it_the_four_major_dishes?", "是否是八大菜系": "Is_it_the_8th_class?", "菜系id": "It's_the_id", "城市": "Urban", "受欢迎程度": "Level_of_popularity", "主要餐厅数量": "Number_of_main_restaurants", "分布密度": "Distribution_Density", "版本类型": "Version_Type", "起源地": "Place_of_origin", "版本数量": "Version_Number", "排名": "Rank", "菜品id": "Vegetable_id"}, "table_en": {"菜系": "It's_a_vegetable_department", "菜系分布城市": "Vegetables_distributed_in_urban_areas", "菜品": "Vegetables", "菜品对应菜系": "It's_a_dish-reciprocal_department"}}, "智能音箱": {"sqlite": "CREATE TABLE 公司 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  所属国家 VARCHAR(50), -- Country of nationality\n  智能音箱款数 VARCHAR(50), -- Number of smart sound boxes\n  排名 INTEGER, -- Rank\n);\nCREATE TABLE 音箱产品 (\n  词条id INTEGER PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  所属公司id VARCHAR(50), -- Company to which Id belongs\n  售价 INTEGER, -- Price of sale\n  排名 INTEGER, -- Rank\n  上升名次 INTEGER, -- Upgrade\n);\nCREATE TABLE 产品销售 (\n  产品id INTEGER PRIMARY KEY, -- Product id\n  季度 INTEGER, -- Quarterly\n  销售量 VARCHAR(50), -- Sales\n  销售量增长 INTEGER, -- Growth in sales\n);\n-- 音箱产品.所属公司id can be joined with 公司.公司\n-- 产品销售.产品id can be joined with 音箱产品.音箱产品", "columns_en": {"词条id": "Phrase_id", "名称": "Name", "所属国家": "Country_of_nationality", "智能音箱款数": "Number_of_smart_sound_boxes", "排名": "Rank", "所属公司id": "Company_to_which_Id_belongs", "售价": "Price_of_sale", "上升名次": "Upgrade", "产品id": "Product_id", "季度": "Quarterly", "销售量": "Sales", "销售量增长": "Growth_in_sales"}, "table_en": {"公司": "Company", "音箱产品": "Soundbox_Products", "产品销售": "Sale_of_products"}}, "各学校假期": {"sqlite": "CREATE TABLE 各省中小学假期 (\n  省份 VARCHAR(50) PRIMARY KEY, -- Province\n  年级 VARCHAR(50), -- Grade\n  寒假天数 VARCHAR(50), -- Days of cold leave\n  暑假天数 INTEGER, -- Days of summer vacation\n);\nCREATE TABLE 大学假期 (\n  学校 INTEGER PRIMARY KEY, -- School\n  所属省份 VARCHAR(50), -- Provinces to which they belong\n  寒假天数 VARCHAR(50), -- Days of cold leave\n  暑假天数 INTEGER, -- Days of summer vacation\n);\n", "columns_en": {"省份": "Province", "年级": "Grade", "寒假天数": "Days_of_cold_leave", "暑假天数": "Days_of_summer_vacation", "学校": "School", "所属省份": "Provinces_to_which_they_belong"}, "table_en": {"各省中小学假期": "Primary_and_secondary_school_holidays_in_the_provinces", "大学假期": "University_holidays"}}, "建筑类奖项": {"sqlite": "CREATE TABLE 建筑奖项 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  发起时间 VARCHAR(50), -- Launch Time\n  发起人 DATETIME, -- Launcher\n  称号 VARCHAR(50), -- Title\n  总奖金 VARCHAR(50), -- Total bonus\n  评选间隔年数 INTEGER, -- Years between selections\n  举办届数 INTEGER, -- Number of sessions held\n);\nCREATE TABLE 建筑奖各国名单 (\n  奖项id INTEGER PRIMARY KEY, -- Award id\n  国家 INTEGER, -- National\n  数量 VARCHAR(50), -- Number\n);\nCREATE TABLE 建筑师 (\n  词条id INTEGER PRIMARY KEY, -- Phrase id\n  姓名 INTEGER, -- Name\n  国籍 VARCHAR(50), -- Nationality\n  毕业院校 VARCHAR(50), -- Graduate schools\n  作品数量 VARCHAR(50), -- Number of works\n);\nCREATE TABLE 普利兹克奖获奖名单 (\n  年份 INTEGER PRIMARY KEY, -- Year\n  届数 DATETIME, -- Number of sessions\n  获奖人id INTEGER, -- Laureate id\n  国籍 VARCHAR(50), -- Nationality\n);\nCREATE TABLE 阿卡汗建筑奖获奖名单 (\n  届数 VARCHAR(50) PRIMARY KEY, -- Number of sessions\n  获奖建筑名称 INTEGER, -- Name of award-winning building\n  位于城市 VARCHAR(50), -- It's in the city\n  位于国家 VARCHAR(50), --  Other Organiser\n  设计者id VARCHAR(50), -- Designerid\n);\n-- 建筑奖各国名单.奖项id can be joined with 建筑奖项.建筑奖项\n-- 普利兹克奖获奖名单.获奖人id can be joined with 建筑师.建筑师\n-- 阿卡汗建筑奖获奖名单.设计者id can be joined with 建筑师.建筑师", "columns_en": {"词条id": "Phrase_id", "名称": "Name", "发起时间": "Launch_Time", "发起人": "Launcher", "称号": "Title", "总奖金": "Total_bonus", "评选间隔年数": "Years_between_selections", "举办届数": "Number_of_sessions_held", "奖项id": "Award_id", "国家": "National", "数量": "Number", "姓名": "Name", "国籍": "Nationality", "毕业院校": "Graduate_schools", "作品数量": "Number_of_works", "年份": "Year", "届数": "Number_of_sessions", "获奖人id": "Laureate_id", "获奖建筑名称": "Name_of_award-winning_building", "位于城市": "It's_in_the_city", "位于国家": "_Other_Organiser", "设计者id": "Designerid"}, "table_en": {"建筑奖项": "Construction_Award", "建筑奖各国名单": "List_of_countries_that_have_received_construction_awards", "建筑师": "Architect", "普利兹克奖获奖名单": "List_of_awards_for_the_Plyzek_Award", "阿卡汗建筑奖获奖名单": "Akahan_Building_Award_Winners"}}, "足球欧洲杯": {"sqlite": "CREATE TABLE 足球运动员 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  中文名 INTEGER, -- Chinese Name\n  国籍 VARCHAR(50), -- Nationality\n  出生地 VARCHAR(50), -- Place of birth\n  出生日期 VARCHAR(50), -- Date of birth\n  身高 DATETIME, -- Height\n  体重 INTEGER, -- body weight\n  专业特点 INTEGER, -- Professional characteristics\n  场上位置 VARCHAR(50), -- Field position\n  惯用脚 VARCHAR(50), -- Use your feet\n);\nCREATE TABLE 欧冠赛事 (\n  赛季 VARCHAR(50) PRIMARY KEY, -- Season\n  球员id INTEGER, -- Player id\n  所属球队 INTEGER, -- It's part of the team\n  出场次数 VARCHAR(50), -- Number of appearances\n  进球次数 INTEGER, -- Number of goals\n  助攻次数 INTEGER, -- Number of offensives\n);\nCREATE TABLE 欧冠最佳球员 (\n  届数 INTEGER PRIMARY KEY, -- Number of sessions\n  年份 INTEGER, -- Year\n  最佳球员id DATETIME, -- Best player id\n  国家 INTEGER, -- National\n  场上位置 VARCHAR(50), -- Field position\n  球队成绩 VARCHAR(50), -- Team scores\n);\nCREATE TABLE 欧冠最佳射手 (\n  届数 VARCHAR(50) PRIMARY KEY, -- Number of sessions\n  年份 INTEGER, -- Year\n  最佳射手id DATETIME, -- Best shooter id\n  国家 INTEGER, -- National\n  场上位置 VARCHAR(50), -- Field position\n  进球数 VARCHAR(50), -- Goal\n);\nCREATE TABLE 运动员欧冠出场次数 (\n  名次 INTEGER PRIMARY KEY, -- Synchronising folder\n  出场次数 INTEGER, -- Number of appearances\n  运动员id INTEGER, -- Athlete id\n  国家 INTEGER, -- National\n  场上位置 VARCHAR(50), -- Field position\n);\n-- 欧冠最佳球员.最佳球员id can be joined with 足球运动员.足球运动员\n-- 欧冠最佳射手.最佳射手id can be joined with 足球运动员.足球运动员\n-- 运动员欧冠出场次数.运动员id can be joined with 足球运动员.足球运动员\n-- 欧冠赛事.球员id can be joined with 足球运动员.足球运动员", "columns_en": {"词条id": "Phrase_id", "中文名": "Chinese_Name", "国籍": "Nationality", "出生地": "Place_of_birth", "出生日期": "Date_of_birth", "身高": "Height", "体重": "body_weight", "专业特点": "Professional_characteristics", "场上位置": "Field_position", "惯用脚": "Use_your_feet", "赛季": "Season", "球员id": "Player_id", "所属球队": "It's_part_of_the_team", "出场次数": "Number_of_appearances", "进球次数": "Number_of_goals", "助攻次数": "Number_of_offensives", "届数": "Number_of_sessions", "年份": "Year", "最佳球员id": "Best_player_id", "国家": "National", "球队成绩": "Team_scores", "最佳射手id": "Best_shooter_id", "进球数": "Goal", "名次": "Synchronising_folder", "运动员id": "Athlete_id"}, "table_en": {"足球运动员": "Football_players", "欧冠赛事": "The_Eunuchs", "欧冠最佳球员": "Euclid's_best_player", "欧冠最佳射手": "Euclid's_best_shot", "运动员欧冠出场次数": "Number_of_sportspersons_on_the_field"}}, "中国民族": {"sqlite": "CREATE TABLE 民族 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  人口 VARCHAR(50), -- Population\n  语言 INTEGER, -- Languages\n  宗教信仰 VARCHAR(50), -- Religion\n);\nCREATE TABLE 民族城市 (\n  民族id VARCHAR(50) PRIMARY KEY, -- National id\n  城市名称 INTEGER, -- Name of city\n  人口 VARCHAR(50), -- Population\n  比例 INTEGER, -- Percentage\n);\nCREATE TABLE 民俗节日 (\n  节日 INTEGER PRIMARY KEY, -- Holidays\n  民族id VARCHAR(50), -- National id\n  时间 INTEGER, -- Time\n  纪念 DATETIME, -- Memorial\n);\n-- 民俗节日.民族id can be joined with 民族.民族\n-- 民族城市.民族id can be joined with 民族.民族", "columns_en": {"词条id": "Phrase_id", "名称": "Name", "人口": "Population", "语言": "Languages", "宗教信仰": "Religion", "民族id": "National_id", "城市名称": "Name_of_city", "比例": "Percentage", "节日": "Holidays", "时间": "Time", "纪念": "Memorial"}, "table_en": {"民族": "Nationalities", "民族城市": "National_cities", "民俗节日": "Folk_festivals"}}, "医美APP": {"sqlite": "CREATE TABLE 医美APP (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  认知度排名 VARCHAR(50), -- Cognitive Rating\n  市场占有率 INTEGER, -- Market occupancy rate\n  入驻的医疗美容机构数量 INTEGER, -- Number of health-care beauty institutions in place\n);\nCREATE TABLE 美容产品 (\n  词条id INTEGER PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  国家 VARCHAR(50), -- National\n  认知度 VARCHAR(50), -- Cognitiveness\n);\nCREATE TABLE 各国美容市场 (\n  词条id INTEGER PRIMARY KEY, -- Phrase id\n  国家 INTEGER, -- National\n  美容渗透率 VARCHAR(50), -- Comfort penetration rate\n  美容医生数量 INTEGER, -- Number of beauty doctors\n  美容产品数量 INTEGER, -- Number of beauty products\n  整容项目数 INTEGER, -- Number of cosmetic items\n);\nCREATE TABLE 整容人员年龄 (\n  国家id INTEGER PRIMARY KEY, -- Country id\n  性别 INTEGER, -- Gender\n  年龄段 VARCHAR(50), -- Age group\n  美容渗透率 VARCHAR(50), -- Comfort penetration rate\n  整容意向人群占比 INTEGER, -- Percentage of persons intending to be plasticized\n  整容人数 INTEGER, -- Number of prosthetics\n  消费金额 INTEGER, -- Amount of consumption\n);\nCREATE TABLE 各类美容形式分布 (\n  年份 INTEGER PRIMARY KEY, -- Year\n  国家id DATETIME, -- Country id\n  手术整容占比 INTEGER, -- Surgical plastic surgery as a percentage\n  手术需求增长率 INTEGER, -- Growth rate of surgical demand\n  微整形占比 INTEGER, -- Micro orthopaedic ratio\n  微整形需求增长率 INTEGER, -- Microstructured demand growth rate\n);\nCREATE TABLE 中国美容关注 (\n  平台 INTEGER PRIMARY KEY, -- Platform\n  发布文章数量 VARCHAR(50), -- Number of articles published\n  文章阅读人次 INTEGER, -- Reader of articles\n  科普视频数 INTEGER, -- Coptics\n  视频观看人次 INTEGER, -- Video viewing times\n);\n-- 整容人员年龄.国家id can be joined with 各国美容市场.各国美容市场\n-- 各类美容形式分布.国家id can be joined with 各国美容市场.各国美容市场", "columns_en": {"词条id": "Phrase_id", "名称": "Name", "认知度排名": "Cognitive_Rating", "市场占有率": "Market_occupancy_rate", "入驻的医疗美容机构数量": "Number_of_health-care_beauty_institutions_in_place", "国家": "National", "认知度": "Cognitiveness", "美容渗透率": "Comfort_penetration_rate", "美容医生数量": "Number_of_beauty_doctors", "美容产品数量": "Number_of_beauty_products", "整容项目数": "Number_of_cosmetic_items", "国家id": "Country_id", "性别": "Gender", "年龄段": "Age_group", "整容意向人群占比": "Percentage_of_persons_intending_to_be_plasticized", "整容人数": "Number_of_prosthetics", "消费金额": "Amount_of_consumption", "年份": "Year", "手术整容占比": "Surgical_plastic_surgery_as_a_percentage", "手术需求增长率": "Growth_rate_of_surgical_demand", "微整形占比": "Micro_orthopaedic_ratio", "微整形需求增长率": "Microstructured_demand_growth_rate", "平台": "Platform", "发布文章数量": "Number_of_articles_published", "文章阅读人次": "Reader_of_articles", "科普视频数": "Coptics", "视频观看人次": "Video_viewing_times"}, "table_en": {"医美APP": "Medical_APP", "美容产品": "Beauty_products", "各国美容市场": "National_beauty_markets", "整容人员年龄": "Age_of_prosthetic_personnel", "各类美容形式分布": "Distribution_of_all_forms_of_beauty", "中国美容关注": "Chinese_beauty_is_concerned"}}, "枪击事件": {"sqlite": "CREATE TABLE 国家 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  人口数量 VARCHAR(50), -- Number of population\n  民用枪支数 INTEGER, -- Number of guns used for civilian purposes\n  军用枪支数 INTEGER, -- Number of military firearms\n  每100人持有的民用枪支数 INTEGER, -- Number of civilian firearms held per 100 population\n);\nCREATE TABLE 枪击事件 (\n  年份 INTEGER PRIMARY KEY, -- Year\n  国家id DATETIME, -- Country id\n  枪击事件数量 INTEGER, -- Number of shootings\n  死亡人数 INTEGER, -- Number of deaths\n  受伤人数 INTEGER, -- Number of injuries\n);\nCREATE TABLE 美国近几年校园枪击事件 (\n  年份 INTEGER PRIMARY KEY, -- Year\n  发生城市 DATETIME, -- The city is happening\n  受影响学生数量 VARCHAR(50), -- Number of students affected\n  伤亡人数 INTEGER, -- Casualties\n  枪击者年龄 INTEGER, -- Age of shooter\n  枪击者国籍 INTEGER, -- Nationality of the shooter\n);\nCREATE TABLE 韩国自杀的娱乐明星 (\n  姓名 VARCHAR(50) PRIMARY KEY, -- Name\n  性别 VARCHAR(50), -- Gender\n  年龄 VARCHAR(50), -- Age\n  死亡时间 INTEGER, -- Time of death\n  是否患抑郁症 DATETIME, -- Are you depressed?\n);\n-- 枪击事件.国家id can be joined with 国家.国家", "columns_en": {"词条id": "Phrase_id", "名称": "Name", "人口数量": "Number_of_population", "民用枪支数": "Number_of_guns_used_for_civilian_purposes", "军用枪支数": "Number_of_military_firearms", "每100人持有的民用枪支数": "Number_of_civilian_firearms_held_per_100_population", "年份": "Year", "国家id": "Country_id", "枪击事件数量": "Number_of_shootings", "死亡人数": "Number_of_deaths", "受伤人数": "Number_of_injuries", "发生城市": "The_city_is_happening", "受影响学生数量": "Number_of_students_affected", "伤亡人数": "Casualties", "枪击者年龄": "Age_of_shooter", "枪击者国籍": "Nationality_of_the_shooter", "姓名": "Name", "性别": "Gender", "年龄": "Age", "死亡时间": "Time_of_death", "是否患抑郁症": "Are_you_depressed?"}, "table_en": {"国家": "National", "枪击事件": "Shots", "美国近几年校园枪击事件": "School_shootings_in_the_United_States_in_recent_years", "韩国自杀的娱乐明星": "South_Korea's_suicide_entertainment_star"}}, "冬季奥运会": {"sqlite": "CREATE TABLE 冬季奥运会 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  届数 VARCHAR(50), -- Number of sessions\n  举办城市 INTEGER, -- Host city\n  举办国家 VARCHAR(50), -- Host country\n  时间 VARCHAR(50), -- Time\n  参赛国家数量 DATETIME, -- Number of countries participating\n  比赛项目数量 INTEGER, -- Number of competitions\n  参赛运动员数量 INTEGER, -- Number of athletes participating\n);\nCREATE TABLE 奥运会赞助商 (\n  赞助商名称 INTEGER PRIMARY KEY, -- Name of sponsor\n  奥运会id VARCHAR(50), -- Olympic id\n);\nCREATE TABLE 2018年奖牌榜 (\n  排名 INTEGER PRIMARY KEY, -- Rank\n  国家 INTEGER, -- National\n  金牌数 VARCHAR(50), -- Number of gold medals\n  银牌数 INTEGER, -- Number of silver medals\n  铜牌数 INTEGER, -- Number of bronze medals\n  奖牌总数 INTEGER, -- Total number of medals\n);\n-- 奥运会赞助商.奥运会id can be joined with 冬季奥运会.冬季奥运会", "columns_en": {"词条id": "Phrase_id", "名称": "Name", "届数": "Number_of_sessions", "举办城市": "Host_city", "举办国家": "Host_country", "时间": "Time", "参赛国家数量": "Number_of_countries_participating", "比赛项目数量": "Number_of_competitions", "参赛运动员数量": "Number_of_athletes_participating", "赞助商名称": "Name_of_sponsor", "奥运会id": "Olympic_id", "排名": "Rank", "国家": "National", "金牌数": "Number_of_gold_medals", "银牌数": "Number_of_silver_medals", "铜牌数": "Number_of_bronze_medals", "奖牌总数": "Total_number_of_medals"}, "table_en": {"冬季奥运会": "Winter_Olympics", "奥运会赞助商": "Olympics_sponsors", "2018年奖牌榜": "The_2018_medals"}}, "中国戏剧": {"sqlite": "CREATE TABLE 戏剧 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  非遗级别 VARCHAR(50), -- Non-suffering level\n  发源地 VARCHAR(50), -- Origin\n  起源时间 VARCHAR(50), -- Time of origin\n);\nCREATE TABLE 戏剧分布城市 (\n  戏剧id VARCHAR(50) PRIMARY KEY, -- Dramaid\n  城市 INTEGER, -- Urban\n  受欢迎热度 VARCHAR(50), -- Welcomer Heat\n  戏迷数量 INTEGER, -- Number of fans\n  活动数量 INTEGER, -- Number of activities\n);\nCREATE TABLE 戏剧演出活动 (\n  活动名称 INTEGER PRIMARY KEY, -- Name of activity\n  戏剧id VARCHAR(50), -- Dramaid\n  城市 INTEGER, -- Urban\n  演出时间 VARCHAR(50), -- Show time\n  售出票数 DATETIME, -- Number of votes sold\n  最高票价 INTEGER, -- Highest fare\n  最低票价 INTEGER, -- Minimum fare\n);\n-- 戏剧分布城市.戏剧id can be joined with 戏剧.戏剧\n-- 戏剧演出活动.戏剧id can be joined with 戏剧.戏剧", "columns_en": {"词条id": "Phrase_id", "名称": "Name", "非遗级别": "Non-suffering_level", "发源地": "Origin", "起源时间": "Time_of_origin", "戏剧id": "Dramaid", "城市": "Urban", "受欢迎热度": "Welcomer_Heat", "戏迷数量": "Number_of_fans", "活动数量": "Number_of_activities", "活动名称": "Name_of_activity", "演出时间": "Show_time", "售出票数": "Number_of_votes_sold", "最高票价": "Highest_fare", "最低票价": "Minimum_fare"}, "table_en": {"戏剧": "Theatre", "戏剧分布城市": "Theatrical_distribution_of_cities", "戏剧演出活动": "Theatrical_performances"}}, "NBA奖项": {"sqlite": "CREATE TABLE 篮球运动员 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  中文名 INTEGER, -- Chinese Name\n  参加选秀年 VARCHAR(50), -- We're going to the audition year\n  是否状元 DATETIME, -- Whether or not to be a mound\n  获得球队 BINARY, -- Get the team\n  毕业院校 VARCHAR(50), -- Graduate schools\n);\nCREATE TABLE MVP记录 (\n  赛季 VARCHAR(50) PRIMARY KEY, -- Season\n  球员id INTEGER, -- Player id\n  国籍 INTEGER, -- Nationality\n  所属球队 VARCHAR(50), -- It's part of the team\n);\nCREATE TABLE 球队 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  中文队名 INTEGER, -- Chinese Team Name\n  赛区 VARCHAR(50), -- Chai District\n  所属联盟 VARCHAR(50), -- Union to which they belong\n  夺冠次数 VARCHAR(50), -- Number of crowns\n);\nCREATE TABLE NBA总冠军 (\n  赛季 INTEGER PRIMARY KEY, -- Season\n  球队id INTEGER, -- Team id\n  总教练 INTEGER, -- Chief coach\n);\n-- MVP记录.球员id can be joined with 篮球运动员.篮球运动员\n-- NBA总冠军.球队id can be joined with 球队.球队", "columns_en": {"词条id": "Phrase_id", "中文名": "Chinese_Name", "参加选秀年": "We're_going_to_the_audition_year", "是否状元": "Whether_or_not_to_be_a_mound", "获得球队": "Get_the_team", "毕业院校": "Graduate_schools", "赛季": "Season", "球员id": "Player_id", "国籍": "Nationality", "所属球队": "It's_part_of_the_team", "中文队名": "Chinese_Team_Name", "赛区": "Chai_District", "所属联盟": "Union_to_which_they_belong", "夺冠次数": "Number_of_crowns", "球队id": "Team_id", "总教练": "Chief_coach"}, "table_en": {"篮球运动员": "Basketball_player", "MVP记录": "MVP_Records", "球队": "Team", "NBA总冠军": "The_NBA_champion"}}, "植物经济价值": {"sqlite": "CREATE TABLE 植物 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  学名 INTEGER, -- Acupuncture\n  观赏价值 VARCHAR(50), -- Observing value\n  药用价值 BINARY, -- Value of medicines\n  实用价值 BINARY, -- Practical value\n);\nCREATE TABLE 最贵的植物 (\n  植物id BINARY PRIMARY KEY, -- Plant id\n  单株价值 INTEGER, -- Monochrome value\n  培养时间 INTEGER, -- Nurturing Time\n  数量 INTEGER, -- Number\n);\nCREATE TABLE 盆栽植物营收 (\n  植物id INTEGER PRIMARY KEY, -- Plant id\n  年份 INTEGER, -- Year\n  种植面积 DATETIME, -- Areas under cultivation\n  销售数量 INTEGER, -- Number of sales\n  销售金额 INTEGER, -- Amount of sale\n  出口金额 INTEGER, -- Amount of export\n);\nCREATE TABLE 中国沙漠 (\n  词条id INTEGER PRIMARY KEY, -- Phrase id\n  地区 VARCHAR(50), -- Region\n  沙漠面积 DATETIME, -- Desert area\n  沙化面积 INTEGER, -- Shading area\n);\nCREATE TABLE 沙漠植物 (\n  植物id INTEGER PRIMARY KEY, -- Plant id\n  沙漠id INTEGER, -- Desert id\n  种植面积 INTEGER, -- Areas under cultivation\n);\n-- 沙漠植物.植物id can be joined with 植物.植物\n-- 最贵的植物.植物id can be joined with 植物.植物\n-- 盆栽植物营收.植物id can be joined with 植物.植物\n-- 沙漠植物.沙漠id can be joined with 中国沙漠.中国沙漠", "columns_en": {"词条id": "Phrase_id", "学名": "Acupuncture", "观赏价值": "Observing_value", "药用价值": "Value_of_medicines", "实用价值": "Practical_value", "植物id": "Plant_id", "单株价值": "Monochrome_value", "培养时间": "Nurturing_Time", "数量": "Number", "年份": "Year", "种植面积": "Areas_under_cultivation", "销售数量": "Number_of_sales", "销售金额": "Amount_of_sale", "出口金额": "Amount_of_export", "地区": "Region", "沙漠面积": "Desert_area", "沙化面积": "Shading_area", "沙漠id": "Desert_id"}, "table_en": {"植物": "Plants", "最贵的植物": "The_most_expensive_plant", "盆栽植物营收": "Botanical_plant_collection", "中国沙漠": "China_Desert", "沙漠植物": "Desert_plants"}}, "X公司工资": {"sqlite": "CREATE TABLE 事业群 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  负责人 VARCHAR(50), -- Officer-in-Charge\n  员工数量 VARCHAR(50), -- Number of employees\n  目标营收 INTEGER, -- Target collection\n  成本支出 INTEGER, -- Cost expenditure\n);\nCREATE TABLE 部门 (\n  词条id INTEGER PRIMARY KEY, -- Phrase id\n  部门名称 INTEGER, -- Name of department\n  职责 VARCHAR(50), -- Duties\n  所属群id VARCHAR(50), -- %1 %1 %1 %1 %1 %1 %1 %1 %1 %1 %1 %1 %1 %1 %1 %1 %1 %1 %1 %1 %1 %1 %1 %1 %1 %1 %1 %1 %1 %1 %1 %1 %1 %1 %1 %1\n);\nCREATE TABLE 员工 (\n  词条id INTEGER PRIMARY KEY, -- Phrase id\n  姓名 INTEGER, -- Name\n  职称 VARCHAR(50), -- Functional title\n  薪资 VARCHAR(50), -- Salaries\n  年龄 INTEGER, -- Age\n  工龄 INTEGER, -- Length of service\n  所属部门id INTEGER, -- Department to which id\n);\nCREATE TABLE 部门人员 (\n  部门id INTEGER PRIMARY KEY, -- Sector id\n  年份 INTEGER, -- Year\n  员工数量 DATETIME, -- Number of employees\n  离职人数 INTEGER, -- Separations\n  招聘人数 INTEGER, -- Number of recruits\n);\n-- 员工.所属部门id can be joined with 部门.部门\n-- 部门人员.部门id can be joined with 部门.部门\n-- 部门.所属群id can be joined with 事业群.事业群", "columns_en": {"词条id": "Phrase_id", "名称": "Name", "负责人": "Officer-in-Charge", "员工数量": "Number_of_employees", "目标营收": "Target_collection", "成本支出": "Cost_expenditure", "部门名称": "Name_of_department", "职责": "Duties", "所属群id": "%1_%1_%1_%1_%1_%1_%1_%1_%1_%1_%1_%1_%1_%1_%1_%1_%1_%1_%1_%1_%1_%1_%1_%1_%1_%1_%1_%1_%1_%1_%1_%1_%1_%1_%1_%1", "姓名": "Name", "职称": "Functional_title", "薪资": "Salaries", "年龄": "Age", "工龄": "Length_of_service", "所属部门id": "Department_to_which_id", "部门id": "Sector_id", "年份": "Year", "离职人数": "Separations", "招聘人数": "Number_of_recruits"}, "table_en": {"事业群": "Professional_groups", "部门": "Sector", "员工": "Staff", "部门人员": "Departmental_personnel"}}, "中国卫视频道": {"sqlite": "CREATE TABLE 电视台 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  开播时间 VARCHAR(50), -- It's time to start\n  上线时间 DATETIME, -- Online time\n  隶属机构 DATETIME, -- Affiliated institutions\n);\nCREATE TABLE 电视剧 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  出品时间 VARCHAR(50), -- Time of delivery\n  出品公司 DATETIME, -- It's a product company\n  发行公司 VARCHAR(50), -- Issuer\n  首播平台id VARCHAR(50), -- Launch platform id\n);\nCREATE TABLE 电视剧收视 (\n  电视剧id INTEGER PRIMARY KEY, -- TV dramad\n  平台id INTEGER, -- Platformid\n  时间段 INTEGER, -- Period\n  收视率 VARCHAR(50), -- Rate of viewing\n);\n-- 电视剧.首播平台id can be joined with 电视台.电视台\n-- 电视剧收视.平台id can be joined with 电视台.电视台\n-- 电视剧收视.电视剧id can be joined with 电视剧.电视剧", "columns_en": {"词条id": "Phrase_id", "名称": "Name", "开播时间": "It's_time_to_start", "上线时间": "Online_time", "隶属机构": "Affiliated_institutions", "出品时间": "Time_of_delivery", "出品公司": "It's_a_product_company", "发行公司": "Issuer", "首播平台id": "Launch_platform_id", "电视剧id": "TV_dramad", "平台id": "Platformid", "时间段": "Period", "收视率": "Rate_of_viewing"}, "table_en": {"电视台": "Television", "电视剧": "A_TV_show", "电视剧收视": "The_TV_show's_on"}}, "国家与宗教": {"sqlite": "CREATE TABLE 国家 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  时区 VARCHAR(50), -- Organisation\n  国家象征 INTEGER, -- National symbols\n);\nCREATE TABLE 宗教 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  创始人物 VARCHAR(50), -- Founder\n  创始地点 VARCHAR(50), -- Founding location\n  宗教主张 VARCHAR(50), -- Religious claims\n  教徒比例 VARCHAR(50), -- Proportion of followers\n);\nCREATE TABLE 各国宗教 (\n  宗教id INTEGER PRIMARY KEY, -- Religion id\n  国家id INTEGER, -- Country id\n  信仰人口 INTEGER, -- Population of faith\n);\nCREATE TABLE 信教比例 (\n  月份 INTEGER PRIMARY KEY, -- Month\n  国家id DATETIME, -- Country id\n  比例 INTEGER, -- Percentage\n);\n-- 信教比例.国家id can be joined with 国家.国家\n-- 各国宗教.国家id can be joined with 国家.国家\n-- 各国宗教.宗教id can be joined with 宗教.宗教", "columns_en": {"词条id": "Phrase_id", "名称": "Name", "时区": "Organisation", "国家象征": "National_symbols", "创始人物": "Founder", "创始地点": "Founding_location", "宗教主张": "Religious_claims", "教徒比例": "Proportion_of_followers", "宗教id": "Religion_id", "国家id": "Country_id", "信仰人口": "Population_of_faith", "月份": "Month", "比例": "Percentage"}, "table_en": {"国家": "National", "宗教": "Religion", "各国宗教": "Religions_in_all_countries", "信教比例": "Religious_%"}}, "体育明星商业活动": {"sqlite": "CREATE TABLE 品牌 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  品牌名 INTEGER, -- Brand name\n  成立时间 VARCHAR(50), --  Other Organiser\n  经营范围 DATETIME, -- Scope of operation\n  年销量 VARCHAR(50), -- Annual sales\n);\nCREATE TABLE 体育明星 (\n  词条id INTEGER PRIMARY KEY, -- Phrase id\n  中文名 INTEGER, -- Chinese Name\n  国籍 VARCHAR(50), -- Nationality\n  创建品牌id VARCHAR(50), -- Create brandid\n);\nCREATE TABLE 运动员的代言 (\n  明星id INTEGER PRIMARY KEY, -- Starid\n  代言品牌id INTEGER, -- Propaganda id\n  年份 INTEGER, -- Year\n  代言费 DATETIME, -- Advocacy costs\n);\n-- 运动员的代言.代言品牌id can be joined with 品牌.品牌\n-- 运动员的代言.明星id can be joined with 体育明星.体育明星\n-- 体育明星.创建品牌id can be joined with 品牌.品牌", "columns_en": {"词条id": "Phrase_id", "品牌名": "Brand_name", "成立时间": "_Other_Organiser", "经营范围": "Scope_of_operation", "年销量": "Annual_sales", "中文名": "Chinese_Name", "国籍": "Nationality", "创建品牌id": "Create_brandid", "明星id": "Starid", "代言品牌id": "Propaganda_id", "年份": "Year", "代言费": "Advocacy_costs"}, "table_en": {"品牌": "Brand", "体育明星": "Sports_star", "运动员的代言": "The_voice_of_the_athletes"}}, "中国CBA": {"sqlite": "CREATE TABLE 篮球队 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  队名 INTEGER, -- Team name\n  所属地区 VARCHAR(50), -- Territory to which it belongs\n  成立时间 VARCHAR(50), --  Other Organiser\n  主场馆 DATETIME, -- Main premises\n  容纳人数 VARCHAR(50), -- Number of persons accommodated\n  主教练 INTEGER, -- Master Coach\n  赞助商家 VARCHAR(50), -- Sponsor\n);\nCREATE TABLE 篮球运动员 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  姓名 INTEGER, -- Name\n  国籍 VARCHAR(50), -- Nationality\n  民族 VARCHAR(50), -- Nationalities\n  出生地 VARCHAR(50), -- Place of birth\n  出生日期 VARCHAR(50), -- Date of birth\n  身高 DATETIME, -- Height\n  体重 INTEGER, -- body weight\n  所属球队id INTEGER, -- Part of the team  id\n  场上位置 INTEGER, -- Field position\n);\nCREATE TABLE 运动员赛事记录 (\n  球员id VARCHAR(50) PRIMARY KEY, -- Player id\n  赛事 INTEGER, -- The race\n  类别 VARCHAR(50), -- Category\n);\nCREATE TABLE CBA总冠军 (\n  赛季 VARCHAR(50) PRIMARY KEY, -- Season\n  冠军球队id INTEGER, -- ♪ The team of champions ♪ ♪ the team of champions ♪ ♪ the team of champions ♪ ♪ the team of champions ♪ ♪ ♪ the team of champions ♪ ♪ ♪ the team of champions ♪ ♪ ♪ the team of champions ♪ ♪ ♪ the team of champions ♪ ♪ ♪ the team of champions ♪ ♪ ♪ the team of champions ♪\n  亚军球队id INTEGER, -- Yakuza id\n);\nCREATE TABLE 最有价值球员 (\n  赛季 INTEGER PRIMARY KEY, -- Season\n  球员id INTEGER, -- Player id\n  球队id INTEGER, -- Team id\n);\n-- 运动员赛事记录.球员id can be joined with 篮球运动员.篮球运动员\n-- CBA总冠军.冠军球队id can be joined with 篮球队.篮球队\n-- 篮球运动员.所属球队id can be joined with 篮球队.篮球队\n-- CBA总冠军.亚军球队id can be joined with 篮球队.篮球队\n-- 最有价值球员.球员id can be joined with 篮球运动员.篮球运动员\n-- 最有价值球员.球队id can be joined with 篮球队.篮球队", "columns_en": {"词条id": "Phrase_id", "队名": "Team_name", "所属地区": "Territory_to_which_it_belongs", "成立时间": "_Other_Organiser", "主场馆": "Main_premises", "容纳人数": "Number_of_persons_accommodated", "主教练": "Master_Coach", "赞助商家": "Sponsor", "姓名": "Name", "国籍": "Nationality", "民族": "Nationalities", "出生地": "Place_of_birth", "出生日期": "Date_of_birth", "身高": "Height", "体重": "body_weight", "所属球队id": "Part_of_the_team__id", "场上位置": "Field_position", "球员id": "Player_id", "赛事": "The_race", "类别": "Category", "赛季": "Season", "冠军球队id": "♪_The_team_of_champions_♪_♪_the_team_of_champions_♪_♪_the_team_of_champions_♪_♪_the_team_of_champions_♪_♪_♪_the_team_of_champions_♪_♪_♪_the_team_of_champions_♪_♪_♪_the_team_of_champions_♪_♪_♪_the_team_of_champions_♪_♪_♪_the_team_of_champions_♪_♪_♪_the_team_of_champions_♪", "亚军球队id": "Yakuza_id", "球队id": "Team_id"}, "table_en": {"篮球队": "Basketball_team", "篮球运动员": "Basketball_player", "运动员赛事记录": "Athlete_record", "CBA总冠军": "CBA_Champion-in-Chief", "最有价值球员": "The_most_valuable_player"}}, "笔记本电脑": {"sqlite": "CREATE TABLE 笔记本公司 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  创始人 VARCHAR(50), -- Founder\n  所属国家 VARCHAR(50), -- Country of nationality\n  世界500强排名 VARCHAR(50), -- The world's top 500\n);\nCREATE TABLE 笔记本产品 (\n  词条id INTEGER PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  代言人 VARCHAR(50), -- Advocate\n  公司id VARCHAR(50), -- Companyid\n);\nCREATE TABLE 笔记本型号系列 (\n  词条id INTEGER PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  屏幕尺寸 VARCHAR(50), -- Screen Size\n  分辨率 INTEGER, -- Resolution\n  内存容量 INTEGER, -- Memory Capacity\n  硬盘容量 INTEGER, -- Hard Disk Capacity\n  CPU主频 INTEGER, -- CPU Main Frequency\n  CPU型号 INTEGER, -- CPU model\n  售价 VARCHAR(50), -- Price of sale\n  上市时间 INTEGER, -- Time to go to the market\n  产品id DATETIME, -- Product id\n);\nCREATE TABLE 笔记本型号平台售卖 (\n  型号id INTEGER PRIMARY KEY, -- Model id\n  平台 INTEGER, -- Platform\n  售卖量 VARCHAR(50), -- Sales\n  评分 INTEGER, -- Rating\n  最好评价 INTEGER, -- Best evaluation\n  最差评价 DATETIME, -- Worst evaluation\n);\n-- 笔记本型号平台售卖.型号id can be joined with 笔记本型号系列.笔记本型号系列\n-- 笔记本型号系列.产品id can be joined with 笔记本产品.笔记本产品\n-- 笔记本产品.公司id can be joined with 笔记本公司.笔记本公司", "columns_en": {"词条id": "Phrase_id", "名称": "Name", "创始人": "Founder", "所属国家": "Country_of_nationality", "世界500强排名": "The_world's_top_500", "代言人": "Advocate", "公司id": "Companyid", "屏幕尺寸": "Screen_Size", "分辨率": "Resolution", "内存容量": "Memory_Capacity", "硬盘容量": "Hard_Disk_Capacity", "CPU主频": "CPU_Main_Frequency", "CPU型号": "CPU_model", "售价": "Price_of_sale", "上市时间": "Time_to_go_to_the_market", "产品id": "Product_id", "型号id": "Model_id", "平台": "Platform", "售卖量": "Sales", "评分": "Rating", "最好评价": "Best_evaluation", "最差评价": "Worst_evaluation"}, "table_en": {"笔记本公司": "Notebooks", "笔记本产品": "Notebook_products", "笔记本型号系列": "Notebook_Model_Series", "笔记本型号平台售卖": "It's_a_laptop-type_platform_for_sale"}}, "打车软件": {"sqlite": "CREATE TABLE 打车APP (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  app名称 INTEGER, -- App Name\n  所属公司 VARCHAR(50), -- Company to which it belongs\n  上线时间 VARCHAR(50), -- Online time\n  覆盖城市数 DATETIME, -- Number of cities covered\n  服务用户数量 INTEGER, -- Number of service users\n);\nCREATE TABLE 打车方式 (\n  词条id INTEGER PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  理念 VARCHAR(50), -- Ideas\n  每公里价格 VARCHAR(50), -- Price per kilometre\n);\nCREATE TABLE 各打车APP支持的方式 (\n  appid INTEGER PRIMARY KEY, -- Appid\n  方式id INTEGER, -- Modeid\n  车数量 INTEGER, -- Number of vehicles\n  每日打车单数 INTEGER, -- Number of taxi calls per day\n  每日营收 INTEGER, -- Daily collection\n  市场份额 INTEGER, -- Market share\n);\nCREATE TABLE 打车软件开通城市 (\n  appid INTEGER PRIMARY KEY, -- Appid\n  城市 INTEGER, -- Urban\n  开通时间 VARCHAR(50), -- Start time\n  占所在城市份额 DATETIME, -- Share of cities\n);\nCREATE TABLE 软件对租车的支持 (\n  appid INTEGER PRIMARY KEY, -- Appid\n  城市 INTEGER, -- Urban\n  是否支持租车 VARCHAR(50), -- Support for rental of vehicles\n  是否支持异地还车 BINARY, -- Do you support the return of vehicles?\n);\n-- 各打车APP支持的方式.方式id can be joined with 打车方式.打车方式", "columns_en": {"词条id": "Phrase_id", "app名称": "App_Name", "所属公司": "Company_to_which_it_belongs", "上线时间": "Online_time", "覆盖城市数": "Number_of_cities_covered", "服务用户数量": "Number_of_service_users", "名称": "Name", "理念": "Ideas", "每公里价格": "Price_per_kilometre", "appid": "Appid", "方式id": "Modeid", "车数量": "Number_of_vehicles", "每日打车单数": "Number_of_taxi_calls_per_day", "每日营收": "Daily_collection", "市场份额": "Market_share", "城市": "Urban", "开通时间": "Start_time", "占所在城市份额": "Share_of_cities", "是否支持租车": "Support_for_rental_of_vehicles", "是否支持异地还车": "Do_you_support_the_return_of_vehicles?"}, "table_en": {"打车APP": "Taxi_APP", "打车方式": "I'll_take_a_cab", "各打车APP支持的方式": "The_way_the_cars_are_supported_by_the_APP", "打车软件开通城市": "Car-drive_software_to_open_the_city", "软件对租车的支持": "Support_for_rental_of_vehicles_by_software"}}, "奥斯卡金像奖": {"sqlite": "CREATE TABLE 电影作品 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  影片名 INTEGER, -- Video Name\n  导演 VARCHAR(50), -- Director\n  国家 VARCHAR(50), -- National\n  提名次数 VARCHAR(50), -- Number of nominations\n  获奖次数 INTEGER, -- Number of awards\n);\nCREATE TABLE 获奖国家名单 (\n  年份 INTEGER PRIMARY KEY, -- Year\n  影片拍摄国家 INTEGER, -- The video shoots the country\n  获奖次数 VARCHAR(50), -- Number of awards\n);\nCREATE TABLE 各演员获奖次数 (\n  姓名 INTEGER PRIMARY KEY, -- Name\n  奖项 VARCHAR(50), -- Awards\n  提名次数 VARCHAR(50), -- Number of nominations\n  获奖次数 INTEGER, -- Number of awards\n);\nCREATE TABLE 历届帝后影后名单 (\n  年份 INTEGER PRIMARY KEY, -- Year\n  帝后姓名 DATETIME, -- The Emperor's name\n  帝后来自作品id VARCHAR(50), -- ♪ The Emperor came from work id ♪\n  影后姓名 INTEGER, -- Post-record name\n  影后来自作品id VARCHAR(50), -- It's from the film id\n);\n-- 历届帝后影后名单.影后来自作品id can be joined with 电影作品.电影作品\n-- 历届帝后影后名单.帝后来自作品id can be joined with 电影作品.电影作品", "columns_en": {"词条id": "Phrase_id", "影片名": "Video_Name", "导演": "Director", "国家": "National", "提名次数": "Number_of_nominations", "获奖次数": "Number_of_awards", "年份": "Year", "影片拍摄国家": "The_video_shoots_the_country", "姓名": "Name", "奖项": "Awards", "帝后姓名": "The_Emperor's_name", "帝后来自作品id": "♪_The_Emperor_came_from_work_id_♪", "影后姓名": "Post-record_name", "影后来自作品id": "It's_from_the_film_id"}, "table_en": {"电影作品": "Filmworks", "获奖国家名单": "List_of_winning_countries", "各演员获奖次数": "Number_of_awards_by_actor", "历届帝后影后名单": "The_names_of_all_the_world's_backs_and_backs"}}, "游泳比赛": {"sqlite": "CREATE TABLE 游泳泳姿 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  发明时间 VARCHAR(50), -- Invent time\n  加入奥运会时间 DATETIME, -- Join the Olympics\n);\nCREATE TABLE 各泳姿参赛项目 (\n  泳姿id DATETIME PRIMARY KEY, -- Swimming liked\n  50米 INTEGER, -- 50 meters\n  100米 BINARY, -- 100 meters\n  200米 BINARY, -- 200 meters\n  400米 BINARY, -- 400 meters\n  800米 BINARY, -- 800 meters\n  1500米 BINARY, -- 1500 meters\n  5000米 BINARY, -- 5 000 meters\n  10000米 BINARY, -- 10000 meters\n  赛事 BINARY, -- The race\n);\nCREATE TABLE 泳坛名将 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  姓名 INTEGER, -- Name\n  性别 VARCHAR(50), -- Gender\n  国籍 VARCHAR(50), -- Nationality\n  身高 VARCHAR(50), -- Height\n  体重 INTEGER, -- body weight\n  专业特点id INTEGER, -- Professional characteristicsd\n);\nCREATE TABLE 赛事记录 (\n  泳姿id INTEGER PRIMARY KEY, -- Swimming liked\n  长度 INTEGER, -- Length\n  赛事类型 INTEGER, -- Type of event\n  运动员id VARCHAR(50), -- Athlete id\n  用时 INTEGER, -- Time\n  破记录年份 INTEGER, -- Recorded year\n);\n-- 各泳姿参赛项目.泳姿id can be joined with 游泳泳姿.游泳泳姿\n-- 泳坛名将.专业特点id can be joined with 游泳泳姿.游泳泳姿\n-- 赛事记录.泳姿id can be joined with 游泳泳姿.游泳泳姿\n-- 赛事记录.运动员id can be joined with 泳坛名将.泳坛名将", "columns_en": {"词条id": "Phrase_id", "名称": "Name", "发明时间": "Invent_time", "加入奥运会时间": "Join_the_Olympics", "泳姿id": "Swimming_liked", "50米": "50_meters", "100米": "100_meters", "200米": "200_meters", "400米": "400_meters", "800米": "800_meters", "1500米": "1500_meters", "5000米": "5_000_meters", "10000米": "10000_meters", "赛事": "The_race", "姓名": "Name", "性别": "Gender", "国籍": "Nationality", "身高": "Height", "体重": "body_weight", "专业特点id": "Professional_characteristicsd", "长度": "Length", "赛事类型": "Type_of_event", "运动员id": "Athlete_id", "用时": "Time", "破记录年份": "Recorded_year"}, "table_en": {"游泳泳姿": "Swimming", "各泳姿参赛项目": "We're_going_to_the_swimming_tables", "泳坛名将": "The_name_of_the_swimmers", "赛事记录": "The_track_record"}}, "赛事运动项目": {"sqlite": "CREATE TABLE 运动项目 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  起源国家 VARCHAR(50), -- State of origin\n  比赛形式 VARCHAR(50), -- Form of the game\n  比赛人数 VARCHAR(50), -- Number of competitions\n  加入奥运会年份 INTEGER, -- Year of membership in the Olympic Games\n);\nCREATE TABLE 项目流行国家 (\n  项目id DATETIME PRIMARY KEY, -- Item id\n  国家 INTEGER, -- National\n  所获金牌总数 VARCHAR(50), -- Total gold medals received\n  所获奖牌总数 INTEGER, -- Total number of medals won\n);\nCREATE TABLE 运动项目奖牌数 (\n  项目id INTEGER PRIMARY KEY, -- Item id\n  赛事类型 INTEGER, -- Type of event\n  小项目总数 VARCHAR(50), -- Total number of small projects\n  奖牌总数 INTEGER, -- Total number of medals\n);\n-- 运动项目奖牌数.项目id can be joined with 运动项目.运动项目\n-- 项目流行国家.项目id can be joined with 运动项目.运动项目", "columns_en": {"词条id": "Phrase_id", "名称": "Name", "起源国家": "State_of_origin", "比赛形式": "Form_of_the_game", "比赛人数": "Number_of_competitions", "加入奥运会年份": "Year_of_membership_in_the_Olympic_Games", "项目id": "Item_id", "国家": "National", "所获金牌总数": "Total_gold_medals_received", "所获奖牌总数": "Total_number_of_medals_won", "赛事类型": "Type_of_event", "小项目总数": "Total_number_of_small_projects", "奖牌总数": "Total_number_of_medals"}, "table_en": {"运动项目": "Sports", "项目流行国家": "Project_prevalence_countries", "运动项目奖牌数": "Number_of_sports_medals"}}, "房屋中介软件": {"sqlite": "CREATE TABLE 北京小区 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  所属区域 VARCHAR(50), -- Organisation\n  楼栋数 VARCHAR(50), -- Number of buildings\n  户数 INTEGER, -- Households\n  周边小学数量 INTEGER, -- Number of primary schools in the vicinity\n  周边超市数量 INTEGER, -- Number of supermarkets around the perimeter\n  周边医院数量 INTEGER, -- Number of hospitals in the vicinity\n);\nCREATE TABLE 小区各月成交量 (\n  小区id INTEGER PRIMARY KEY, -- Regionid\n  月份 INTEGER, -- Month\n  成交量 VARCHAR(50), -- Deal\n  成交量同比增长 INTEGER, -- Increase in the number of transactions on a par\n  成交均价 INTEGER, -- It's a deal\n  成交价同比增长 INTEGER, -- It's a match-on-the-moment increase\n);\nCREATE TABLE 成交房屋 (\n  房屋编号id INTEGER PRIMARY KEY, -- House ID id\n  建筑面积 INTEGER, -- Construction area\n  使用面积 INTEGER, -- Area of use\n  卧室数量 INTEGER, -- Number of bedrooms\n  厅数量 INTEGER, -- Number of offices\n  总价 INTEGER, -- Total price\n  单价 INTEGER, -- Unit price\n  所属小区id INTEGER, --  Other Organiserid\n);\nCREATE TABLE 房屋中介 (\n  词条id INTEGER PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  门店数量 VARCHAR(50), -- Number of shops\n  房屋经纪人数量 INTEGER, -- Number of housing agents\n  覆盖城市数量 INTEGER, -- Number of cities covered\n  购房成交总量 INTEGER, -- Total amount of home purchase\n  租房成交总量 INTEGER, -- Total number of rentals paid\n  成交排名 INTEGER, -- It's a deal\n  评分 INTEGER, -- Rating\n);\nCREATE TABLE 中介成交 (\n  中介id INTEGER PRIMARY KEY, -- Brokerid\n  小区id INTEGER, -- Regionid\n  年份 INTEGER, -- Year\n  购房成交量 DATETIME, -- We've got a deal on the house\n  成交量占比 INTEGER, -- Contributory as a percentage\n);\n-- 中介成交.小区id can be joined with 北京小区.北京小区\n-- 中介成交.中介id can be joined with 房屋中介.房屋中介\n-- 小区各月成交量.小区id can be joined with 北京小区.北京小区\n-- 成交房屋.所属小区id can be joined with 北京小区.北京小区", "columns_en": {"词条id": "Phrase_id", "名称": "Name", "所属区域": "Organisation", "楼栋数": "Number_of_buildings", "户数": "Households", "周边小学数量": "Number_of_primary_schools_in_the_vicinity", "周边超市数量": "Number_of_supermarkets_around_the_perimeter", "周边医院数量": "Number_of_hospitals_in_the_vicinity", "小区id": "Regionid", "月份": "Month", "成交量": "Deal", "成交量同比增长": "Increase_in_the_number_of_transactions_on_a_par", "成交均价": "It's_a_deal", "成交价同比增长": "It's_a_match-on-the-moment_increase", "房屋编号id": "House_ID_id", "建筑面积": "Construction_area", "使用面积": "Area_of_use", "卧室数量": "Number_of_bedrooms", "厅数量": "Number_of_offices", "总价": "Total_price", "单价": "Unit_price", "所属小区id": "_Other_Organiserid", "门店数量": "Number_of_shops", "房屋经纪人数量": "Number_of_housing_agents", "覆盖城市数量": "Number_of_cities_covered", "购房成交总量": "Total_amount_of_home_purchase", "租房成交总量": "Total_number_of_rentals_paid", "成交排名": "It's_a_deal", "评分": "Rating", "中介id": "Brokerid", "年份": "Year", "购房成交量": "We've_got_a_deal_on_the_house", "成交量占比": "Contributory_as_a_percentage"}, "table_en": {"北京小区": "Beijing_Region", "小区各月成交量": "It's_a_month-by-month_deal", "成交房屋": "Deal", "房屋中介": "Housing_intermediaries", "中介成交": "Intermediary_deal"}}, "古代人物": {"sqlite": "CREATE TABLE 皇帝 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  姓名 INTEGER, -- Name\n  年号 VARCHAR(50), -- Year\n  所处朝代 VARCHAR(50), -- Where you're headed\n  子女数量 VARCHAR(50), -- Number of children\n  皇后数量 INTEGER, -- Number of Queens\n  妃子数量 INTEGER, -- Number of Princesses\n);\nCREATE TABLE 皇后和妃子 (\n  词条id INTEGER PRIMARY KEY, -- Phrase id\n  谥号 INTEGER, -- Quill\n  夫君id VARCHAR(50), -- Master id\n  年龄 INTEGER, -- Age\n  皇子数量 INTEGER, -- Number of Crown Princes\n  公主数量 INTEGER, -- Number of Princesses\n);\nCREATE TABLE 皇帝皇后合葬 (\n  皇帝id INTEGER PRIMARY KEY, -- Emperor id\n  皇后id INTEGER, -- Queen id\n  葬地 INTEGER, -- The place of burial\n);\nCREATE TABLE 皇帝皇后影视形象 (\n  作品 VARCHAR(50) PRIMARY KEY, -- Works\n  皇帝id VARCHAR(50), -- Emperor id\n  皇帝饰演者 INTEGER, -- The emperor's decorator\n  皇后id VARCHAR(50), -- Queen id\n  皇后饰演者 INTEGER, -- Queen's Decorator\n);\n-- 皇帝皇后合葬.皇帝id can be joined with 皇帝.皇帝\n-- 皇帝皇后合葬.皇后id can be joined with 皇后和妃子.皇后和妃子\n-- 皇帝皇后影视形象.皇后id can be joined with 皇后和妃子.皇后和妃子\n-- 皇后和妃子.夫君id can be joined with 皇帝.皇帝\n-- 皇帝皇后影视形象.皇帝id can be joined with 皇帝.皇帝", "columns_en": {"词条id": "Phrase_id", "姓名": "Name", "年号": "Year", "所处朝代": "Where_you're_headed", "子女数量": "Number_of_children", "皇后数量": "Number_of_Queens", "妃子数量": "Number_of_Princesses", "谥号": "Quill", "夫君id": "Master_id", "年龄": "Age", "皇子数量": "Number_of_Crown_Princes", "公主数量": "Number_of_Princesses", "皇帝id": "Emperor_id", "皇后id": "Queen_id", "葬地": "The_place_of_burial", "作品": "Works", "皇帝饰演者": "The_emperor's_decorator", "皇后饰演者": "Queen's_Decorator"}, "table_en": {"皇帝": "Emperor", "皇后和妃子": "The_queen_and_the_princess", "皇帝皇后合葬": "The_Queen_of_the_Emperor_is_buried_together", "皇帝皇后影视形象": "The_image_of_the_Emperor's_Queen"}}, "国庆假期旅游数据": {"sqlite": "CREATE TABLE 旅游消费 (\n  消费段 VARCHAR(50) PRIMARY KEY, -- Consumption segment\n  占比 INTEGER, -- Percentage\n);\nCREATE TABLE 出游次数 (\n  出游数量段 INTEGER PRIMARY KEY, -- Outbound Quarters\n  占比 INTEGER, -- Percentage\n);\nCREATE TABLE 旅游类型 (\n  景点类型 INTEGER PRIMARY KEY, -- Site Type\n  占比 VARCHAR(50), -- Percentage\n);\nCREATE TABLE 出行交通方式 (\n  出行方式 INTEGER PRIMARY KEY, -- Travel mode\n  占比 VARCHAR(50), -- Percentage\n  同比增长 INTEGER, -- Year-on-year growth\n);\nCREATE TABLE 旅游方式 (\n  旅游方式 INTEGER PRIMARY KEY, -- Tourism\n  占比 VARCHAR(50), -- Percentage\n);\nCREATE TABLE 各省旅游收入排名 (\n  省份 INTEGER PRIMARY KEY, -- Province\n  游客(万人次) VARCHAR(50), -- Tourists (millions)\n  旅游收入(亿元) INTEGER, -- Tourism income (millions of yuan)\n  排名 INTEGER, -- Rank\n);\n", "columns_en": {"消费段": "Consumption_segment", "占比": "Percentage", "出游数量段": "Outbound_Quarters", "景点类型": "Site_Type", "出行方式": "Travel_mode", "同比增长": "Year-on-year_growth", "旅游方式": "Tourism", "省份": "Province", "游客(万人次)": "Tourists_(millions)", "旅游收入(亿元)": "Tourism_income_(millions_of_yuan)", "排名": "Rank"}, "table_en": {"旅游消费": "Tourism_consumption", "出游次数": "Number_of_trips", "旅游类型": "Type_of_tourism", "出行交通方式": "Routes_of_travel", "旅游方式": "Tourism", "各省旅游收入排名": "Tourism_revenue_rankings_by_province"}}, "人物传记": {"sqlite": "CREATE TABLE 名人 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  姓名 INTEGER, -- Name\n  国籍 VARCHAR(50), -- Nationality\n  职业 VARCHAR(50), -- Occupation\n  主要成就 VARCHAR(50), -- Main achievements\n);\nCREATE TABLE 传记 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  书名 INTEGER, -- Title\n  作者 VARCHAR(50), -- Author\n  页数 VARCHAR(50), -- Pages\n  出版社 INTEGER, -- Publications\n  出版时间 VARCHAR(50), -- Publication time\n);\nCREATE TABLE 名人传记 (\n  传记id DATETIME PRIMARY KEY, -- Biographical id\n  人物id INTEGER, -- Personal id\n  记录时间 INTEGER, -- Record time\n);\n-- 名人传记.人物id can be joined with 名人.名人\n-- 名人传记.传记id can be joined with 传记.传记", "columns_en": {"词条id": "Phrase_id", "姓名": "Name", "国籍": "Nationality", "职业": "Occupation", "主要成就": "Main_achievements", "书名": "Title", "作者": "Author", "页数": "Pages", "出版社": "Publications", "出版时间": "Publication_time", "传记id": "Biographical_id", "人物id": "Personal_id", "记录时间": "Record_time"}, "table_en": {"名人": "Celebrities", "传记": "Biography", "名人传记": "Famous_biography"}}, "综艺节目": {"sqlite": "CREATE TABLE 综艺节目 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  节目名称 INTEGER, -- Program Name\n  系列名 VARCHAR(50), -- Series\n  导演 VARCHAR(50), -- Director\n  首播时间 VARCHAR(50), -- Launch time\n  播出频道 DATETIME, -- Channels\n  播出时间 VARCHAR(50), -- Airtime\n  期数 DATETIME, -- Term\n  冠名商 INTEGER, -- Credential\n);\nCREATE TABLE 明星 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  姓名 INTEGER, -- Name\n  民族 VARCHAR(50), -- Nationalities\n  身高 VARCHAR(50), -- Height\n  体重 INTEGER, -- body weight\n  出生地 INTEGER, -- Place of birth\n  年龄 VARCHAR(50), -- Age\n  职业 INTEGER, -- Occupation\n);\nCREATE TABLE 收视率 (\n  节目id VARCHAR(50) PRIMARY KEY, -- Programid\n  在线平台 INTEGER, -- Online platform\n  播放数 VARCHAR(50), -- Play\n  收视率 INTEGER, -- Rate of viewing\n  收视份额 INTEGER, -- Share of ratings\n);\nCREATE TABLE 接档节目 (\n  节目id INTEGER PRIMARY KEY, -- Programid\n  接档节目id INTEGER, -- Track id\n  被接档节目id INTEGER, -- ♪ Become a part of the program ♪ ♪ I'm a part of the show ♪ ♪ I'm a part of the show ♪ ♪ I'm a part of the show ♪ ♪ I'm a part of the show ♪ ♪ I'm a part of the show ♪ ♪ I'm a part of the show ♪ ♪ I'm a part of the show ♪ ♪ I'm a part of the show ♪\n);\nCREATE TABLE 综艺节目嘉宾 (\n  明星id INTEGER PRIMARY KEY, -- Starid\n  节目id INTEGER, -- Programid\n  身份 INTEGER, -- Identity\n  出场期数 VARCHAR(50), -- Number of trips\n);\n-- 接档节目.被接档节目id can be joined with 综艺节目.综艺节目\n-- 收视率.节目id can be joined with 综艺节目.综艺节目\n-- 综艺节目嘉宾.明星id can be joined with 明星.明星\n-- 接档节目.节目id can be joined with 综艺节目.综艺节目\n-- 接档节目.接档节目id can be joined with 综艺节目.综艺节目\n-- 综艺节目嘉宾.节目id can be joined with 综艺节目.综艺节目", "columns_en": {"词条id": "Phrase_id", "节目名称": "Program_Name", "系列名": "Series", "导演": "Director", "首播时间": "Launch_time", "播出频道": "Channels", "播出时间": "Airtime", "期数": "Term", "冠名商": "Credential", "姓名": "Name", "民族": "Nationalities", "身高": "Height", "体重": "body_weight", "出生地": "Place_of_birth", "年龄": "Age", "职业": "Occupation", "节目id": "Programid", "在线平台": "Online_platform", "播放数": "Play", "收视率": "Rate_of_viewing", "收视份额": "Share_of_ratings", "接档节目id": "Track_id", "被接档节目id": "♪_Become_a_part_of_the_program_♪_♪_I'm_a_part_of_the_show_♪_♪_I'm_a_part_of_the_show_♪_♪_I'm_a_part_of_the_show_♪_♪_I'm_a_part_of_the_show_♪_♪_I'm_a_part_of_the_show_♪_♪_I'm_a_part_of_the_show_♪_♪_I'm_a_part_of_the_show_♪_♪_I'm_a_part_of_the_show_♪", "明星id": "Starid", "身份": "Identity", "出场期数": "Number_of_trips"}, "table_en": {"综艺节目": "Phenomenal_programmes", "明星": "Star", "收视率": "Rate_of_viewing", "接档节目": "\"Accompanied_program_\"", "综艺节目嘉宾": "Guests_for_the_ecclesiastical_show"}}, "中国城市体育活动": {"sqlite": "CREATE TABLE 城市 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  所属省份 VARCHAR(50), -- Provinces to which they belong\n  占地面积 VARCHAR(50), -- Area of land area\n  体育馆数量 INTEGER, -- Number of gymnasiums\n);\nCREATE TABLE 运动会 (\n  举办城市id INTEGER PRIMARY KEY, -- Organization of city id\n  运动会类型 INTEGER, -- Sports type\n  届数 VARCHAR(50), -- Number of sessions\n  年份 INTEGER, -- Year\n  参赛运动员数量 DATETIME, -- Number of athletes participating\n  项目数量 INTEGER, -- Number of projects\n  金牌数量 INTEGER, -- Number of gold medals\n  奖牌数量 INTEGER, -- Number of medals\n);\n-- 运动会.举办城市id can be joined with 城市.城市", "columns_en": {"词条id": "Phrase_id", "名称": "Name", "所属省份": "Provinces_to_which_they_belong", "占地面积": "Area_of_land_area", "体育馆数量": "Number_of_gymnasiums", "举办城市id": "Organization_of_city_id", "运动会类型": "Sports_type", "届数": "Number_of_sessions", "年份": "Year", "参赛运动员数量": "Number_of_athletes_participating", "项目数量": "Number_of_projects", "金牌数量": "Number_of_gold_medals", "奖牌数量": "Number_of_medals"}, "table_en": {"城市": "Urban", "运动会": "Sports"}}, "北京小学": {"sqlite": "CREATE TABLE 北京学校 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  所属地区 VARCHAR(50), -- Territory to which it belongs\n  创办时间 VARCHAR(50), --  Other Organiser\n  类别 DATETIME, -- Category\n  学校人数 VARCHAR(50), -- Number of schools\n  教职工人数 INTEGER, -- Number of teaching staff\n  教学班数量 INTEGER, -- Number of classes\n);\nCREATE TABLE 小升初升学率 (\n  年份 INTEGER PRIMARY KEY, -- Year\n  学校id DATETIME, -- School id\n  毕业人数 INTEGER, -- Number of graduates\n  重点中学升学率 INTEGER, -- Transition rates in priority secondary schools\n  top10中学升学率 INTEGER, -- Top10 Transition Rate to Secondary School\n);\nCREATE TABLE 教师 (\n  词条id INTEGER PRIMARY KEY, -- Phrase id\n  姓名 INTEGER, -- Name\n  职称 VARCHAR(50), -- Functional title\n  任教学校id VARCHAR(50), -- As-Sa-Sa-Sa-Sa-Sa-Sa-Sa-Sa-Sa-Sa-Sa-Sa-Sa-Sa-Sa-Sa-Sa-Sa-Sa-Sa-Sa-Sa-Sa-Sa-Sa-Sa-Sa-Sa-Sa-Sa-Sa-Sa-Sa-Sa-Sa-Sa-Sa-Sa-Sa\n);\nCREATE TABLE 分校 (\n  分校名称 INTEGER PRIMARY KEY, -- Name of branch\n  所属城市 VARCHAR(50), -- City to which you belong\n  创办时间 VARCHAR(50), --  Other Organiser\n  学校id DATETIME, -- School id\n);\n-- 教师.任教学校id can be joined with 北京学校.北京学校\n-- 小升初升学率.学校id can be joined with 北京学校.北京学校\n-- 分校.学校id can be joined with 北京学校.北京学校", "columns_en": {"词条id": "Phrase_id", "名称": "Name", "所属地区": "Territory_to_which_it_belongs", "创办时间": "_Other_Organiser", "类别": "Category", "学校人数": "Number_of_schools", "教职工人数": "Number_of_teaching_staff", "教学班数量": "Number_of_classes", "年份": "Year", "学校id": "School_id", "毕业人数": "Number_of_graduates", "重点中学升学率": "Transition_rates_in_priority_secondary_schools", "top10中学升学率": "Top10_Transition_Rate_to_Secondary_School", "姓名": "Name", "职称": "Functional_title", "任教学校id": "As-Sa-Sa-Sa-Sa-Sa-Sa-Sa-Sa-Sa-Sa-Sa-Sa-Sa-Sa-Sa-Sa-Sa-Sa-Sa-Sa-Sa-Sa-Sa-Sa-Sa-Sa-Sa-Sa-Sa-Sa-Sa-Sa-Sa-Sa-Sa-Sa-Sa-Sa-Sa", "分校名称": "Name_of_branch", "所属城市": "City_to_which_you_belong"}, "table_en": {"北京学校": "Beijing_School", "小升初升学率": "Rate_of_promotion_to_primary_school", "教师": "Teachers", "分校": "Subdirectorate"}}, "在线学习平台": {"sqlite": "CREATE TABLE 学校 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  类型 VARCHAR(50), -- Type\n  国家 VARCHAR(50), -- National\n  世界排名 VARCHAR(50), -- World ranking\n);\nCREATE TABLE 课程 (\n  词条id INTEGER PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  所属专业 VARCHAR(50), -- Professional affiliation\n  适合学者类型 VARCHAR(50), -- Suitable for type of scholar\n);\nCREATE TABLE 平台 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  课程数量 VARCHAR(50), -- Number of courses\n  合作学校数量 INTEGER, -- Number of co-operative schools\n  是否免费 INTEGER, -- Is it free?\n);\nCREATE TABLE 平台合作学校 (\n  平台id BINARY PRIMARY KEY, -- Platformid\n  学校id INTEGER, -- School id\n  合作课程数量 INTEGER, -- Number of cooperative courses\n);\nCREATE TABLE 学校的开源课程 (\n  词条id INTEGER PRIMARY KEY, -- Phrase id\n  开源课程名称 INTEGER, -- Open Source Course Name\n  课程id VARCHAR(50), -- Course id\n  学校id INTEGER, -- School id\n  课时 INTEGER, -- Classes\n  主讲教师 INTEGER, -- Teacher\n);\nCREATE TABLE 平台课程 (\n  开源课程id VARCHAR(50) PRIMARY KEY, -- Open source courseid\n  平台id INTEGER, -- Platformid\n  是否直播 INTEGER, -- Is it live or not?\n  课程时长 BINARY, -- Length of the course\n  价格 INTEGER, -- Prices\n);\n-- 学校的开源课程.课程id can be joined with 课程.课程\n-- 学校的开源课程.学校id can be joined with 学校.学校\n-- 平台课程.开源课程id can be joined with 学校的开源课程.学校的开源课程\n-- 平台课程.平台id can be joined with 平台.平台\n-- 平台合作学校.学校id can be joined with 学校.学校\n-- 平台合作学校.平台id can be joined with 平台.平台", "columns_en": {"词条id": "Phrase_id", "名称": "Name", "类型": "Type", "国家": "National", "世界排名": "World_ranking", "所属专业": "Professional_affiliation", "适合学者类型": "Suitable_for_type_of_scholar", "课程数量": "Number_of_courses", "合作学校数量": "Number_of_co-operative_schools", "是否免费": "Is_it_free?", "平台id": "Platformid", "学校id": "School_id", "合作课程数量": "Number_of_cooperative_courses", "开源课程名称": "Open_Source_Course_Name", "课程id": "Course_id", "课时": "Classes", "主讲教师": "Teacher", "开源课程id": "Open_source_courseid", "是否直播": "Is_it_live_or_not?", "课程时长": "Length_of_the_course", "价格": "Prices"}, "table_en": {"学校": "School", "课程": "Courses", "平台": "Platform", "平台合作学校": "Platform_Cooperative_Schools", "学校的开源课程": "Open-source_courses_in_schools", "平台课程": "Platform_courses"}}, "中国交通": {"sqlite": "CREATE TABLE 机场 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  机场类型 VARCHAR(50), -- Type of airport\n  地区管理 VARCHAR(50), -- Area management\n  航站楼面积 VARCHAR(50), -- Air terminal area\n  机位数量 INTEGER, -- Number of slots\n  客运航线 INTEGER, -- Passenger routes\n  跑道长度 INTEGER, -- runway length\n  省份 INTEGER, -- Province\n  通航日期 VARCHAR(50), -- Date of voyage\n);\nCREATE TABLE 火车站 (\n  词条id DATETIME PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  投用日期 VARCHAR(50), -- Date of application\n  建筑面积 DATETIME, -- Construction area\n  站台规模 INTEGER, -- Site Size\n  地址 INTEGER, -- Address\n  省份 VARCHAR(50), -- Province\n  投用日期 VARCHAR(50), -- Date of application\n);\nCREATE TABLE 航空公司 (\n  词条id DATETIME PRIMARY KEY, -- Phrase id\n  公司名称 INTEGER, -- Name of company\n  总部地点 VARCHAR(50), -- Headquarters locations\n  成立时间 VARCHAR(50), --  Other Organiser\n  IATA代码 DATETIME, -- IATA code\n  ICAO代码 VARCHAR(50), -- ICAO Code\n  年营业额 VARCHAR(50), -- Annual turnover\n  员工数 INTEGER, -- Number of employees\n);\nCREATE TABLE 航空公司入驻机场 (\n  航空公司id INTEGER PRIMARY KEY, -- Airlineid\n  机场id INTEGER, -- Airportd\n  城市 INTEGER, -- Urban\n  航点数 VARCHAR(50), -- No  of shipping points\n);\nCREATE TABLE 机场吞吐量 (\n  年份 INTEGER PRIMARY KEY, -- Year\n  机场id DATETIME, -- Airportd\n  旅客吞吐量 INTEGER, -- Passenger throughput\n  客运航线数量 INTEGER, -- Number of passenger routes\n);\n-- 航空公司入驻机场.机场id can be joined with 机场.机场\n-- 航空公司入驻机场.航空公司id can be joined with 航空公司.航空公司\n-- 机场吞吐量.机场id can be joined with 机场.机场", "columns_en": {"词条id": "Phrase_id", "名称": "Name", "机场类型": "Type_of_airport", "地区管理": "Area_management", "航站楼面积": "Air_terminal_area", "机位数量": "Number_of_slots", "客运航线": "Passenger_routes", "跑道长度": "runway_length", "省份": "Province", "通航日期": "Date_of_voyage", "投用日期": "Date_of_application", "建筑面积": "Construction_area", "站台规模": "Site_Size", "地址": "Address", "公司名称": "Name_of_company", "总部地点": "Headquarters_locations", "成立时间": "_Other_Organiser", "IATA代码": "IATA_code", "ICAO代码": "ICAO_Code", "年营业额": "Annual_turnover", "员工数": "Number_of_employees", "航空公司id": "Airlineid", "机场id": "Airportd", "城市": "Urban", "航点数": "No__of_shipping_points", "年份": "Year", "旅客吞吐量": "Passenger_throughput", "客运航线数量": "Number_of_passenger_routes"}, "table_en": {"机场": "Airport", "火车站": "Train_station", "航空公司": "Airlines", "航空公司入驻机场": "Airline_presence_at_the_airport", "机场吞吐量": "Airport_throughput"}}, "2018年各校招生计划": {"sqlite": "CREATE TABLE 学校 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  所在省份 VARCHAR(50), -- Where are you from?\n  类型 VARCHAR(50), -- Type\n  是否985 VARCHAR(50), -- Is it 985?\n  是否211 BINARY, -- Is it 211?\n);\nCREATE TABLE 省份 (\n  词条id BINARY PRIMARY KEY, -- Phrase id\n  省名 INTEGER, -- Name of province\n  2018年考生数量 VARCHAR(50), -- Number of candidates in 2018\n  985高校数量 INTEGER, -- Number of higher education institutions 985\n  211高校数量 INTEGER, -- Number of 211 higher education institutions\n);\nCREATE TABLE 各省高校招生计划 (\n  学校id INTEGER PRIMARY KEY, -- School id\n  省份id INTEGER, -- Province id\n  招生人数 INTEGER, -- Number of students enrolled\n);\nCREATE TABLE 专业 (\n  词条id INTEGER PRIMARY KEY, -- Phrase id\n  专业名称 INTEGER, -- Professional name\n  学科类型 VARCHAR(50), -- Type of discipline\n  学制 VARCHAR(50), -- School system\n);\nCREATE TABLE 清华大学招生计划 (\n  专业id INTEGER PRIMARY KEY, -- Professional id\n  省份id INTEGER, -- Province id\n  招考类型 INTEGER, -- Type of examination\n  学费 VARCHAR(50), -- School fees\n  招生人数 INTEGER, -- Number of students enrolled\n);\n-- 清华大学招生计划.专业id can be joined with 专业.专业\n-- 清华大学招生计划.省份id can be joined with 省份.省份\n-- 各省高校招生计划.学校id can be joined with 学校.学校\n-- 各省高校招生计划.省份id can be joined with 省份.省份", "columns_en": {"词条id": "Phrase_id", "名称": "Name", "所在省份": "Where_are_you_from?", "类型": "Type", "是否985": "Is_it_985?", "是否211": "Is_it_211?", "省名": "Name_of_province", "2018年考生数量": "Number_of_candidates_in_2018", "985高校数量": "Number_of_higher_education_institutions_985", "211高校数量": "Number_of_211_higher_education_institutions", "学校id": "School_id", "省份id": "Province_id", "招生人数": "Number_of_students_enrolled", "专业名称": "Professional_name", "学科类型": "Type_of_discipline", "学制": "School_system", "专业id": "Professional_id", "招考类型": "Type_of_examination", "学费": "School_fees"}, "table_en": {"学校": "School", "省份": "Province", "各省高校招生计划": "Programme_for_admission_to_higher_education_in_the_provinces", "专业": "Professional", "清华大学招生计划": "Qinghua_University_Admission_Program"}}, "榜单": {"sqlite": "CREATE TABLE 图书 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  书名 INTEGER, -- Title\n  作者 VARCHAR(50), -- Author\n  评分 VARCHAR(50), -- Rating\n  总排名 INTEGER, -- Total ranking\n);\nCREATE TABLE 五星榜单 (\n  图书id INTEGER PRIMARY KEY, -- Book id\n  评价人数 INTEGER, -- Number of evaluations\n);\nCREATE TABLE 本月特价书籍 (\n  图书id INTEGER PRIMARY KEY, -- Book id\n  现价格 INTEGER, -- Current price\n  原价格 INTEGER, -- Original price\n);\nCREATE TABLE 人气榜单 (\n  图书id INTEGER PRIMARY KEY, -- Book id\n  购买人数 INTEGER, -- Number of persons purchased\n  收藏人数 INTEGER, -- Number of collectors\n);\nCREATE TABLE 必读榜单 (\n  图书id INTEGER PRIMARY KEY, -- Book id\n  推荐人数 INTEGER, -- Number of recommended\n);\n-- 人气榜单.图书id can be joined with 图书.图书\n-- 本月特价书籍.图书id can be joined with 图书.图书\n-- 五星榜单.图书id can be joined with 图书.图书\n-- 必读榜单.图书id can be joined with 图书.图书", "columns_en": {"词条id": "Phrase_id", "书名": "Title", "作者": "Author", "评分": "Rating", "总排名": "Total_ranking", "图书id": "Book_id", "评价人数": "Number_of_evaluations", "现价格": "Current_price", "原价格": "Original_price", "购买人数": "Number_of_persons_purchased", "收藏人数": "Number_of_collectors", "推荐人数": "Number_of_recommended"}, "table_en": {"图书": "Books", "五星榜单": "Five-star_list", "本月特价书籍": "This_month's_special_book", "人气榜单": "People's_lists", "必读榜单": "You_have_to_read_the_list"}}, "购书平台": {"sqlite": "CREATE TABLE 平台 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  成立时间 VARCHAR(50), --  Other Organiser\n  年营业额 DATETIME, -- Annual turnover\n  是否自营 INTEGER, -- Self-employed or not\n  会员费 BINARY, -- Membership fees\n);\nCREATE TABLE 图书 (\n  词条id INTEGER PRIMARY KEY, -- Phrase id\n  书名 INTEGER, -- Title\n  作者 VARCHAR(50), -- Author\n  类型 VARCHAR(50), -- Type\n);\nCREATE TABLE 图书与平台 (\n  书名id VARCHAR(50) PRIMARY KEY, -- Book name id\n  平台id INTEGER, -- Platformid\n  售价 INTEGER, -- Price of sale\n  购买人数 INTEGER, -- Number of persons purchased\n  评分 INTEGER, -- Rating\n  评分人数 INTEGER, -- Ratings\n  加入购物车人数 INTEGER, -- Number of persons enrolled in shopping carts\n  收藏人数 INTEGER, -- Number of collectors\n  缺货 INTEGER, -- Non-availability of goods\n);\nCREATE TABLE 电子书 (\n  书名id BINARY PRIMARY KEY, -- Book name id\n  平台id INTEGER, -- Platformid\n  电子书售价 INTEGER, -- E-book sales price\n  会员价格 INTEGER, -- Member price\n  购买人数 INTEGER, -- Number of persons purchased\n);\n-- 图书与平台.书名id can be joined with 图书.图书\n-- 图书与平台.平台id can be joined with 平台.平台\n-- 电子书.书名id can be joined with 图书.图书\n-- 电子书.平台id can be joined with 平台.平台", "columns_en": {"词条id": "Phrase_id", "名称": "Name", "成立时间": "_Other_Organiser", "年营业额": "Annual_turnover", "是否自营": "Self-employed_or_not", "会员费": "Membership_fees", "书名": "Title", "作者": "Author", "类型": "Type", "书名id": "Book_name_id", "平台id": "Platformid", "售价": "Price_of_sale", "购买人数": "Number_of_persons_purchased", "评分": "Rating", "评分人数": "Ratings", "加入购物车人数": "Number_of_persons_enrolled_in_shopping_carts", "收藏人数": "Number_of_collectors", "缺货": "Non-availability_of_goods", "电子书售价": "E-book_sales_price", "会员价格": "Member_price"}, "table_en": {"平台": "Platform", "图书": "Books", "图书与平台": "Books_and_platforms", "电子书": "E-books"}}, "友好城市": {"sqlite": "CREATE TABLE 城市 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  城市 INTEGER, -- Urban\n  所属省份 VARCHAR(50), -- Provinces to which they belong\n  建交国家数量 VARCHAR(50), -- Number of States established\n  建交城市数量 INTEGER, -- Number of cities established\n  国外驻华大使馆数量 INTEGER, -- Number of foreign embassies in China\n  留学生数量 INTEGER, -- Number of students studying\n  跨国公司数量 INTEGER, -- Number of TNCs\n);\nCREATE TABLE 一带一路线路上的国家 (\n  国家 INTEGER PRIMARY KEY, -- National\n  线路 VARCHAR(50), -- Lines\n);\nCREATE TABLE 一带一路的中国城市 (\n  城市id VARCHAR(50) PRIMARY KEY, -- Urban id\n  所属省 INTEGER, -- Provinces to which they belong\n  线路 VARCHAR(50), -- Lines\n);\nCREATE TABLE 对口帮扶城市 (\n  贫困城市id VARCHAR(50) PRIMARY KEY, -- Poor city id\n  所属省 VARCHAR(50), -- Provinces to which they belong\n  帮助城市id VARCHAR(50), -- Help the city id\n);\n-- 一带一路的中国城市.城市id can be joined with 城市.城市\n-- 对口帮扶城市.贫困城市id can be joined with 城市.城市\n-- 对口帮扶城市.帮助城市id can be joined with 城市.城市", "columns_en": {"词条id": "Phrase_id", "城市": "Urban", "所属省份": "Provinces_to_which_they_belong", "建交国家数量": "Number_of_States_established", "建交城市数量": "Number_of_cities_established", "国外驻华大使馆数量": "Number_of_foreign_embassies_in_China", "留学生数量": "Number_of_students_studying", "跨国公司数量": "Number_of_TNCs", "国家": "National", "线路": "Lines", "城市id": "Urban_id", "所属省": "Provinces_to_which_they_belong", "贫困城市id": "Poor_city_id", "帮助城市id": "Help_the_city_id"}, "table_en": {"城市": "Urban", "一带一路线路上的国家": "A_country_on_a_route", "一带一路的中国城市": "All_the_way_to_the_Chinese_city", "对口帮扶城市": "The_other_side_is_helping_the_city"}}, "植物": {"sqlite": "CREATE TABLE 植物 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  学名 INTEGER, -- Acupuncture\n  花期 VARCHAR(50), -- Floating period\n  花期时长 INTEGER, -- Length of time spent\n  果期 INTEGER, -- Outcome period\n);\nCREATE TABLE 药用植物 (\n  植物id INTEGER PRIMARY KEY, -- Plant id\n  用途说明 INTEGER, -- Statement of purpose\n  毒性 VARCHAR(50), -- Toxicity\n  种植方式 VARCHAR(50), -- Method of cultivation\n);\nCREATE TABLE 植物分布城市 (\n  植物id VARCHAR(50) PRIMARY KEY, -- Plant id\n  城市 INTEGER, -- Urban\n  保护级别 VARCHAR(50), -- Protection level\n);\nCREATE TABLE 食肉植物分布区域 (\n  植物id VARCHAR(50) PRIMARY KEY, -- Plant id\n  区域 INTEGER, -- Regional\n  种类数 VARCHAR(50), -- Number of categories\n);\nCREATE TABLE 植物繁殖 (\n  植物id INTEGER PRIMARY KEY, -- Plant id\n  方式 INTEGER, -- Modalities\n);\n-- 药用植物.植物id can be joined with 植物.植物\n-- 植物分布城市.植物id can be joined with 植物.植物\n-- 食肉植物分布区域.植物id can be joined with 植物.植物\n-- 植物繁殖.植物id can be joined with 植物.植物", "columns_en": {"词条id": "Phrase_id", "学名": "Acupuncture", "花期": "Floating_period", "花期时长": "Length_of_time_spent", "果期": "Outcome_period", "植物id": "Plant_id", "用途说明": "Statement_of_purpose", "毒性": "Toxicity", "种植方式": "Method_of_cultivation", "城市": "Urban", "保护级别": "Protection_level", "区域": "Regional", "种类数": "Number_of_categories", "方式": "Modalities"}, "table_en": {"植物": "Plants", "药用植物": "Pharmacy_plants", "植物分布城市": "Plant_distribution_cities", "食肉植物分布区域": "Meat-eating_plant_distribution_area", "植物繁殖": "Plant_breeding"}}, "运动员比赛记录": {"sqlite": "CREATE TABLE 篮球运动员 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  中文名 INTEGER, -- Chinese Name\n  场上位置 VARCHAR(50), -- Field position\n  球队 VARCHAR(50), -- Team\n  年龄 VARCHAR(50), -- Age\n);\nCREATE TABLE 比赛记录 (\n  赛季 INTEGER PRIMARY KEY, -- Season\n  球队 INTEGER, -- Team\n  赛事类型 VARCHAR(50), -- Type of event\n  球员id VARCHAR(50), -- Player id\n  出场次数 INTEGER, -- Number of appearances\n  首发次数 INTEGER, -- Number of initial issuances\n  投篮 INTEGER, -- Shoot it\n  罚球 INTEGER, -- Strike!\n  三分球 INTEGER, -- Three\n  总篮板 INTEGER, -- Total basket\n  抢断 INTEGER, -- I'll take it\n  助攻 INTEGER, -- Accompaniment\n  防守 INTEGER, -- Defense\n  犯规 INTEGER, -- It's a foul\n  得分 INTEGER, -- Score\n);\nCREATE TABLE 生涯之最 (\n  球员id INTEGER PRIMARY KEY, -- Player id\n  单场得分 INTEGER, -- Single score\n  篮板球次数 INTEGER, -- Number of basketballs\n  抢断次数 INTEGER, -- Number of breakouts\n  助攻次数 INTEGER, -- Number of offensives\n  盖帽次数 INTEGER, -- Number of caps\n  比赛时间 INTEGER, -- Game time\n  比赛对手 DATETIME, -- Fighter\n);\n-- 比赛记录.球员id can be joined with 篮球运动员.篮球运动员\n-- 生涯之最.球员id can be joined with 篮球运动员.篮球运动员", "columns_en": {"词条id": "Phrase_id", "中文名": "Chinese_Name", "场上位置": "Field_position", "球队": "Team", "年龄": "Age", "赛季": "Season", "赛事类型": "Type_of_event", "球员id": "Player_id", "出场次数": "Number_of_appearances", "首发次数": "Number_of_initial_issuances", "投篮": "Shoot_it", "罚球": "Strike!", "三分球": "Three", "总篮板": "Total_basket", "抢断": "I'll_take_it", "助攻": "Accompaniment", "防守": "Defense", "犯规": "It's_a_foul", "得分": "Score", "单场得分": "Single_score", "篮板球次数": "Number_of_basketballs", "抢断次数": "Number_of_breakouts", "助攻次数": "Number_of_offensives", "盖帽次数": "Number_of_caps", "比赛时间": "Game_time", "比赛对手": "Fighter"}, "table_en": {"篮球运动员": "Basketball_player", "比赛记录": "The_record_of_the_game", "生涯之最": "It's_the_best_part_of_my_life"}}, "智能手机全球占比": {"sqlite": "CREATE TABLE 智能手机公司 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  所属国家 VARCHAR(50), -- Country of nationality\n  年营业额 VARCHAR(50), -- Annual turnover\n  年利润 INTEGER, -- Annual profits\n  世界排名 INTEGER, -- World ranking\n);\nCREATE TABLE 智能手机全球出货量 (\n  公司id INTEGER PRIMARY KEY, -- Companyid\n  2017年出货量 INTEGER, -- Delivery in 2017\n  2017年市场占比 INTEGER, -- Market share  2017\n  2018年出货量 INTEGER, -- Delivery in 2018\n  2018年市场占比 INTEGER, -- Market share  2018\n  占比提升幅度 INTEGER, -- Percentage increase\n);\nCREATE TABLE 智能手机部署国家 (\n  公司id INTEGER PRIMARY KEY, -- Companyid\n  部署国家 INTEGER, -- Countries deployed\n  部署年份 INTEGER, -- Year of deployment\n  销售量排名 DATETIME, -- Sales ranking\n);\n-- 智能手机部署国家.公司id can be joined with 智能手机公司.智能手机公司\n-- 智能手机全球出货量.公司id can be joined with 智能手机公司.智能手机公司", "columns_en": {"词条id": "Phrase_id", "名称": "Name", "所属国家": "Country_of_nationality", "年营业额": "Annual_turnover", "年利润": "Annual_profits", "世界排名": "World_ranking", "公司id": "Companyid", "2017年出货量": "Delivery_in_2017", "2017年市场占比": "Market_share__2017", "2018年出货量": "Delivery_in_2018", "2018年市场占比": "Market_share__2018", "占比提升幅度": "Percentage_increase", "部署国家": "Countries_deployed", "部署年份": "Year_of_deployment", "销售量排名": "Sales_ranking"}, "table_en": {"智能手机公司": "Smartphones", "智能手机全球出货量": "Global_shipments_of_smartphones", "智能手机部署国家": "Smart_phone_deployment_countries"}}, "期刊": {"sqlite": "CREATE TABLE 期刊 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  语言 VARCHAR(50), -- Languages\n  类别 VARCHAR(50), -- Category\n  主办单位 VARCHAR(50), -- Host\n  创刊时间 VARCHAR(50), -- Date of launch\n  国家 DATETIME, -- National\n  出版刊数 VARCHAR(50), -- Number of publications\n);\nCREATE TABLE 期刊文献 (\n  年份 INTEGER PRIMARY KEY, -- Year\n  期刊id DATETIME, -- Periodical id\n  统计平台 INTEGER, -- Statistical platform\n  出版文献数 VARCHAR(50), -- Number of publications\n  被下载数量 INTEGER, -- Number of downloads\n  被引数量 INTEGER, -- Quantity quoted\n  复合影响因子 INTEGER, -- Combination impact factors\n  综合影响因子 INTEGER, -- Integrated impact factors\n);\nCREATE TABLE 封面人物 (\n  词条id INTEGER PRIMARY KEY, -- Phrase id\n  姓名 INTEGER, -- Name\n  职业 VARCHAR(50), -- Occupation\n);\nCREATE TABLE 期刊封面人物 (\n  人物id VARCHAR(50) PRIMARY KEY, -- Personal id\n  期刊id INTEGER, -- Periodical id\n  次数 INTEGER, -- Number\n);\n-- 期刊封面人物.人物id can be joined with 封面人物.封面人物\n-- 期刊文献.期刊id can be joined with 期刊.期刊\n-- 期刊封面人物.期刊id can be joined with 期刊.期刊", "columns_en": {"词条id": "Phrase_id", "名称": "Name", "语言": "Languages", "类别": "Category", "主办单位": "Host", "创刊时间": "Date_of_launch", "国家": "National", "出版刊数": "Number_of_publications", "年份": "Year", "期刊id": "Periodical_id", "统计平台": "Statistical_platform", "出版文献数": "Number_of_publications", "被下载数量": "Number_of_downloads", "被引数量": "Quantity_quoted", "复合影响因子": "Combination_impact_factors", "综合影响因子": "Integrated_impact_factors", "姓名": "Name", "职业": "Occupation", "人物id": "Personal_id", "次数": "Number"}, "table_en": {"期刊": "Periodicals", "期刊文献": "Bibliography_of_periodicals", "封面人物": "Cover_character", "期刊封面人物": "The_cover_of_the_journal"}}, "小说": {"sqlite": "CREATE TABLE 作者 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  姓名 INTEGER, -- Name\n  国籍 VARCHAR(50), -- Nationality\n  出生日期 VARCHAR(50), -- Date of birth\n  出生地 DATETIME, -- Place of birth\n  逝世日期 VARCHAR(50), -- Date of death\n  作品数量 DATETIME, -- Number of works\n);\nCREATE TABLE 小说 (\n  词条id INTEGER PRIMARY KEY, -- Phrase id\n  小说名 INTEGER, -- It's a novel\n  文学体裁 VARCHAR(50), -- Literary style\n  作者id VARCHAR(50), -- Authorid\n  首版时间 INTEGER, -- First release time\n  字数 DATETIME, -- Words\n);\nCREATE TABLE 小说改编话剧 (\n  词条id INTEGER PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  小说id VARCHAR(50), -- novel id\n  演出剧团 INTEGER, -- Theater\n  导演 VARCHAR(50), -- Director\n  演出总场次 VARCHAR(50), -- Total performance\n  观众评分 INTEGER, -- Audience scores\n);\nCREATE TABLE 小说改编电视剧 (\n  词条id INTEGER PRIMARY KEY, -- Phrase id\n  剧名 INTEGER, -- The title of the play\n  小说id VARCHAR(50), -- novel id\n  首播时间 INTEGER, -- Launch time\n  集数 DATETIME, -- Collections\n  豆瓣评分 INTEGER, -- Bean petals\n);\n-- 小说.作者id can be joined with 作者.作者\n-- 小说改编话剧.小说id can be joined with 小说.小说\n-- 小说改编电视剧.小说id can be joined with 小说.小说", "columns_en": {"词条id": "Phrase_id", "姓名": "Name", "国籍": "Nationality", "出生日期": "Date_of_birth", "出生地": "Place_of_birth", "逝世日期": "Date_of_death", "作品数量": "Number_of_works", "小说名": "It's_a_novel", "文学体裁": "Literary_style", "作者id": "Authorid", "首版时间": "First_release_time", "字数": "Words", "名称": "Name", "小说id": "novel_id", "演出剧团": "Theater", "导演": "Director", "演出总场次": "Total_performance", "观众评分": "Audience_scores", "剧名": "The_title_of_the_play", "首播时间": "Launch_time", "集数": "Collections", "豆瓣评分": "Bean_petals"}, "table_en": {"作者": "Author", "小说": "Novel", "小说改编话剧": "It's_a_novel__It's_a_play", "小说改编电视剧": "It's_a_novel__It's_a_TV_show"}}, "朝代影视剧": {"sqlite": "CREATE TABLE 帝王 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  姓名 INTEGER, -- Name\n  朝代 VARCHAR(50), -- Dynasty!\n  在位年数 VARCHAR(50), -- In-in-years\n);\nCREATE TABLE 电影 (\n  词条id INTEGER PRIMARY KEY, -- Phrase id\n  电影名称 INTEGER, -- Film Name\n  上映时间 VARCHAR(50), -- Show time\n  帝王id DATETIME, -- King id\n);\nCREATE TABLE 电视剧 (\n  词条id INTEGER PRIMARY KEY, -- Phrase id\n  剧名 INTEGER, -- The title of the play\n  首播时间 VARCHAR(50), -- Launch time\n  剧集 DATETIME, -- Theater\n  帝王id INTEGER, -- King id\n);\n-- 电影.帝王id can be joined with 帝王.帝王\n-- 电视剧.帝王id can be joined with 帝王.帝王", "columns_en": {"词条id": "Phrase_id", "姓名": "Name", "朝代": "Dynasty!", "在位年数": "In-in-years", "电影名称": "Film_Name", "上映时间": "Show_time", "帝王id": "King_id", "剧名": "The_title_of_the_play", "首播时间": "Launch_time", "剧集": "Theater"}, "table_en": {"帝王": "King", "电影": "Film", "电视剧": "A_TV_show"}}, "汉语词语": {"sqlite": "CREATE TABLE 词语 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  含义 VARCHAR(50), -- Meaning\n  类型 VARCHAR(50), -- Type\n);\nCREATE TABLE 近义词 (\n  词语id VARCHAR(50) PRIMARY KEY, -- Word id\n  近义词id INTEGER, -- Synonym id\n);\nCREATE TABLE 反义词 (\n  词语id INTEGER PRIMARY KEY, -- Word id\n  反义词id INTEGER, -- Adjective id\n);\n-- 近义词.词语id can be joined with 词语.词语\n-- 反义词.反义词id can be joined with 词语.词语\n-- 近义词.近义词id can be joined with 词语.词语\n-- 反义词.词语id can be joined with 词语.词语", "columns_en": {"词条id": "Phrase_id", "名称": "Name", "含义": "Meaning", "类型": "Type", "词语id": "Word_id", "近义词id": "Synonym_id", "反义词id": "Adjective_id"}, "table_en": {"词语": "Words", "近义词": "Synonyms", "反义词": "Adjective"}}, "游戏": {"sqlite": "CREATE TABLE 游戏公司 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  国家 VARCHAR(50), -- National\n  公司性质 VARCHAR(50), -- Nature of the company\n  年收益 VARCHAR(50), -- Annual income\n  游戏数量 INTEGER, -- Number of games\n);\nCREATE TABLE 游戏 (\n  词条id INTEGER PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  注册玩家数量 VARCHAR(50), -- Number of registered players\n  日在线玩家数量 INTEGER, -- Number of Day Online Players\n  游戏画面评分 INTEGER, -- Game Image Rating\n  游戏音乐评分 INTEGER, -- Game Music Rating\n  游戏性评分 INTEGER, -- Game Rating\n  游戏特色评分 INTEGER, -- Game Character Rating\n  相关服务评分 INTEGER, -- Rating of related services\n);\nCREATE TABLE 公司和游戏 (\n  游戏id INTEGER PRIMARY KEY, -- Gameid\n  公司id INTEGER, -- Companyid\n  发行形式 INTEGER, -- Circulation\n  收益额 VARCHAR(50), -- Amount of proceeds\n  收益占公司比例 INTEGER, -- Proceeds as a proportion of companies\n);\n-- 公司和游戏.游戏id can be joined with 游戏.游戏\n-- 公司和游戏.公司id can be joined with 游戏公司.游戏公司", "columns_en": {"词条id": "Phrase_id", "名称": "Name", "国家": "National", "公司性质": "Nature_of_the_company", "年收益": "Annual_income", "游戏数量": "Number_of_games", "注册玩家数量": "Number_of_registered_players", "日在线玩家数量": "Number_of_Day_Online_Players", "游戏画面评分": "Game_Image_Rating", "游戏音乐评分": "Game_Music_Rating", "游戏性评分": "Game_Rating", "游戏特色评分": "Game_Character_Rating", "相关服务评分": "Rating_of_related_services", "游戏id": "Gameid", "公司id": "Companyid", "发行形式": "Circulation", "收益额": "Amount_of_proceeds", "收益占公司比例": "Proceeds_as_a_proportion_of_companies"}, "table_en": {"游戏公司": "Game_company", "游戏": "Game", "公司和游戏": "Company_and_Game"}}, "购物城": {"sqlite": "CREATE TABLE 商场 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  地址 VARCHAR(50), -- Address\n  开业时间 VARCHAR(50), -- Opening hours\n);\nCREATE TABLE 商家 (\n  词条id DATETIME PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  类型 VARCHAR(50), -- Type\n);\nCREATE TABLE 商家入驻商场 (\n  商家id VARCHAR(50) PRIMARY KEY, -- Business id\n  商场id INTEGER, -- Mall\n  楼层 INTEGER, -- Floor\n  占地面积 INTEGER, -- Area of land area\n);\n-- 商家入驻商场.商场id can be joined with 商场.商场\n-- 商家入驻商场.商家id can be joined with 商家.商家", "columns_en": {"词条id": "Phrase_id", "名称": "Name", "地址": "Address", "开业时间": "Opening_hours", "类型": "Type", "商家id": "Business_id", "商场id": "Mall", "楼层": "Floor", "占地面积": "Area_of_land_area"}, "table_en": {"商场": "The_mall", "商家": "Business", "商家入驻商场": "Businesses_in_malls"}}, "诺贝尔奖项": {"sqlite": "CREATE TABLE 诺贝尔奖项 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  领域 VARCHAR(50), -- Area\n  第一次颁奖时间 VARCHAR(50), -- It's the first time\n  获奖者最大年龄 DATETIME, -- Age of winners\n  获奖者最小年龄 INTEGER, -- Minimum Age of Recipients\n  获奖者平均年龄 INTEGER, -- Average age of winners\n);\nCREATE TABLE 高校 (\n  词条id INTEGER PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  所属国家 VARCHAR(50), -- Country of nationality\n  世界排名 VARCHAR(50), -- World ranking\n  独立科研机构数量 INTEGER, -- Number of independent scientific institutions\n  重点学科数量 INTEGER, -- Number of priority disciplines\n);\nCREATE TABLE 高校获奖名单 (\n  高校id INTEGER PRIMARY KEY, -- Higher education id\n  奖项id INTEGER, -- Award id\n  人数 INTEGER, -- Number\n  排名 INTEGER, -- Rank\n);\nCREATE TABLE 各国获奖名单 (\n  国家 INTEGER PRIMARY KEY, -- National\n  奖项id INTEGER, -- Award id\n  人数 INTEGER, -- Number\n);\nCREATE TABLE 科学家 (\n  词条id INTEGER PRIMARY KEY, -- Phrase id\n  姓名 INTEGER, -- Name\n  性别 VARCHAR(50), -- Gender\n  国籍 VARCHAR(50), -- Nationality\n  出生日期 VARCHAR(50), -- Date of birth\n  职业 DATETIME, -- Occupation\n);\nCREATE TABLE 毕业院校 (\n  科学家id VARCHAR(50) PRIMARY KEY, -- Scientist id\n  高校id INTEGER, -- Higher education id\n  获得学位 INTEGER, -- Obtaining a degree\n);\nCREATE TABLE 诺贝尔奖科学家名单 (\n  年份 VARCHAR(50) PRIMARY KEY, -- Year\n  奖项id DATETIME, -- Award id\n  科学家id INTEGER, -- Scientist id\n  理由 INTEGER, -- Rationale\n);\n-- 诺贝尔奖科学家名单.科学家id can be joined with 科学家.科学家\n-- 高校获奖名单.高校id can be joined with 高校.高校\n-- 各国获奖名单.奖项id can be joined with 诺贝尔奖项.诺贝尔奖项\n-- 毕业院校.科学家id can be joined with 科学家.科学家\n-- 高校获奖名单.奖项id can be joined with 诺贝尔奖项.诺贝尔奖项\n-- 毕业院校.高校id can be joined with 高校.高校\n-- 诺贝尔奖科学家名单.奖项id can be joined with 诺贝尔奖项.诺贝尔奖项", "columns_en": {"词条id": "Phrase_id", "名称": "Name", "领域": "Area", "第一次颁奖时间": "It's_the_first_time", "获奖者最大年龄": "Age_of_winners", "获奖者最小年龄": "Minimum_Age_of_Recipients", "获奖者平均年龄": "Average_age_of_winners", "所属国家": "Country_of_nationality", "世界排名": "World_ranking", "独立科研机构数量": "Number_of_independent_scientific_institutions", "重点学科数量": "Number_of_priority_disciplines", "高校id": "Higher_education_id", "奖项id": "Award_id", "人数": "Number", "排名": "Rank", "国家": "National", "姓名": "Name", "性别": "Gender", "国籍": "Nationality", "出生日期": "Date_of_birth", "职业": "Occupation", "科学家id": "Scientist_id", "获得学位": "Obtaining_a_degree", "年份": "Year", "理由": "Rationale"}, "table_en": {"诺贝尔奖项": "Nobel_Prize", "高校": "Colleges_of_higher_education", "高校获奖名单": "Award-winning_list_of_institutions_of_higher_learning", "各国获奖名单": "List_of_prizes_awarded_to_States", "科学家": "Scientists", "毕业院校": "Graduate_schools", "诺贝尔奖科学家名单": "The_list_of_Nobel_Prize_scientists"}}, "世界高校": {"sqlite": "CREATE TABLE 大洲 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  面积排名 VARCHAR(50), -- Area ranking\n  人口排名 INTEGER, -- Population ranking\n);\nCREATE TABLE 国家 (\n  词条id INTEGER PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  成立时间 VARCHAR(50), --  Other Organiser\n  官方语言 DATETIME, -- Official languages\n  所属洲id VARCHAR(50), --  Other Organiser\n);\nCREATE TABLE 高校 (\n  词条id INTEGER PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  类型 VARCHAR(50), -- Type\n  所属国家id VARCHAR(50), -- Country of nationalityd\n  世界软科排名 INTEGER, -- The world's soft class\n  泰晤士排名 INTEGER, -- The Times\n  QS排名 INTEGER, -- QS ranking\n  USNews排名 INTEGER, -- USNews ranking\n);\n-- 高校.所属国家id can be joined with 国家.国家\n-- 国家.所属洲id can be joined with 大洲.大洲", "columns_en": {"词条id": "Phrase_id", "名称": "Name", "面积排名": "Area_ranking", "人口排名": "Population_ranking", "成立时间": "_Other_Organiser", "官方语言": "Official_languages", "所属洲id": "_Other_Organiser", "类型": "Type", "所属国家id": "Country_of_nationalityd", "世界软科排名": "The_world's_soft_class", "泰晤士排名": "The_Times", "QS排名": "QS_ranking", "USNews排名": "USNews_ranking"}, "table_en": {"大洲": "Continent", "国家": "National", "高校": "Colleges_of_higher_education"}}, "朝代货币": {"sqlite": "CREATE TABLE 朝代 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  统治时间 VARCHAR(50), -- Time of rule\n);\nCREATE TABLE 各年号统治时间 (\n  词条id INTEGER PRIMARY KEY, -- Phrase id\n  年号 INTEGER, -- Year\n  所处朝代id VARCHAR(50), -- ♪ Where the dynasty is id ♪\n  统治时间 INTEGER, -- Time of rule\n);\nCREATE TABLE 各朝代货币 (\n  朝代id INTEGER PRIMARY KEY, -- Dynasty id\n  货币 INTEGER, -- Currency\n  使用时间 VARCHAR(50), -- Time used\n);\n-- 各朝代货币.朝代id can be joined with 朝代.朝代\n-- 各年号统治时间.所处朝代id can be joined with 朝代.朝代", "columns_en": {"词条id": "Phrase_id", "名称": "Name", "统治时间": "Time_of_rule", "年号": "Year", "所处朝代id": "♪_Where_the_dynasty_is_id_♪", "朝代id": "Dynasty_id", "货币": "Currency", "使用时间": "Time_used"}, "table_en": {"朝代": "Dynasty!", "各年号统治时间": "It's_a_year-long_rule", "各朝代货币": "The_currencies_of_the_dynasty"}}, "两院院士": {"sqlite": "CREATE TABLE 两院院士学校名单 (\n  学校 VARCHAR(50) PRIMARY KEY, -- School\n  所在省市 VARCHAR(50), -- He's in the city and province\n  所在城市 VARCHAR(50), -- It's in the city\n  院士人数 VARCHAR(50), -- Number of cadets\n);\nCREATE TABLE 两院院士民族名单 (\n  民族 INTEGER PRIMARY KEY, -- Nationalities\n  院士人数 VARCHAR(50), -- Number of cadets\n  所占比例 INTEGER, -- Percentage\n);\nCREATE TABLE 各国女院士比例 (\n  国家 INTEGER PRIMARY KEY, -- National\n  女院士人数 VARCHAR(50), -- Number of women\n  所占比例 INTEGER, -- Percentage\n);\nCREATE TABLE 各学部院士分布 (\n  年份 INTEGER PRIMARY KEY, -- Year\n  学部 DATETIME, -- Faculty\n  院士人数 VARCHAR(50), -- Number of cadets\n  所占比例 INTEGER, -- Percentage\n);\n", "columns_en": {"学校": "School", "所在省市": "He's_in_the_city_and_province", "所在城市": "It's_in_the_city", "院士人数": "Number_of_cadets", "民族": "Nationalities", "所占比例": "Percentage", "国家": "National", "女院士人数": "Number_of_women", "年份": "Year", "学部": "Faculty"}, "table_en": {"两院院士学校名单": "List_of_schools_of_the_two_chambers", "两院院士民族名单": "National_list_of_the_members_of_the_two_chambers", "各国女院士比例": "Proportion_of_female_cadets_per_country", "各学部院士分布": "B_A__distribution_by_science_department"}}, "网易云阅读": {"sqlite": "CREATE TABLE 作者 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  姓名 INTEGER, -- Name\n  年龄 VARCHAR(50), -- Age\n  出版作品数 INTEGER, -- Number of works published\n  网络作品数 INTEGER, -- Number of webworks\n);\nCREATE TABLE 出版图书 (\n  词条id INTEGER PRIMARY KEY, -- Phrase id\n  书名 INTEGER, -- Title\n  作者id VARCHAR(50), -- Authorid\n  评分 INTEGER, -- Rating\n  评价人数 INTEGER, -- Number of evaluations\n  字数 INTEGER, -- Words\n  点击数 INTEGER, -- Number of clicks\n  类型 INTEGER, -- Type\n);\nCREATE TABLE 网络小说 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  书名 INTEGER, -- Title\n  作者id VARCHAR(50), -- Authorid\n  评分 INTEGER, -- Rating\n  类型 INTEGER, -- Type\n  状态 VARCHAR(50), -- Status\n  价格 VARCHAR(50), -- Prices\n);\nCREATE TABLE 畅销榜 (\n  网络小说id INTEGER PRIMARY KEY, -- Network novelid\n  周排名 INTEGER, -- Week Ratings\n  月排名 INTEGER, -- Monthly rankings\n  总排名 INTEGER, -- Total ranking\n);\nCREATE TABLE 收藏榜 (\n  网络小说id INTEGER PRIMARY KEY, -- Network novelid\n  周排名 INTEGER, -- Week Ratings\n  月排名 INTEGER, -- Monthly rankings\n  总排名 INTEGER, -- Total ranking\n);\n-- 收藏榜.网络小说id can be joined with 网络小说.网络小说\n-- 出版图书.作者id can be joined with 作者.作者\n-- 畅销榜.网络小说id can be joined with 网络小说.网络小说\n-- 网络小说.作者id can be joined with 作者.作者", "columns_en": {"词条id": "Phrase_id", "姓名": "Name", "年龄": "Age", "出版作品数": "Number_of_works_published", "网络作品数": "Number_of_webworks", "书名": "Title", "作者id": "Authorid", "评分": "Rating", "评价人数": "Number_of_evaluations", "字数": "Words", "点击数": "Number_of_clicks", "类型": "Type", "状态": "Status", "价格": "Prices", "网络小说id": "Network_novelid", "周排名": "Week_Ratings", "月排名": "Monthly_rankings", "总排名": "Total_ranking"}, "table_en": {"作者": "Author", "出版图书": "Publication_of_books", "网络小说": "Network_novels", "畅销榜": "Bestselling_List", "收藏榜": "Collection_List"}}, "教材辅助参考书": {"sqlite": "CREATE TABLE 参考书 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  类型 VARCHAR(50), -- Type\n  适用阶段 VARCHAR(50), -- Phase of application\n  适用年级 VARCHAR(50), -- Year of application\n  科目类型 INTEGER, -- Type of subject\n  价格 VARCHAR(50), -- Prices\n  特点 INTEGER, -- Characteristics\n);\nCREATE TABLE 参考试卷 (\n  试卷id VARCHAR(50) PRIMARY KEY, -- Test id\n  套数 INTEGER, -- Packages\n  押题命中率 VARCHAR(50), -- Winning of the caption\n);\nCREATE TABLE 适用城市 (\n  省份 INTEGER PRIMARY KEY, -- Province\n  参考试卷id VARCHAR(50), -- Reference to test paper id\n  版本 INTEGER, -- Version\n  购买数量 VARCHAR(50), -- Number of purchases\n  平均得分 INTEGER, -- Average score\n);\n-- 参考试卷.试卷id can be joined with 参考书.参考书\n-- 适用城市.参考试卷id can be joined with 参考书.参考书", "columns_en": {"词条id": "Phrase_id", "名称": "Name", "类型": "Type", "适用阶段": "Phase_of_application", "适用年级": "Year_of_application", "科目类型": "Type_of_subject", "价格": "Prices", "特点": "Characteristics", "试卷id": "Test_id", "套数": "Packages", "押题命中率": "Winning_of_the_caption", "省份": "Province", "参考试卷id": "Reference_to_test_paper_id", "版本": "Version", "购买数量": "Number_of_purchases", "平均得分": "Average_score"}, "table_en": {"参考书": "References", "参考试卷": "Reference_papers", "适用城市": "City_of_application"}}, "中国高校": {"sqlite": "CREATE TABLE 高校 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  创办时间 VARCHAR(50), --  Other Organiser\n  类别 DATETIME, -- Category\n  所属城市 VARCHAR(50), -- City to which you belong\n  本科生数量 VARCHAR(50), -- Number of undergraduates\n  研究生数量 INTEGER, -- Number of graduate students\n);\nCREATE TABLE 名人 (\n  词条id INTEGER PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  职业 VARCHAR(50), -- Occupation\n  主要成就 DATETIME, -- Main achievements\n  高校id VARCHAR(50), -- Higher education id\n);\nCREATE TABLE 奖项 (\n  奖项名称 INTEGER PRIMARY KEY, -- Name of award\n  高校id VARCHAR(50), -- Higher education id\n  奖项数量 INTEGER, -- Number of awards\n  统计时间 INTEGER, -- Statistics time\n);\nCREATE TABLE 高校属性 (\n  高校id DATETIME PRIMARY KEY, -- Higher education id\n  属性 INTEGER, -- Properties\n  加入时间 VARCHAR(50), -- Add Time\n);\n-- 奖项.高校id can be joined with 高校.高校\n-- 高校属性.高校id can be joined with 高校.高校\n-- 名人.高校id can be joined with 高校.高校", "columns_en": {"词条id": "Phrase_id", "名称": "Name", "创办时间": "_Other_Organiser", "类别": "Category", "所属城市": "City_to_which_you_belong", "本科生数量": "Number_of_undergraduates", "研究生数量": "Number_of_graduate_students", "职业": "Occupation", "主要成就": "Main_achievements", "高校id": "Higher_education_id", "奖项名称": "Name_of_award", "奖项数量": "Number_of_awards", "统计时间": "Statistics_time", "属性": "Properties", "加入时间": "Add_Time"}, "table_en": {"高校": "Colleges_of_higher_education", "名人": "Celebrities", "奖项": "Awards", "高校属性": "University_Properties"}}, "CCTV中国经济年度人物": {"sqlite": "CREATE TABLE 企业人物 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  姓名 INTEGER, -- Name\n  性别 VARCHAR(50), -- Gender\n  年龄 VARCHAR(50), -- Age\n  出生地 INTEGER, -- Place of birth\n  民族 VARCHAR(50), -- Nationalities\n  毕业院校 VARCHAR(50), -- Graduate schools\n);\nCREATE TABLE 公司 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  成立时间 VARCHAR(50), --  Other Organiser\n  年营业额 DATETIME, -- Annual turnover\n  员工数 INTEGER, -- Number of employees\n  市值 INTEGER, -- Market value\n  世界500强排名 INTEGER, -- The world's top 500\n);\nCREATE TABLE 人物公司职位 (\n  人物id INTEGER PRIMARY KEY, -- Personal id\n  公司id INTEGER, -- Companyid\n  职位 INTEGER, -- Positions\n);\nCREATE TABLE 历届经济人物获奖名单 (\n  年份 VARCHAR(50) PRIMARY KEY, -- Year\n  奖项名称 INTEGER, -- Name of award\n  获奖人id VARCHAR(50), -- Laureate id\n);\n-- 人物公司职位.公司id can be joined with 公司.公司\n-- 历届经济人物获奖名单.获奖人id can be joined with 企业人物.企业人物\n-- 人物公司职位.人物id can be joined with 企业人物.企业人物", "columns_en": {"词条id": "Phrase_id", "姓名": "Name", "性别": "Gender", "年龄": "Age", "出生地": "Place_of_birth", "民族": "Nationalities", "毕业院校": "Graduate_schools", "名称": "Name", "成立时间": "_Other_Organiser", "年营业额": "Annual_turnover", "员工数": "Number_of_employees", "市值": "Market_value", "世界500强排名": "The_world's_top_500", "人物id": "Personal_id", "公司id": "Companyid", "职位": "Positions", "年份": "Year", "奖项名称": "Name_of_award", "获奖人id": "Laureate_id"}, "table_en": {"企业人物": "Business_people", "公司": "Company", "人物公司职位": "People's_company_positions", "历届经济人物获奖名单": "List_of_prizes_awarded_to_successive_economic_figures"}}, "大麦网话剧": {"sqlite": "CREATE TABLE 话剧 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  演出时长 VARCHAR(50), -- The duration of the show\n  剧目亮点 INTEGER, -- Let's get this show on the air\n  演出团队 VARCHAR(50), -- The show team\n  导演 VARCHAR(50), -- Director\n  VIP票余量 VARCHAR(50), -- VIP Balance\n  888票价余量 INTEGER, -- 888 leftovers\n  688票价余量 INTEGER, -- 688 ticket balances\n  488票价余量 INTEGER, -- 488 ticket balances\n  288票价余量 INTEGER, -- 288 leftovers\n  188票价余量 INTEGER, -- 188 leftovers\n  100票价余量 INTEGER, -- 100 leftovers\n);\nCREATE TABLE 话剧一周上映 (\n  话剧id INTEGER PRIMARY KEY, -- Theater id\n  上映日期 INTEGER, -- Date of presentation\n  时间段 DATETIME, -- Period\n  演出场馆 DATETIME, -- The show house\n);\nCREATE TABLE 上映城市 (\n  话剧id VARCHAR(50) PRIMARY KEY, -- Theater id\n  城市 INTEGER, -- Urban\n  上映场次 VARCHAR(50), -- Show time\n  上映日期 INTEGER, -- Date of presentation\n);\nCREATE TABLE 音乐剧 (\n  词条id DATETIME PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  演出时长 VARCHAR(50), -- The duration of the show\n  演出场馆 INTEGER, -- The show house\n  演出城市 VARCHAR(50), -- City of the show\n  总票数 VARCHAR(50), -- Number of ballot papers\n  演出语言 INTEGER, -- Language of performance\n  导演 VARCHAR(50), -- Director\n  总场数 VARCHAR(50), -- Total number of sites\n);\nCREATE TABLE 音乐剧演出 (\n  音乐剧id INTEGER PRIMARY KEY, -- Musical id\n  场次 INTEGER, -- Fields\n  演出日期 INTEGER, -- Date of performance\n  演出时间段 DATETIME, -- Period of performance\n  主要演员 DATETIME, -- The lead actor\n);\n-- 话剧一周上映.话剧id can be joined with 话剧.话剧\n-- 音乐剧演出.音乐剧id can be joined with 音乐剧.音乐剧\n-- 上映城市.话剧id can be joined with 话剧.话剧", "columns_en": {"词条id": "Phrase_id", "名称": "Name", "演出时长": "The_duration_of_the_show", "剧目亮点": "Let's_get_this_show_on_the_air", "演出团队": "The_show_team", "导演": "Director", "VIP票余量": "VIP_Balance", "888票价余量": "888_leftovers", "688票价余量": "688_ticket_balances", "488票价余量": "488_ticket_balances", "288票价余量": "288_leftovers", "188票价余量": "188_leftovers", "100票价余量": "100_leftovers", "话剧id": "Theater_id", "上映日期": "Date_of_presentation", "时间段": "Period", "演出场馆": "The_show_house", "城市": "Urban", "上映场次": "Show_time", "演出城市": "City_of_the_show", "总票数": "Number_of_ballot_papers", "演出语言": "Language_of_performance", "总场数": "Total_number_of_sites", "音乐剧id": "Musical_id", "场次": "Fields", "演出日期": "Date_of_performance", "演出时间段": "Period_of_performance", "主要演员": "The_lead_actor"}, "table_en": {"话剧": "The_play", "话剧一周上映": "It's_a_week's_show", "上映城市": "Show_City", "音乐剧": "Musical", "音乐剧演出": "Musical_performances"}}, "中国餐饮公司": {"sqlite": "CREATE TABLE 城市 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  所属省份 VARCHAR(50), -- Provinces to which they belong\n  餐饮收入 VARCHAR(50), -- Catering income\n  同比增长 INTEGER, -- Year-on-year growth\n);\nCREATE TABLE 餐饮公司 (\n  词条id INTEGER PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  总部城市id VARCHAR(50), -- Headquarters cityd\n  所属集团 VARCHAR(50), -- Groups to which they belong\n  上市股市 VARCHAR(50), -- Listed stock market\n  经营范围 VARCHAR(50), -- Scope of operation\n  经营年数 VARCHAR(50), -- Years of operation\n);\nCREATE TABLE 餐饮公司城市连锁 (\n  公司id INTEGER PRIMARY KEY, -- Companyid\n  城市id INTEGER, -- Urban id\n  分店数量 INTEGER, -- Number of branches\n  占地面积 INTEGER, -- Area of land area\n  餐位数量 INTEGER, -- Number of places\n  员工数量 INTEGER, -- Number of employees\n);\nCREATE TABLE 餐饮公司城市消费 (\n  公司id INTEGER PRIMARY KEY, -- Companyid\n  城市id INTEGER, -- Urban id\n  总消费额 INTEGER, -- Total consumption\n  人均消费额 INTEGER, -- Consumption per capita\n  人气 INTEGER, -- It's human\n  排名 INTEGER, -- Rank\n);\n-- 餐饮公司城市消费.城市id can be joined with 城市.城市\n-- 餐饮公司.总部城市id can be joined with 城市.城市\n-- 餐饮公司城市消费.公司id can be joined with 餐饮公司.餐饮公司\n-- 餐饮公司城市连锁.公司id can be joined with 餐饮公司.餐饮公司\n-- 餐饮公司城市连锁.城市id can be joined with 城市.城市", "columns_en": {"词条id": "Phrase_id", "名称": "Name", "所属省份": "Provinces_to_which_they_belong", "餐饮收入": "Catering_income", "同比增长": "Year-on-year_growth", "总部城市id": "Headquarters_cityd", "所属集团": "Groups_to_which_they_belong", "上市股市": "Listed_stock_market", "经营范围": "Scope_of_operation", "经营年数": "Years_of_operation", "公司id": "Companyid", "城市id": "Urban_id", "分店数量": "Number_of_branches", "占地面积": "Area_of_land_area", "餐位数量": "Number_of_places", "员工数量": "Number_of_employees", "总消费额": "Total_consumption", "人均消费额": "Consumption_per_capita", "人气": "It's_human", "排名": "Rank"}, "table_en": {"城市": "Urban", "餐饮公司": "Catering_Company", "餐饮公司城市连锁": "The_catering_company's_city_chain", "餐饮公司城市消费": "Municipal_consumption_of_catering_companies"}}, "福利及法规": {"sqlite": "CREATE TABLE 各国假期 (\n  国家 VARCHAR(50) PRIMARY KEY, -- National\n  假期总天数 VARCHAR(50), -- Total days of leave\n  带薪年假 INTEGER, -- Annual leave with pay\n  公共假期 INTEGER, -- Public holidays\n  排名 INTEGER, -- Rank\n);\nCREATE TABLE 各国产假 (\n  国家 INTEGER PRIMARY KEY, -- National\n  产假总天数 VARCHAR(50), -- Total number of days of maternity leave\n  工资比例 INTEGER, -- Proportion of wages\n);\nCREATE TABLE 各国税率 (\n  国家 INTEGER PRIMARY KEY, -- National\n  年总税率 VARCHAR(50), -- Total annual tax rate\n  个税最高税率 INTEGER, -- The maximum tax rate\n  社保费率 INTEGER, -- Social security rates\n  企业所得税税率 INTEGER, -- Enterprise income tax rate\n);\nCREATE TABLE 各国医疗支出占比 (\n  国家 INTEGER PRIMARY KEY, -- National\n  医疗支出占GDP比重 VARCHAR(50), -- Health expenditure as a percentage of GDP\n);\n", "columns_en": {"国家": "National", "假期总天数": "Total_days_of_leave", "带薪年假": "Annual_leave_with_pay", "公共假期": "Public_holidays", "排名": "Rank", "产假总天数": "Total_number_of_days_of_maternity_leave", "工资比例": "Proportion_of_wages", "年总税率": "Total_annual_tax_rate", "个税最高税率": "The_maximum_tax_rate", "社保费率": "Social_security_rates", "企业所得税税率": "Enterprise_income_tax_rate", "医疗支出占GDP比重": "Health_expenditure_as_a_percentage_of_GDP"}, "table_en": {"各国假期": "National_holidays", "各国产假": "National_maternity_leave", "各国税率": "National_tax_rates", "各国医疗支出占比": "Proportion_of_health-care_expenditure_by_country"}}, "NLP会议": {"sqlite": "CREATE TABLE 会议 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  成立时间 VARCHAR(50), --  Other Organiser\n  级别 DATETIME, -- Level\n);\nCREATE TABLE 各会议论文 (\n  会议id VARCHAR(50) PRIMARY KEY, -- Session id\n  年份 INTEGER, -- Year\n  长文提交量 DATETIME, -- Long file submission\n  长文录取率 INTEGER, -- Enrolment rate in Long Language\n  短文提交量 INTEGER, -- Short submissions\n  短文录取率 INTEGER, -- Enrollment rate in short books\n);\nCREATE TABLE 各会议论文大洲分布 (\n  会议id INTEGER PRIMARY KEY, -- Session id\n  年份 INTEGER, -- Year\n  大洲 DATETIME, -- Continent\n  提交数量占比 VARCHAR(50), -- Number of submissions as a percentage\n);\nCREATE TABLE 各会议论文国家分布 (\n  会议id INTEGER PRIMARY KEY, -- Session id\n  年份 INTEGER, -- Year\n  国家 DATETIME, -- National\n  提交数量占比 VARCHAR(50), -- Number of submissions as a percentage\n);\nCREATE TABLE 2019年会议各方向分布 (\n  方向名称 INTEGER PRIMARY KEY, -- Direction Name\n  会议id VARCHAR(50), -- Session id\n  长文提交量 INTEGER, -- Long file submission\n  长文录取率 INTEGER, -- Enrolment rate in Long Language\n  短文提交量 INTEGER, -- Short submissions\n  短文录取率 INTEGER, -- Enrollment rate in short books\n);\n-- 各会议论文.会议id can be joined with 会议.会议\n-- 各会议论文大洲分布.会议id can be joined with 会议.会议\n-- 各会议论文国家分布.会议id can be joined with 会议.会议\n-- 2019年会议各方向分布.会议id can be joined with 会议.会议", "columns_en": {"词条id": "Phrase_id", "名称": "Name", "成立时间": "_Other_Organiser", "级别": "Level", "会议id": "Session_id", "年份": "Year", "长文提交量": "Long_file_submission", "长文录取率": "Enrolment_rate_in_Long_Language", "短文提交量": "Short_submissions", "短文录取率": "Enrollment_rate_in_short_books", "大洲": "Continent", "提交数量占比": "Number_of_submissions_as_a_percentage", "国家": "National", "方向名称": "Direction_Name"}, "table_en": {"会议": "Meetings", "各会议论文": "Papers_at_meetings", "各会议论文大洲分布": "Continent_distribution_of_conference_papers", "各会议论文国家分布": "Country_distribution_of_conference_papers", "2019年会议各方向分布": "Distribution_of_meetings_in_2019"}}, "软件排行": {"sqlite": "CREATE TABLE 应用商店 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  应用软件数 VARCHAR(50), -- Number of applications\n  累计下载次数 INTEGER, -- Cumulative number of downloads\n);\nCREATE TABLE 应用商店支持国家 (\n  应用商店id INTEGER PRIMARY KEY, -- Appliance shopid\n  国家 INTEGER, -- National\n  用户是否可以购买应用程序 VARCHAR(50), -- Whether applications can be purchased by the user\n  开发人员是否可以出售应用程序 BINARY, -- Possibility for developers to sell applications\n);\nCREATE TABLE 软件 (\n  词条id BINARY PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  用途 VARCHAR(50), -- Use\n);\nCREATE TABLE 软件下载量 (\n  软件id VARCHAR(50) PRIMARY KEY, -- Softwareid\n  应用商店id INTEGER, -- Appliance shopid\n  下载量 INTEGER, -- Downloads\n  评价人数 INTEGER, -- Number of evaluations\n  好评数 INTEGER, -- Good assessment\n);\n-- 应用商店支持国家.应用商店id can be joined with 应用商店.应用商店\n-- 软件下载量.软件id can be joined with 软件.软件\n-- 软件下载量.应用商店id can be joined with 应用商店.应用商店", "columns_en": {"词条id": "Phrase_id", "名称": "Name", "应用软件数": "Number_of_applications", "累计下载次数": "Cumulative_number_of_downloads", "应用商店id": "Appliance_shopid", "国家": "National", "用户是否可以购买应用程序": "Whether_applications_can_be_purchased_by_the_user", "开发人员是否可以出售应用程序": "Possibility_for_developers_to_sell_applications", "用途": "Use", "软件id": "Softwareid", "下载量": "Downloads", "评价人数": "Number_of_evaluations", "好评数": "Good_assessment"}, "table_en": {"应用商店": "Apply_Shops", "应用商店支持国家": "Applied_shops_to_support_the_country", "软件": "Software", "软件下载量": "Software_downloads"}}, "公务员考试": {"sqlite": "CREATE TABLE 各省份报名人数 (\n  省份 VARCHAR(50) PRIMARY KEY, -- Province\n  岗位数 VARCHAR(50), -- Number of posts\n  招考人数 INTEGER, -- Number of candidates\n  报名人数 INTEGER, -- Number of persons registered\n  0报名职位数量 INTEGER, -- Number of job openings\n  合格人数 INTEGER, -- Number of eligible persons\n  0合格职位数量 INTEGER, -- Number of eligible posts\n  竞争比 INTEGER, -- Competition\n);\nCREATE TABLE 各职位报名人数 (\n  职位名称 INTEGER PRIMARY KEY, -- Name of position\n  部门名称 VARCHAR(50), -- Name of department\n  所属地区 VARCHAR(50), -- Territory to which it belongs\n  招考人数 VARCHAR(50), -- Number of candidates\n  报考人数 INTEGER, -- Number of applicants\n  合格人数 INTEGER, -- Number of eligible persons\n);\nCREATE TABLE 各国野鸡大学数量 (\n  国家 INTEGER PRIMARY KEY, -- National\n  大学数量 VARCHAR(50), -- Number of universities\n  野鸡大学数量 INTEGER, -- Number of pheasant universities\n);\nCREATE TABLE 中国各城市野鸡大学数量 (\n  城市 INTEGER PRIMARY KEY, -- Urban\n  野鸡大学数量 VARCHAR(50), -- Number of pheasant universities\n  占比 INTEGER, -- Percentage\n);\n-- 各职位报名人数.所属地区 can be joined with 各省份报名人数.各省份报名人数", "columns_en": {"省份": "Province", "岗位数": "Number_of_posts", "招考人数": "Number_of_candidates", "报名人数": "Number_of_persons_registered", "0报名职位数量": "Number_of_job_openings", "合格人数": "Number_of_eligible_persons", "0合格职位数量": "Number_of_eligible_posts", "竞争比": "Competition", "职位名称": "Name_of_position", "部门名称": "Name_of_department", "所属地区": "Territory_to_which_it_belongs", "报考人数": "Number_of_applicants", "国家": "National", "大学数量": "Number_of_universities", "野鸡大学数量": "Number_of_pheasant_universities", "城市": "Urban", "占比": "Percentage"}, "table_en": {"各省份报名人数": "Enrolment_by_province", "各职位报名人数": "Number_of_persons_enrolled_in_each_position", "各国野鸡大学数量": "Number_of_pheasant_universities_in_various_countries", "中国各城市野鸡大学数量": "Number_of_pheasant_universities_in_Chinese_cities"}}, "车展": {"sqlite": "CREATE TABLE 车展 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  车展时间 VARCHAR(50), -- Car show time\n  参展天数 DATETIME, -- Days of exhibition\n  车展地点 INTEGER, -- Location of the vehicle exhibition\n  位于城市 VARCHAR(50), -- It's in the city\n  参展品牌数 VARCHAR(50), -- Number of display brands\n);\nCREATE TABLE 汽车品牌 (\n  词条id INTEGER PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  所属公司 VARCHAR(50), -- Company to which it belongs\n  最低价格 VARCHAR(50), -- Minimum price\n  最高价格 INTEGER, -- Maximum price\n  代言人 INTEGER, -- Advocate\n);\nCREATE TABLE 车展参展品牌 (\n  品牌id VARCHAR(50) PRIMARY KEY, -- Brandid\n  车展id INTEGER, -- Car show id\n  站台模特 INTEGER, -- Station model\n  热度排名 VARCHAR(50), -- Heat Rating\n);\n-- 车展参展品牌.品牌id can be joined with 汽车品牌.汽车品牌\n-- 车展参展品牌.车展id can be joined with 车展.车展", "columns_en": {"词条id": "Phrase_id", "名称": "Name", "车展时间": "Car_show_time", "参展天数": "Days_of_exhibition", "车展地点": "Location_of_the_vehicle_exhibition", "位于城市": "It's_in_the_city", "参展品牌数": "Number_of_display_brands", "所属公司": "Company_to_which_it_belongs", "最低价格": "Minimum_price", "最高价格": "Maximum_price", "代言人": "Advocate", "品牌id": "Brandid", "车展id": "Car_show_id", "站台模特": "Station_model", "热度排名": "Heat_Rating"}, "table_en": {"车展": "Car_show", "汽车品牌": "Automobile_brand", "车展参展品牌": "Car_show_brand"}}, "中国电视剧奖项": {"sqlite": "CREATE TABLE 中国电视剧奖 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  主办单位 VARCHAR(50), -- Host\n  创办时间 VARCHAR(50), --  Other Organiser\n);\nCREATE TABLE 演职员 (\n  词条id DATETIME PRIMARY KEY, -- Phrase id\n  姓名 INTEGER, -- Name\n  出生地 VARCHAR(50), -- Place of birth\n  出生日期 VARCHAR(50), -- Date of birth\n  毕业院校 DATETIME, -- Graduate schools\n  职业 VARCHAR(50), -- Occupation\n);\nCREATE TABLE 电视剧 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  类型 VARCHAR(50), -- Type\n  首播时间 VARCHAR(50), -- Launch time\n  集数 DATETIME, -- Collections\n  豆瓣评分 INTEGER, -- Bean petals\n);\nCREATE TABLE 历届颁奖晚会 (\n  年份 INTEGER PRIMARY KEY, -- Year\n  届数 DATETIME, -- Number of sessions\n  电视剧奖id INTEGER, -- Television drama prized\n  颁奖地点 INTEGER, -- Award location\n);\nCREATE TABLE 历届获奖演职员名单 (\n  年份 VARCHAR(50) PRIMARY KEY, -- Year\n  届数 DATETIME, -- Number of sessions\n  电视剧奖id INTEGER, -- Television drama prized\n  具体奖项 INTEGER, -- Specific awards\n  获奖人id VARCHAR(50), -- Laureate id\n  来自电视剧id INTEGER, -- From the TV play id\n);\nCREATE TABLE 历届获奖影视剧名单 (\n  年份 INTEGER PRIMARY KEY, -- Year\n  届数 DATETIME, -- Number of sessions\n  电视剧奖id INTEGER, -- Television drama prized\n  具体奖项 INTEGER, -- Specific awards\n  获奖电视剧id VARCHAR(50), -- Award-winning TV dramad\n);\n-- 历届颁奖晚会.电视剧奖id can be joined with 中国电视剧奖.中国电视剧奖\n-- 历届获奖演职员名单.电视剧奖id can be joined with 中国电视剧奖.中国电视剧奖\n-- 历届获奖演职员名单.获奖人id can be joined with 演职员.演职员\n-- 历届获奖影视剧名单.获奖电视剧id can be joined with 电视剧.电视剧\n-- 历届获奖影视剧名单.电视剧奖id can be joined with 中国电视剧奖.中国电视剧奖", "columns_en": {"词条id": "Phrase_id", "名称": "Name", "主办单位": "Host", "创办时间": "_Other_Organiser", "姓名": "Name", "出生地": "Place_of_birth", "出生日期": "Date_of_birth", "毕业院校": "Graduate_schools", "职业": "Occupation", "类型": "Type", "首播时间": "Launch_time", "集数": "Collections", "豆瓣评分": "Bean_petals", "年份": "Year", "届数": "Number_of_sessions", "电视剧奖id": "Television_drama_prized", "颁奖地点": "Award_location", "具体奖项": "Specific_awards", "获奖人id": "Laureate_id", "来自电视剧id": "From_the_TV_play_id", "获奖电视剧id": "Award-winning_TV_dramad"}, "table_en": {"中国电视剧奖": "Chinese_TV_drama_awards", "演职员": "Actor", "电视剧": "A_TV_show", "历届颁奖晚会": "Successive_awards_parties", "历届获奖演职员名单": "List_of_prize-winning_staff", "历届获奖影视剧名单": "List_of_prize-winning_films"}}, "小说改编电视剧": {"sqlite": "CREATE TABLE 电视剧 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  剧名 INTEGER, -- The title of the play\n  首播时间 VARCHAR(50), -- Launch time\n  集数 DATETIME, -- Collections\n);\nCREATE TABLE 小说 (\n  词条id INTEGER PRIMARY KEY, -- Phrase id\n  小说名 INTEGER, -- It's a novel\n  作者 VARCHAR(50), -- Author\n  字数 VARCHAR(50), -- Words\n  状态 INTEGER, -- Status\n);\nCREATE TABLE 改编的电视剧 (\n  小说id VARCHAR(50) PRIMARY KEY, -- novel id\n  电视剧id INTEGER, -- TV dramad\n  评分 INTEGER, -- Rating\n);\n-- 改编的电视剧.电视剧id can be joined with 电视剧.电视剧\n-- 改编的电视剧.小说id can be joined with 小说.小说", "columns_en": {"词条id": "Phrase_id", "剧名": "The_title_of_the_play", "首播时间": "Launch_time", "集数": "Collections", "小说名": "It's_a_novel", "作者": "Author", "字数": "Words", "状态": "Status", "小说id": "novel_id", "电视剧id": "TV_dramad", "评分": "Rating"}, "table_en": {"电视剧": "A_TV_show", "小说": "Novel", "改编的电视剧": "It's_a_revised_TV_show"}}, "毕业生薪资": {"sqlite": "CREATE TABLE 学校 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  类型 VARCHAR(50), -- Type\n  所在城市 VARCHAR(50), -- It's in the city\n  所属省份 VARCHAR(50), -- Provinces to which they belong\n  是否985院校 VARCHAR(50), -- No  985 Colleges\n  是否211院校 BINARY, -- Is it 211?\n  2016届平均月薪 BINARY, -- Average monthly salary for 2016\n  2014届平均月薪 INTEGER, -- Average monthly salary for 2014\n  2012届平均月薪 INTEGER, -- Average monthly salary for 2012\n);\nCREATE TABLE 学校毕业人数 (\n  学校id INTEGER PRIMARY KEY, -- School id\n  学历 INTEGER, -- Education\n  2016届人数 VARCHAR(50), -- Number of persons in 2016\n  2014届人数 INTEGER, -- Number of sessions in 2014\n  2012届人数 INTEGER, -- Number of sessions held in 2012\n);\nCREATE TABLE 专业 (\n  词条id INTEGER PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  学科类型 VARCHAR(50), -- Type of discipline\n  冷热门 VARCHAR(50), -- It's cold and hot\n);\nCREATE TABLE 学校专业 (\n  专业id BINARY PRIMARY KEY, -- Professional id\n  学校id INTEGER, -- School id\n  是否重点专业 INTEGER, -- Focusing on professions\n);\nCREATE TABLE 专业就业情况 (\n  专业id BINARY PRIMARY KEY, -- Professional id\n  2016届平均月薪 INTEGER, -- Average monthly salary for 2016\n  2014届平均月薪 INTEGER, -- Average monthly salary for 2014\n  2012届平均月薪 INTEGER, -- Average monthly salary for 2012\n  2016届就业率 INTEGER, -- Employment rate in 2016\n  2014届就业率 INTEGER, -- Employment rate in 2014\n  2012届就业率 INTEGER, -- Employment rate in 2012\n);\n-- 学校毕业人数.学校id can be joined with 学校.学校\n-- 学校专业.专业id can be joined with 专业.专业\n-- 专业就业情况.专业id can be joined with 专业.专业\n-- 学校专业.学校id can be joined with 学校.学校", "columns_en": {"词条id": "Phrase_id", "名称": "Name", "类型": "Type", "所在城市": "It's_in_the_city", "所属省份": "Provinces_to_which_they_belong", "是否985院校": "No__985_Colleges", "是否211院校": "Is_it_211?", "2016届平均月薪": "Average_monthly_salary_for_2016", "2014届平均月薪": "Average_monthly_salary_for_2014", "2012届平均月薪": "Average_monthly_salary_for_2012", "学校id": "School_id", "学历": "Education", "2016届人数": "Number_of_persons_in_2016", "2014届人数": "Number_of_sessions_in_2014", "2012届人数": "Number_of_sessions_held_in_2012", "学科类型": "Type_of_discipline", "冷热门": "It's_cold_and_hot", "专业id": "Professional_id", "是否重点专业": "Focusing_on_professions", "2016届就业率": "Employment_rate_in_2016", "2014届就业率": "Employment_rate_in_2014", "2012届就业率": "Employment_rate_in_2012"}, "table_en": {"学校": "School", "学校毕业人数": "Number_of_school_graduates", "专业": "Professional", "学校专业": "School_specialization", "专业就业情况": "Professional_employment"}}, "中国文学奖": {"sqlite": "CREATE TABLE 文学奖 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  设立时间 VARCHAR(50), -- Establishment\n  设立原因 DATETIME, -- Reasons for establishment\n  举办间隔年限 VARCHAR(50), -- Number of years held\n);\nCREATE TABLE 文学奖项颁奖奖项 (\n  文学奖id INTEGER PRIMARY KEY, -- Literary prized\n  奖项 INTEGER, -- Awards\n);\nCREATE TABLE 文学作品 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  作者 VARCHAR(50), -- Author\n  创作年代 INTEGER, -- The time of creation\n  首版时间 INTEGER, -- First release time\n  字数 DATETIME, -- Words\n);\nCREATE TABLE 文学奖获奖名单 (\n  届数 VARCHAR(50) PRIMARY KEY, -- Number of sessions\n  作品id INTEGER, -- Worksid\n  作者 INTEGER, -- Author\n  出版社 VARCHAR(50), -- Publications\n);\n-- 文学奖获奖名单.作品id can be joined with 文学作品.文学作品\n-- 文学奖项颁奖奖项.文学奖id can be joined with 文学奖.文学奖", "columns_en": {"词条id": "Phrase_id", "名称": "Name", "设立时间": "Establishment", "设立原因": "Reasons_for_establishment", "举办间隔年限": "Number_of_years_held", "文学奖id": "Literary_prized", "奖项": "Awards", "作者": "Author", "创作年代": "The_time_of_creation", "首版时间": "First_release_time", "字数": "Words", "届数": "Number_of_sessions", "作品id": "Worksid", "出版社": "Publications"}, "table_en": {"文学奖": "Literary_prizes", "文学奖项颁奖奖项": "Awards_for_literary_awards", "文学作品": "Literary_works", "文学奖获奖名单": "List_of_prizes_for_literature"}}, "互联网企业": {"sqlite": "CREATE TABLE 公司 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  总部地点 VARCHAR(50), -- Headquarters locations\n  成立时间 VARCHAR(50), --  Other Organiser\n  创始人 DATETIME, -- Founder\n  首席执行官 VARCHAR(50), -- Chief Executive Officer\n  年营业额 DATETIME, -- Annual turnover\n  员工数 INTEGER, -- Number of employees\n);\nCREATE TABLE 品牌 (\n  词条id INTEGER PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  成立时间 VARCHAR(50), --  Other Organiser\n  所属公司id DATETIME, -- Company to which Id belongs\n  法定代表人 VARCHAR(50), -- Statutory representatives\n  注册资本 VARCHAR(50), -- Registered capital\n);\nCREATE TABLE 公司品牌历年收入 (\n  年份 INTEGER PRIMARY KEY, -- Year\n  品牌id DATETIME, -- Brandid\n  营收 INTEGER, -- Collection\n  利润 INTEGER, -- Profit\n  营收同比增长 INTEGER, -- Growth in revenue on a year-on-year basis\n  利润同比增长 INTEGER, -- Profit growth per year\n);\nCREATE TABLE 公司各品牌收入排名 (\n  公司id INTEGER PRIMARY KEY, -- Companyid\n  品牌id INTEGER, -- Brandid\n  营收占比 INTEGER, -- Percentage of revenue received\n  利润占比 INTEGER, -- Profit ratio\n  支出占比 INTEGER, -- Expenditure as a percentage\n);\n-- 品牌.所属公司id can be joined with 公司.公司\n-- 公司各品牌收入排名.公司id can be joined with 公司.公司\n-- 公司各品牌收入排名.品牌id can be joined with 品牌.品牌\n-- 公司品牌历年收入.品牌id can be joined with 品牌.品牌", "columns_en": {"词条id": "Phrase_id", "名称": "Name", "总部地点": "Headquarters_locations", "成立时间": "_Other_Organiser", "创始人": "Founder", "首席执行官": "Chief_Executive_Officer", "年营业额": "Annual_turnover", "员工数": "Number_of_employees", "所属公司id": "Company_to_which_Id_belongs", "法定代表人": "Statutory_representatives", "注册资本": "Registered_capital", "年份": "Year", "品牌id": "Brandid", "营收": "Collection", "利润": "Profit", "营收同比增长": "Growth_in_revenue_on_a_year-on-year_basis", "利润同比增长": "Profit_growth_per_year", "公司id": "Companyid", "营收占比": "Percentage_of_revenue_received", "利润占比": "Profit_ratio", "支出占比": "Expenditure_as_a_percentage"}, "table_en": {"公司": "Company", "品牌": "Brand", "公司品牌历年收入": "Corporate_branding_revenue_from_previous_years", "公司各品牌收入排名": "Corporate_brand_income_rankings"}}, "中国传统节日": {"sqlite": "CREATE TABLE 传统节日 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  节日时间 VARCHAR(50), -- Holiday time\n  起源时间 DATETIME, -- Time of origin\n);\nCREATE TABLE 节日流行国家 (\n  节日id VARCHAR(50) PRIMARY KEY, -- Holidayid\n  国家 INTEGER, -- National\n  活动 VARCHAR(50), -- Activities\n);\nCREATE TABLE 节日饮食文化 (\n  节日id VARCHAR(50) PRIMARY KEY, -- Holidayid\n  城市 INTEGER, -- Urban\n  饮食 VARCHAR(50), -- Diet\n);\n-- 节日流行国家.节日id can be joined with 传统节日.传统节日\n-- 节日饮食文化.节日id can be joined with 传统节日.传统节日", "columns_en": {"词条id": "Phrase_id", "名称": "Name", "节日时间": "Holiday_time", "起源时间": "Time_of_origin", "节日id": "Holidayid", "国家": "National", "活动": "Activities", "城市": "Urban", "饮食": "Diet"}, "table_en": {"传统节日": "Traditional_festivals", "节日流行国家": "Festivities_Populaire_Countries", "节日饮食文化": "Holiday_dietary_culture"}}, "各城市天气": {"sqlite": "CREATE TABLE 城市温度 (\n  城市 VARCHAR(50) PRIMARY KEY, -- Urban\n  夏季平均温度 VARCHAR(50), -- Average summer temperature\n  冬季平均温度 INTEGER, -- Average winter temperature\n  年平均温度 INTEGER, -- Average annual temperature\n);\nCREATE TABLE 各城市极端高温 (\n  城市 INTEGER PRIMARY KEY, -- Urban\n  极端高温 VARCHAR(50), -- Extremely high temperature\n  出现日期 INTEGER, -- Date of occurrence\n);\nCREATE TABLE 各城市极端低温 (\n  城市 DATETIME PRIMARY KEY, -- Urban\n  极端低温 VARCHAR(50), -- Extremely hypothermia\n  出现日期 INTEGER, -- Date of occurrence\n);\nCREATE TABLE 各城市各月平均气温 (\n  城市 DATETIME PRIMARY KEY, -- Urban\n  一月 VARCHAR(50), -- January\n  二月 INTEGER, -- February\n  三月 INTEGER, -- March\n  四月 INTEGER, -- April\n  五月 INTEGER, -- May\n  六月 INTEGER, -- June\n  七月 INTEGER, -- July\n  八月 INTEGER, -- August\n  九月 INTEGER, -- September\n  十月 INTEGER, -- October\n  十一月 INTEGER, -- November\n  十二月 INTEGER, -- December\n);\nCREATE TABLE 各城市各月平均降水量mm (\n  城市 INTEGER PRIMARY KEY, -- Urban\n  一月 VARCHAR(50), -- January\n  二月 INTEGER, -- February\n  三月 INTEGER, -- March\n  四月 INTEGER, -- April\n  五月 INTEGER, -- May\n  六月 INTEGER, -- June\n  七月 INTEGER, -- July\n  八月 INTEGER, -- August\n  九月 INTEGER, -- September\n  十月 INTEGER, -- October\n  十一月 INTEGER, -- November\n  十二月 INTEGER, -- December\n);\n", "columns_en": {"城市": "Urban", "夏季平均温度": "Average_summer_temperature", "冬季平均温度": "Average_winter_temperature", "年平均温度": "Average_annual_temperature", "极端高温": "Extremely_high_temperature", "出现日期": "Date_of_occurrence", "极端低温": "Extremely_hypothermia", "一月": "January", "二月": "February", "三月": "March", "四月": "April", "五月": "May", "六月": "June", "七月": "July", "八月": "August", "九月": "September", "十月": "October", "十一月": "November", "十二月": "December"}, "table_en": {"城市温度": "Urban_temperature", "各城市极端高温": "The_cities_are_extremely_hot", "各城市极端低温": "The_cities_are_extremely_cold", "各城市各月平均气温": "Average_monthly_temperatures_per_city", "各城市各月平均降水量mm": "Average_monthly_rainfall_per_city_mm"}}, "世界旅游城市": {"sqlite": "CREATE TABLE 城市 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  国家 VARCHAR(50), -- National\n  2017年世界排名 VARCHAR(50), -- World ranking  2017\n  2018年世界排名 INTEGER, -- World ranking in 2018\n  2019年世界排名 INTEGER, -- World ranking 2019\n);\nCREATE TABLE 旅游人数 (\n  年份 INTEGER PRIMARY KEY, -- Year\n  城市id DATETIME, -- Urban id\n  接待人口 INTEGER, -- Population receiving\n  收入 INTEGER, -- Income\n);\n-- 旅游人数.城市id can be joined with 城市.城市", "columns_en": {"词条id": "Phrase_id", "名称": "Name", "国家": "National", "2017年世界排名": "World_ranking__2017", "2018年世界排名": "World_ranking_in_2018", "2019年世界排名": "World_ranking_2019", "年份": "Year", "城市id": "Urban_id", "接待人口": "Population_receiving", "收入": "Income"}, "table_en": {"城市": "Urban", "旅游人数": "Number_of_tourists"}}, "用户出行用车": {"sqlite": "CREATE TABLE 滴滴打车出行 (\n  季节 VARCHAR(50) PRIMARY KEY, -- Season\n  是否工作日 VARCHAR(50), -- Could not close temporary folder: %s\n  温度 BINARY, -- Temperature\n  湿度 INTEGER, -- Humidity\n  风速 INTEGER, -- Wind speed\n  日订单数量 INTEGER, -- Number of day orders\n  人均打车次数 INTEGER, -- Number of taxis per person\n  平均等待时间 INTEGER, -- Average waiting time\n);\nCREATE TABLE 共享单车出行 (\n  季节 INTEGER PRIMARY KEY, -- Season\n  是否工作日 VARCHAR(50), -- Could not close temporary folder: %s\n  温度 BINARY, -- Temperature\n  湿度 INTEGER, -- Humidity\n  风速 INTEGER, -- Wind speed\n  人均骑车次数 INTEGER, -- Number of cyclings per person\n  人均骑车距离 INTEGER, -- Ride distance per person\n);\n", "columns_en": {"季节": "Season", "是否工作日": "Could_not_close_temporary_folder:_%s", "温度": "Temperature", "湿度": "Humidity", "风速": "Wind_speed", "日订单数量": "Number_of_day_orders", "人均打车次数": "Number_of_taxis_per_person", "平均等待时间": "Average_waiting_time", "人均骑车次数": "Number_of_cyclings_per_person", "人均骑车距离": "Ride_distance_per_person"}, "table_en": {"滴滴打车出行": "The_drop-and-drop_trip", "共享单车出行": "Share_bike_travels"}}, "劳伦斯世界体育奖": {"sqlite": "CREATE TABLE 运动员 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  姓名 INTEGER, -- Name\n  性别 VARCHAR(50), -- Gender\n  国籍 VARCHAR(50), -- Nationality\n  体育项目 VARCHAR(50), -- Sports projects\n);\nCREATE TABLE 劳伦斯提名名单 (\n  年份 VARCHAR(50) PRIMARY KEY, -- Year\n  提名人id DATETIME, -- Nominee id\n  提名奖项 INTEGER, -- Nomination of awards\n  提名理由 VARCHAR(50), -- Reasons for nomination\n);\nCREATE TABLE 劳伦斯获奖名单 (\n  年份 VARCHAR(50) PRIMARY KEY, -- Year\n  奖项 DATETIME, -- Awards\n  获奖人id VARCHAR(50), -- Laureate id\n);\nCREATE TABLE 劳伦斯获奖国家名单 (\n  国家 INTEGER PRIMARY KEY, -- National\n  获奖人性别 VARCHAR(50), -- Gender of winners\n  获奖人数 VARCHAR(50), -- Number of winners\n  所占比例 INTEGER, -- Percentage\n);\n-- 劳伦斯获奖名单.获奖人id can be joined with 运动员.运动员\n-- 劳伦斯提名名单.提名人id can be joined with 运动员.运动员", "columns_en": {"词条id": "Phrase_id", "姓名": "Name", "性别": "Gender", "国籍": "Nationality", "体育项目": "Sports_projects", "年份": "Year", "提名人id": "Nominee_id", "提名奖项": "Nomination_of_awards", "提名理由": "Reasons_for_nomination", "奖项": "Awards", "获奖人id": "Laureate_id", "国家": "National", "获奖人性别": "Gender_of_winners", "获奖人数": "Number_of_winners", "所占比例": "Percentage"}, "table_en": {"运动员": "Athletes", "劳伦斯提名名单": "Lawrence's_nomination_list", "劳伦斯获奖名单": "Lawrence's_winning_list", "劳伦斯获奖国家名单": "List_of_countries_that_received_the_Lawrence_Award"}}, "城市市民市容": {"sqlite": "CREATE TABLE 省份 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  南北区域 VARCHAR(50), -- North-South region\n  东西区域 VARCHAR(50), -- East and West\n  5区域 VARCHAR(50), -- 5 regions\n);\nCREATE TABLE 平均身高和寿命 (\n  省份id VARCHAR(50) PRIMARY KEY, -- Province id\n  性别 INTEGER, -- Gender\n  平均身高 VARCHAR(50), -- Average height\n  平均寿命 INTEGER, -- Life expectancy\n);\nCREATE TABLE 各省美女比例 (\n  省份id INTEGER PRIMARY KEY, -- Province id\n  评价者来自区域 INTEGER, -- The evaluator came from the region\n  美女比例 VARCHAR(50), -- Proportion of beautiful women\n  美女平均颜值分数 INTEGER, -- Average color score for beautiful women\n);\nCREATE TABLE 各省市容评分 (\n  省份id INTEGER PRIMARY KEY, -- Province id\n  评价者来自区域 INTEGER, -- The evaluator came from the region\n  市容评分 VARCHAR(50), -- City Conformity Rating\n  市民素质评分 INTEGER, -- Citizen Quality Rating\n);\nCREATE TABLE 民风彪悍十大城市 (\n  城市名称 INTEGER PRIMARY KEY, -- Name of city\n  所属省份id VARCHAR(50), -- Province to which id belongs\n  排名 INTEGER, -- Rank\n);\n-- 民风彪悍十大城市.所属省份id can be joined with 省份.省份\n-- 各省市容评分.省份id can be joined with 省份.省份\n-- 平均身高和寿命.省份id can be joined with 省份.省份\n-- 各省美女比例.省份id can be joined with 省份.省份", "columns_en": {"词条id": "Phrase_id", "名称": "Name", "南北区域": "North-South_region", "东西区域": "East_and_West", "5区域": "5_regions", "省份id": "Province_id", "性别": "Gender", "平均身高": "Average_height", "平均寿命": "Life_expectancy", "评价者来自区域": "The_evaluator_came_from_the_region", "美女比例": "Proportion_of_beautiful_women", "美女平均颜值分数": "Average_color_score_for_beautiful_women", "市容评分": "City_Conformity_Rating", "市民素质评分": "Citizen_Quality_Rating", "城市名称": "Name_of_city", "所属省份id": "Province_to_which_id_belongs", "排名": "Rank"}, "table_en": {"省份": "Province", "平均身高和寿命": "Average_height_and_lifetime", "各省美女比例": "Proportion_of_beautiful_women_by_province", "各省市容评分": "Provincial_and_municipal_ratings", "民风彪悍十大城市": "The_country's_ten_big_cities"}}, "快递公司": {"sqlite": "CREATE TABLE 快递公司 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  总部地点 VARCHAR(50), -- Headquarters locations\n  成立时间 VARCHAR(50), --  Other Organiser\n  员工数量 DATETIME, -- Number of employees\n  运输车辆数 INTEGER, -- Transport vehicles\n  覆盖城市数量 INTEGER, -- Number of cities covered\n  网点数量 INTEGER, -- Number of points\n);\nCREATE TABLE 省份 (\n  词条id INTEGER PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  所属区域 VARCHAR(50), -- Organisation\n);\nCREATE TABLE 快递费 (\n  快递公司id VARCHAR(50) PRIMARY KEY, -- Express Delivery id\n  区域 INTEGER, -- Regional\n  起步价格 VARCHAR(50), -- Start price\n  起步公斤数 INTEGER, -- Number of kg starting\n  每公斤价格 INTEGER, -- Price per kilogram\n);\nCREATE TABLE 包邮范围 (\n  快递公司id INTEGER PRIMARY KEY, -- Express Delivery id\n  发货区域 INTEGER, -- Shipment area\n  包邮区域 VARCHAR(50), -- Pouch area\n);\n-- 快递费.区域 can be joined with 省份.省份\n-- 快递费.快递公司id can be joined with 快递公司.快递公司\n-- 包邮范围.包邮区域 can be joined with 省份.省份\n-- 包邮范围.快递公司id can be joined with 快递公司.快递公司\n-- 包邮范围.发货区域 can be joined with 省份.省份", "columns_en": {"词条id": "Phrase_id", "名称": "Name", "总部地点": "Headquarters_locations", "成立时间": "_Other_Organiser", "员工数量": "Number_of_employees", "运输车辆数": "Transport_vehicles", "覆盖城市数量": "Number_of_cities_covered", "网点数量": "Number_of_points", "所属区域": "Organisation", "快递公司id": "Express_Delivery_id", "区域": "Regional", "起步价格": "Start_price", "起步公斤数": "Number_of_kg_starting", "每公斤价格": "Price_per_kilogram", "发货区域": "Shipment_area", "包邮区域": "Pouch_area"}, "table_en": {"快递公司": "It's_a_delivery_company", "省份": "Province", "快递费": "Delivery_fee", "包邮范围": "Package_Scope"}}, "奥运会举办国": {"sqlite": "CREATE TABLE 夏季奥运会 (\n  届数 VARCHAR(50) PRIMARY KEY, -- Number of sessions\n  奥运会 INTEGER, -- Olympic Games\n  举办国家 VARCHAR(50), -- Host country\n  举办城市 VARCHAR(50), -- Host city\n  口号 VARCHAR(50), -- The slogan\n);\nCREATE TABLE 冬季奥运会 (\n  届数 VARCHAR(50) PRIMARY KEY, -- Number of sessions\n  奥运会 INTEGER, -- Olympic Games\n  举办国家 VARCHAR(50), -- Host country\n  举办城市 VARCHAR(50), -- Host city\n);\nCREATE TABLE 奥运会申办国家 (\n  届数 VARCHAR(50) PRIMARY KEY, -- Number of sessions\n  奥运会 INTEGER, -- Olympic Games\n  申办国家 VARCHAR(50), -- Request for a State\n  申办城市 VARCHAR(50), -- City application\n  是否成功 VARCHAR(50), -- Success\n);\n", "columns_en": {"届数": "Number_of_sessions", "奥运会": "Olympic_Games", "举办国家": "Host_country", "举办城市": "Host_city", "口号": "The_slogan", "申办国家": "Request_for_a_State", "申办城市": "City_application", "是否成功": "Success"}, "table_en": {"夏季奥运会": "Summer_Olympics", "冬季奥运会": "Winter_Olympics", "奥运会申办国家": "The_Olympic_Games_are_going_to_run_in_the_country"}}, "奢侈品消费": {"sqlite": "CREATE TABLE 奢侈品牌 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  国家 VARCHAR(50), -- National\n  熟识度 VARCHAR(50), -- I'm familiar with it\n  购买力排名 INTEGER, -- Purchasing power ranking\n);\nCREATE TABLE 奢侈品消费国家 (\n  奢侈品id INTEGER PRIMARY KEY, -- Luxury id\n  国家 INTEGER, -- National\n  年份 VARCHAR(50), -- Year\n  消费额 DATETIME, -- Consumption\n  消费额占比 INTEGER, -- Share of consumption\n);\nCREATE TABLE 奢侈品购买人群 (\n  奢侈品id INTEGER PRIMARY KEY, -- Luxury id\n  年龄段 INTEGER, -- Age group\n  购买人数 VARCHAR(50), -- Number of persons purchased\n  人数占比 INTEGER, -- Number of persons as a percentage\n  消费额 INTEGER, -- Consumption\n  消费额占比 INTEGER, -- Share of consumption\n);\nCREATE TABLE 奢侈品渠道 (\n  奢侈品id INTEGER PRIMARY KEY, -- Luxury id\n  了解渠道 INTEGER, -- Understanding channels\n  人数占比 VARCHAR(50), -- Number of persons as a percentage\n);\nCREATE TABLE 奢侈品用户在意维度分布 (\n  年龄段 INTEGER PRIMARY KEY, -- Age group\n  看中维度 VARCHAR(50), -- Look at the medium dimension\n  人数占比 VARCHAR(50), -- Number of persons as a percentage\n);\n-- 奢侈品购买人群.奢侈品id can be joined with 奢侈品牌.奢侈品牌\n-- 奢侈品渠道.奢侈品id can be joined with 奢侈品牌.奢侈品牌\n-- 奢侈品消费国家.奢侈品id can be joined with 奢侈品牌.奢侈品牌", "columns_en": {"词条id": "Phrase_id", "名称": "Name", "国家": "National", "熟识度": "I'm_familiar_with_it", "购买力排名": "Purchasing_power_ranking", "奢侈品id": "Luxury_id", "年份": "Year", "消费额": "Consumption", "消费额占比": "Share_of_consumption", "年龄段": "Age_group", "购买人数": "Number_of_persons_purchased", "人数占比": "Number_of_persons_as_a_percentage", "了解渠道": "Understanding_channels", "看中维度": "Look_at_the_medium_dimension"}, "table_en": {"奢侈品牌": "Luxury_brands", "奢侈品消费国家": "Luxury_consumer_countries", "奢侈品购买人群": "People_buying_luxury_goods", "奢侈品渠道": "Luxury_goods_channels", "奢侈品用户在意维度分布": "Luxury_users_care_about_dimensions_distribution"}}, "洗衣机": {"sqlite": "CREATE TABLE 洗衣机品牌 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  所属公司 VARCHAR(50), -- Company to which it belongs\n  成立时间 VARCHAR(50), --  Other Organiser\n  世界500强排名 DATETIME, -- The world's top 500\n  市场份额 INTEGER, -- Market share\n  2018年营业额 INTEGER, -- Operating in 2018\n  2018年利润 INTEGER, -- Profit in 2018\n);\nCREATE TABLE 洗衣机型号 (\n  词条id INTEGER PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  产品类别 VARCHAR(50), -- Product category\n  洗涤容量 VARCHAR(50), -- Laundry capacity\n  能效等级 INTEGER, -- Energy efficiency level\n  自动化程度 INTEGER, -- Level of automation\n  售价 VARCHAR(50), -- Price of sale\n  品牌id INTEGER, -- Brandid\n);\nCREATE TABLE 洗衣机品牌门店 (\n  品牌id INTEGER PRIMARY KEY, -- Brandid\n  城市 INTEGER, -- Urban\n  门店数量 VARCHAR(50), -- Number of shops\n  售卖量 INTEGER, -- Sales\n  平均售价 INTEGER, -- Average sales price\n);\nCREATE TABLE 洗衣机品牌平台评分 (\n  品牌id INTEGER PRIMARY KEY, -- Brandid\n  平台 INTEGER, -- Platform\n  总评分 VARCHAR(50), -- Total score\n  性价比得分 INTEGER, -- Pay-for-money score\n  功能得分 INTEGER, -- Function Score\n  做工得分 INTEGER, -- It's a work score\n  外观得分 INTEGER, -- Appearance score\n);\n-- 洗衣机品牌门店.品牌id can be joined with 洗衣机品牌.洗衣机品牌\n-- 洗衣机品牌平台评分.品牌id can be joined with 洗衣机品牌.洗衣机品牌\n-- 洗衣机型号.品牌id can be joined with 洗衣机品牌.洗衣机品牌", "columns_en": {"词条id": "Phrase_id", "名称": "Name", "所属公司": "Company_to_which_it_belongs", "成立时间": "_Other_Organiser", "世界500强排名": "The_world's_top_500", "市场份额": "Market_share", "2018年营业额": "Operating_in_2018", "2018年利润": "Profit_in_2018", "产品类别": "Product_category", "洗涤容量": "Laundry_capacity", "能效等级": "Energy_efficiency_level", "自动化程度": "Level_of_automation", "售价": "Price_of_sale", "品牌id": "Brandid", "城市": "Urban", "门店数量": "Number_of_shops", "售卖量": "Sales", "平均售价": "Average_sales_price", "平台": "Platform", "总评分": "Total_score", "性价比得分": "Pay-for-money_score", "功能得分": "Function_Score", "做工得分": "It's_a_work_score", "外观得分": "Appearance_score"}, "table_en": {"洗衣机品牌": "Laundry_machine_brand", "洗衣机型号": "Type_of_washing_machine", "洗衣机品牌门店": "Laundry_brand_door", "洗衣机品牌平台评分": "Laundry_machine_branding_platform_rating"}}, "购物网站": {"sqlite": "CREATE TABLE 公司 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  成立时间 VARCHAR(50), --  Other Organiser\n  创始人 DATETIME, -- Founder\n  所属省份 VARCHAR(50), -- Provinces to which they belong\n);\nCREATE TABLE 购物网 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  网站名称 INTEGER, -- Name of website\n  所属公司id VARCHAR(50), -- Company to which Id belongs\n  上线时间 INTEGER, -- Online time\n  官网 DATETIME, -- Official Network\n  百度权重 VARCHAR(50), -- 100% weight\n  PR值 INTEGER, -- PPR Value\n  反链数 INTEGER, -- Inverse number\n  综合分数 INTEGER, -- Combined Scores\n  总排名 INTEGER, -- Total ranking\n  所在省排名 INTEGER, --  Other Organiser\n  电商网站排名 INTEGER, -- The company's website is ranked\n);\nCREATE TABLE 活动日 (\n  词条id INTEGER PRIMARY KEY, -- Phrase id\n  活动名称 INTEGER, -- Name of activity\n  时间 VARCHAR(50), -- Time\n  发明公司id DATETIME, -- Inventoriesid\n);\nCREATE TABLE 网站活动收入 (\n  网站id INTEGER PRIMARY KEY, -- Websiteid\n  活动id INTEGER, -- Activity id\n  年份 INTEGER, -- Year\n  下单金额 DATETIME, -- Next single amount\n  同比增长 INTEGER, -- Year-on-year growth\n);\nCREATE TABLE 网站打假 (\n  网站id INTEGER PRIMARY KEY, -- Websiteid\n  年份 INTEGER, -- Year\n  315提名次数 DATETIME, -- 315 nominations\n  买家打假次数 INTEGER, -- Number of false claims made by buyers\n  同比增长 INTEGER, -- Year-on-year growth\n);\n-- 购物网.所属公司id can be joined with 公司.公司\n-- 网站打假.网站id can be joined with 购物网.购物网\n-- 网站活动收入.网站id can be joined with 购物网.购物网\n-- 活动日.发明公司id can be joined with 公司.公司\n-- 网站活动收入.活动id can be joined with 活动日.活动日", "columns_en": {"词条id": "Phrase_id", "名称": "Name", "成立时间": "_Other_Organiser", "创始人": "Founder", "所属省份": "Provinces_to_which_they_belong", "网站名称": "Name_of_website", "所属公司id": "Company_to_which_Id_belongs", "上线时间": "Online_time", "官网": "Official_Network", "百度权重": "100%_weight", "PR值": "PPR_Value", "反链数": "Inverse_number", "综合分数": "Combined_Scores", "总排名": "Total_ranking", "所在省排名": "_Other_Organiser", "电商网站排名": "The_company's_website_is_ranked", "活动名称": "Name_of_activity", "时间": "Time", "发明公司id": "Inventoriesid", "网站id": "Websiteid", "活动id": "Activity_id", "年份": "Year", "下单金额": "Next_single_amount", "同比增长": "Year-on-year_growth", "315提名次数": "315_nominations", "买家打假次数": "Number_of_false_claims_made_by_buyers"}, "table_en": {"公司": "Company", "购物网": "Shopping_Network", "活动日": "Days_of_activity", "网站活动收入": "Income_from_website_activities", "网站打假": "The_website's_not_working"}}, "社交软件": {"sqlite": "CREATE TABLE 公司 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  成立时间 VARCHAR(50), --  Other Organiser\n  位于城市 DATETIME, -- It's in the city\n);\nCREATE TABLE 社交APP (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  app名称 INTEGER, -- App Name\n  软件大小 VARCHAR(50), -- Software Size\n  注册用户量 INTEGER, -- Number of registered users\n  日活跃用户量 INTEGER, -- Number of daily active users\n  母公司id DATETIME, -- parent companyid\n);\nCREATE TABLE 功能 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  简介 VARCHAR(50), -- Introduction\n);\nCREATE TABLE APP支持的功能 (\n  功能id VARCHAR(50) PRIMARY KEY, -- Function id\n  appid INTEGER, -- Appid\n  是否主要功能 INTEGER, -- Whether or not to perform primary functions\n);\n-- APP支持的功能.功能id can be joined with 功能.功能\n-- 社交APP.母公司id can be joined with 公司.公司", "columns_en": {"词条id": "Phrase_id", "名称": "Name", "成立时间": "_Other_Organiser", "位于城市": "It's_in_the_city", "app名称": "App_Name", "软件大小": "Software_Size", "注册用户量": "Number_of_registered_users", "日活跃用户量": "Number_of_daily_active_users", "母公司id": "parent_companyid", "简介": "Introduction", "功能id": "Function_id", "appid": "Appid", "是否主要功能": "Whether_or_not_to_perform_primary_functions"}, "table_en": {"公司": "Company", "社交APP": "Social_APP", "功能": "Functions", "APP支持的功能": "APP-supported_functionality"}}, "企业融资": {"sqlite": "CREATE TABLE 企业 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  中文名 INTEGER, -- Chinese Name\n  成立时间 VARCHAR(50), --  Other Organiser\n  法定代表人 DATETIME, -- Statutory representatives\n  所属省份 VARCHAR(50), -- Provinces to which they belong\n  注册资本 VARCHAR(50), -- Registered capital\n);\nCREATE TABLE 企业融资 (\n  企业id INTEGER PRIMARY KEY, -- Enterprise id\n  融资轮次 INTEGER, -- Financing rounds\n  融资总额 VARCHAR(50), -- Total financing\n  年份 INTEGER, -- Year\n);\nCREATE TABLE 投资公司 (\n  企业id DATETIME PRIMARY KEY, -- Enterprise id\n  投资公司 INTEGER, -- Investment companies\n  融资轮次 VARCHAR(50), -- Financing rounds\n  融资额 VARCHAR(50), -- Amount of financing\n  投资公司持股比例 INTEGER, -- Shareholding in investment companies\n);\n-- 投资公司.企业id can be joined with 企业.企业\n-- 企业融资.企业id can be joined with 企业.企业", "columns_en": {"词条id": "Phrase_id", "中文名": "Chinese_Name", "成立时间": "_Other_Organiser", "法定代表人": "Statutory_representatives", "所属省份": "Provinces_to_which_they_belong", "注册资本": "Registered_capital", "企业id": "Enterprise_id", "融资轮次": "Financing_rounds", "融资总额": "Total_financing", "年份": "Year", "投资公司": "Investment_companies", "融资额": "Amount_of_financing", "投资公司持股比例": "Shareholding_in_investment_companies"}, "table_en": {"企业": "Enterprise", "企业融资": "Enterprise_finance", "投资公司": "Investment_companies"}}, "各城市垃圾": {"sqlite": "CREATE TABLE 城市 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  所属省份 VARCHAR(50), -- Provinces to which they belong\n  垃圾产出量(万吨) VARCHAR(50), -- Waste output (tonnes)\n  垃圾场数量 INTEGER, -- Number of dumps\n);\nCREATE TABLE 城市垃圾来源 (\n  城市id INTEGER PRIMARY KEY, -- Urban id\n  来源 INTEGER, -- Source\n  产出吨数 VARCHAR(50), -- Tons of output\n  总量占比 INTEGER, -- Total as a percentage of total\n);\nCREATE TABLE 垃圾分类的城市 (\n  城市id INTEGER PRIMARY KEY, -- Urban id\n  实施时间 INTEGER, -- Implementation time\n  分类体系 DATETIME, -- Classification system\n  最低罚款数 VARCHAR(50), -- Minimum fine\n  最高罚款数 INTEGER, -- Maximum number of fines\n  厨余垃圾运输车辆 INTEGER, -- Garbage transport vehicle\n  有害垃圾运输车辆 INTEGER, -- Harmful waste transport vehicles\n  覆盖家庭比例 INTEGER, -- Proportion of households covered\n  志愿者数量 INTEGER, -- Number of volunteers\n);\n-- 城市垃圾来源.城市id can be joined with 城市.城市\n-- 垃圾分类的城市.城市id can be joined with 城市.城市", "columns_en": {"词条id": "Phrase_id", "名称": "Name", "所属省份": "Provinces_to_which_they_belong", "垃圾产出量(万吨)": "Waste_output_(tonnes)", "垃圾场数量": "Number_of_dumps", "城市id": "Urban_id", "来源": "Source", "产出吨数": "Tons_of_output", "总量占比": "Total_as_a_percentage_of_total", "实施时间": "Implementation_time", "分类体系": "Classification_system", "最低罚款数": "Minimum_fine", "最高罚款数": "Maximum_number_of_fines", "厨余垃圾运输车辆": "Garbage_transport_vehicle", "有害垃圾运输车辆": "Harmful_waste_transport_vehicles", "覆盖家庭比例": "Proportion_of_households_covered", "志愿者数量": "Number_of_volunteers"}, "table_en": {"城市": "Urban", "城市垃圾来源": "Sources_of_municipal_garbage", "垃圾分类的城市": "Waste-screwing_cities"}}, "银行理财产品": {"sqlite": "CREATE TABLE 银行 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  成立时间 VARCHAR(50), --  Other Organiser\n  公司类型 DATETIME, -- Type of company\n  年营业额 VARCHAR(50), -- Annual turnover\n);\nCREATE TABLE 银行转账手续费 (\n  原银行id INTEGER PRIMARY KEY, -- Original bankid\n  转账银行id INTEGER, -- Transfer bankid\n  同省手续费 INTEGER, -- Co-promotion fees\n  跨省手续费 INTEGER, -- Cross-provincial fees\n  单笔最高转账金额 INTEGER, -- Maximum single transfer\n);\nCREATE TABLE 理财产品 (\n  词条id INTEGER PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  所属公司 VARCHAR(50), -- Company to which it belongs\n  年化收益率 VARCHAR(50), -- Annualized rate of return\n  存储时间 INTEGER, -- Storage Time\n);\nCREATE TABLE 理财产品与银行 (\n  产品id INTEGER PRIMARY KEY, -- Product id\n  银行id INTEGER, -- Bankid\n  单笔最高限额 INTEGER, -- Single ceiling\n  每日限转次数 INTEGER, -- Number of transfers per day\n);\n-- 理财产品与银行.产品id can be joined with 理财产品.理财产品\n-- 理财产品与银行.银行id can be joined with 银行.银行\n-- 银行转账手续费.原银行id can be joined with 银行.银行\n-- 银行转账手续费.转账银行id can be joined with 银行.银行", "columns_en": {"词条id": "Phrase_id", "名称": "Name", "成立时间": "_Other_Organiser", "公司类型": "Type_of_company", "年营业额": "Annual_turnover", "原银行id": "Original_bankid", "转账银行id": "Transfer_bankid", "同省手续费": "Co-promotion_fees", "跨省手续费": "Cross-provincial_fees", "单笔最高转账金额": "Maximum_single_transfer", "所属公司": "Company_to_which_it_belongs", "年化收益率": "Annualized_rate_of_return", "存储时间": "Storage_Time", "产品id": "Product_id", "银行id": "Bankid", "单笔最高限额": "Single_ceiling", "每日限转次数": "Number_of_transfers_per_day"}, "table_en": {"银行": "Bank", "银行转账手续费": "Bank_transfer_charges", "理财产品": "Property_items", "理财产品与银行": "Property_and_banks"}}, "公司联合实验室": {"sqlite": "CREATE TABLE 公司 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  总部地点 VARCHAR(50), -- Headquarters locations\n  公司类型 VARCHAR(50), -- Type of company\n);\nCREATE TABLE 学校 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  学校名称 INTEGER, -- Name of school\n  成立时间 VARCHAR(50), --  Other Organiser\n  所在城市 DATETIME, -- It's in the city\n  所属省份 VARCHAR(50), -- Provinces to which they belong\n  所属国家 VARCHAR(50), -- Country of nationality\n);\nCREATE TABLE 联合实验室 (\n  实验室名称 VARCHAR(50) PRIMARY KEY, -- Name of laboratory\n  所属学校id VARCHAR(50), -- School to which Id\n  公司id INTEGER, -- Companyid\n  联合方向 INTEGER, -- Joint direction\n  开始时间 VARCHAR(50), --  Other Organiser\n  合作年数 DATETIME, -- Years of cooperation\n  论文产出数量 INTEGER, -- Number of papers produced\n);\nCREATE TABLE 海外研究中心 (\n  研究中心 INTEGER PRIMARY KEY, -- Research Centre\n  所在城市 VARCHAR(50), -- It's in the city\n  所在国家 VARCHAR(50), -- Country\n  公司id VARCHAR(50), -- Companyid\n  成立年份 INTEGER, -- Year of establishment\n  员工数量 DATETIME, -- Number of employees\n);\n-- 海外研究中心.公司id can be joined with 公司.公司\n-- 联合实验室.公司id can be joined with 公司.公司\n-- 联合实验室.所属学校id can be joined with 学校.学校", "columns_en": {"词条id": "Phrase_id", "名称": "Name", "总部地点": "Headquarters_locations", "公司类型": "Type_of_company", "学校名称": "Name_of_school", "成立时间": "_Other_Organiser", "所在城市": "It's_in_the_city", "所属省份": "Provinces_to_which_they_belong", "所属国家": "Country_of_nationality", "实验室名称": "Name_of_laboratory", "所属学校id": "School_to_which_Id", "公司id": "Companyid", "联合方向": "Joint_direction", "开始时间": "_Other_Organiser", "合作年数": "Years_of_cooperation", "论文产出数量": "Number_of_papers_produced", "研究中心": "Research_Centre", "所在国家": "Country", "成立年份": "Year_of_establishment", "员工数量": "Number_of_employees"}, "table_en": {"公司": "Company", "学校": "School", "联合实验室": "Joint_Laboratory", "海外研究中心": "Overseas_Research_Centre"}}, "台风": {"sqlite": "CREATE TABLE 台风 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  登陆地点 VARCHAR(50), -- Landing site\n  登陆时间 VARCHAR(50), -- Landing time\n  登陆强度 DATETIME, -- Landing intensity\n  持续天数 INTEGER, -- Days of duration\n  影响地区数 INTEGER, -- Number of areas affected\n  死亡人数 INTEGER, -- Number of deaths\n  经济损失 INTEGER, -- Economic loss\n);\nCREATE TABLE 台风影响的中国省份 (\n  台风id INTEGER PRIMARY KEY, -- Typhoon id\n  省份 INTEGER, -- Province\n  登陆强度 VARCHAR(50), -- Landing intensity\n  死亡人数 INTEGER, -- Number of deaths\n  失踪人数 INTEGER, -- Number of missing persons\n);\nCREATE TABLE 台风影响的国家 (\n  台风id INTEGER PRIMARY KEY, -- Typhoon id\n  国家 INTEGER, -- National\n  经济损失 VARCHAR(50), -- Economic loss\n);\n-- 台风影响的国家.台风id can be joined with 台风.台风\n-- 台风影响的中国省份.台风id can be joined with 台风.台风", "columns_en": {"词条id": "Phrase_id", "名称": "Name", "登陆地点": "Landing_site", "登陆时间": "Landing_time", "登陆强度": "Landing_intensity", "持续天数": "Days_of_duration", "影响地区数": "Number_of_areas_affected", "死亡人数": "Number_of_deaths", "经济损失": "Economic_loss", "台风id": "Typhoon_id", "省份": "Province", "失踪人数": "Number_of_missing_persons", "国家": "National"}, "table_en": {"台风": "Typhoon", "台风影响的中国省份": "China_provinces_affected_by_typhoons", "台风影响的国家": "Typhoon-affected_countries"}}, "各城市购房报告": {"sqlite": "CREATE TABLE 房龄影响 (\n  城市 VARCHAR(50) PRIMARY KEY, -- Urban\n  房龄 VARCHAR(50), -- Housing age\n  交易占比 VARCHAR(50), -- Proportion of transactions\n);\nCREATE TABLE 电梯影响 (\n  城市 INTEGER PRIMARY KEY, -- Urban\n  是否带电梯 VARCHAR(50), -- Do you have an elevator?\n  平均成交周期 BINARY, -- Average date of conclusion\n  平均带看次数 INTEGER, -- Average number of visits\n);\nCREATE TABLE 月供分布 (\n  城市 INTEGER PRIMARY KEY, -- Urban\n  月供段 VARCHAR(50), -- Months\n  占比 VARCHAR(50), -- Percentage\n);\nCREATE TABLE 购房者年龄分布 (\n  城市 INTEGER PRIMARY KEY, -- Urban\n  购房者年龄段 VARCHAR(50), -- Age of home-buyer\n  占比 VARCHAR(50), -- Percentage\n);\nCREATE TABLE 购房者性别分布 (\n  城市 INTEGER PRIMARY KEY, -- Urban\n  购房者性别 VARCHAR(50), -- Sex of home-buyer\n  占比 VARCHAR(50), -- Percentage\n);\n", "columns_en": {"城市": "Urban", "房龄": "Housing_age", "交易占比": "Proportion_of_transactions", "是否带电梯": "Do_you_have_an_elevator?", "平均成交周期": "Average_date_of_conclusion", "平均带看次数": "Average_number_of_visits", "月供段": "Months", "占比": "Percentage", "购房者年龄段": "Age_of_home-buyer", "购房者性别": "Sex_of_home-buyer"}, "table_en": {"房龄影响": "Housing_age_impact", "电梯影响": "Elevator_impact", "月供分布": "Months_for_distribution", "购房者年龄分布": "Age_distribution_of_home_buyers", "购房者性别分布": "Gender_distribution_of_home_buyers"}}, "中国宜居城市": {"sqlite": "CREATE TABLE 2018年宜居城市 (\n  城市 VARCHAR(50) PRIMARY KEY, -- Urban\n  所属省份 VARCHAR(50), -- Provinces to which they belong\n  分数 VARCHAR(50), -- Scores\n  空气指数 INTEGER, -- Air index\n  蓝天数量 INTEGER, -- Number of blue skies\n);\nCREATE TABLE 2017年宜居城市 (\n  城市 INTEGER PRIMARY KEY, -- Urban\n  所属省份 VARCHAR(50), -- Provinces to which they belong\n  分数 VARCHAR(50), -- Scores\n  空气指数 INTEGER, -- Air index\n  蓝天数量 INTEGER, -- Number of blue skies\n);\nCREATE TABLE 2016年宜居城市 (\n  城市 INTEGER PRIMARY KEY, -- Urban\n  所属省份 VARCHAR(50), -- Provinces to which they belong\n  分数 VARCHAR(50), -- Scores\n  空气指数 INTEGER, -- Air index\n  蓝天数量 INTEGER, -- Number of blue skies\n);\n", "columns_en": {"城市": "Urban", "所属省份": "Provinces_to_which_they_belong", "分数": "Scores", "空气指数": "Air_index", "蓝天数量": "Number_of_blue_skies"}, "table_en": {"2018年宜居城市": "Inhabitable_in_2018", "2017年宜居城市": "I'll_live_in_a_city_in_2017", "2016年宜居城市": "City_ready_to_live_in_2016"}}, "软件赞助节目": {"sqlite": "CREATE TABLE 品牌 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  所属公司 VARCHAR(50), -- Company to which it belongs\n  行业 VARCHAR(50), -- Industry\n);\nCREATE TABLE 综艺节目 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  播出年份 VARCHAR(50), -- Year of broadcast\n  播出电视台 DATETIME, -- Television broadcast\n  收视率 VARCHAR(50), -- Rate of viewing\n  市场份额 INTEGER, -- Market share\n  观众评分 INTEGER, -- Audience scores\n);\nCREATE TABLE 综艺节目赞助商 (\n  品牌id INTEGER PRIMARY KEY, -- Brandid\n  综艺节目id INTEGER, -- Leisure programme id\n  赞助方式 INTEGER, -- Sponsorship\n  广告时长 VARCHAR(50), -- The length of advertising\n  广告次数 INTEGER, -- Number of advertisements\n);\n-- 综艺节目赞助商.综艺节目id can be joined with 综艺节目.综艺节目\n-- 综艺节目赞助商.品牌id can be joined with 品牌.品牌", "columns_en": {"词条id": "Phrase_id", "名称": "Name", "所属公司": "Company_to_which_it_belongs", "行业": "Industry", "播出年份": "Year_of_broadcast", "播出电视台": "Television_broadcast", "收视率": "Rate_of_viewing", "市场份额": "Market_share", "观众评分": "Audience_scores", "品牌id": "Brandid", "综艺节目id": "Leisure_programme_id", "赞助方式": "Sponsorship", "广告时长": "The_length_of_advertising", "广告次数": "Number_of_advertisements"}, "table_en": {"品牌": "Brand", "综艺节目": "Phenomenal_programmes", "综艺节目赞助商": "Sponsor_of_the_philanthropy_programme"}}, "世界高山": {"sqlite": "CREATE TABLE 山峰 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  所属山系 VARCHAR(50), -- It's part of the mountain\n  海拔 VARCHAR(50), -- Altitude\n  首次登顶时间 INTEGER, -- It's the first time\n  排名 DATETIME, -- Rank\n);\nCREATE TABLE 国家 (\n  词条id INTEGER PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  所属洲 VARCHAR(50), -- The continent to which they belong\n);\nCREATE TABLE 山峰的国家 (\n  山峰id VARCHAR(50) PRIMARY KEY, -- Mountain id\n  起点国家id INTEGER, -- Start-up countryid\n  终点国家id INTEGER, -- End-of-life countryd\n  走向 INTEGER, -- Towards\n);\nCREATE TABLE 景点 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  山峰id VARCHAR(50), -- Mountain id\n  门票价格 INTEGER, -- Price of tickets\n  游玩季节 INTEGER, -- Play season\n);\n-- 山峰的国家.起点国家id can be joined with 国家.国家\n-- 景点.山峰id can be joined with 山峰.山峰\n-- 山峰的国家.山峰id can be joined with 山峰.山峰\n-- 山峰的国家.终点国家id can be joined with 国家.国家", "columns_en": {"词条id": "Phrase_id", "名称": "Name", "所属山系": "It's_part_of_the_mountain", "海拔": "Altitude", "首次登顶时间": "It's_the_first_time", "排名": "Rank", "所属洲": "The_continent_to_which_they_belong", "山峰id": "Mountain_id", "起点国家id": "Start-up_countryid", "终点国家id": "End-of-life_countryd", "走向": "Towards", "门票价格": "Price_of_tickets", "游玩季节": "Play_season"}, "table_en": {"山峰": "Peaks", "国家": "National", "山峰的国家": "Mountain_countries", "景点": "Places"}}, "央视晚会": {"sqlite": "CREATE TABLE 央视春节晚会 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  届数 VARCHAR(50), -- Number of sessions\n  播放频道 INTEGER, -- Play Channel\n  在线播放平台 VARCHAR(50), -- Online playing platform\n  主持人 VARCHAR(50), -- Moderator\n  主持人数量 VARCHAR(50), -- Number of facilitators\n  收视率 INTEGER, -- Rate of viewing\n  歌舞节目数量 INTEGER, -- Number of music and dance programmes\n  语言节目数量 INTEGER, -- Number of language programmes\n  魔术节目数量 INTEGER, -- Number of magic shows\n);\nCREATE TABLE 主持人 (\n  词条id INTEGER PRIMARY KEY, -- Phrase id\n  姓名 INTEGER, -- Name\n  毕业院校 VARCHAR(50), -- Graduate schools\n  代表作品 VARCHAR(50), -- Representing the work\n);\nCREATE TABLE 中秋晚会 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  播出时间 VARCHAR(50), -- Airtime\n  主会场地址 DATETIME, -- Address of the main venue\n  分会场数量 VARCHAR(50), -- Number of overflows\n);\nCREATE TABLE 主持人与春晚 (\n  主持人id INTEGER PRIMARY KEY, -- Moderator id\n  春晚id INTEGER, -- Spring Night id\n);\nCREATE TABLE 主持人与中秋晚会 (\n  主持人id INTEGER PRIMARY KEY, -- Moderator id\n  中秋晚会id INTEGER, -- Mid-Autumn partyid\n);\nCREATE TABLE 举办城市 (\n  城市名称 INTEGER PRIMARY KEY, -- Name of city\n  中秋晚会id VARCHAR(50), -- Mid-Autumn partyid\n  是否主会场 INTEGER, -- Is it the main venue?\n);\nCREATE TABLE 春晚嘉宾 (\n  嘉宾姓名 BINARY PRIMARY KEY, -- Name of guest\n  春晚id VARCHAR(50), -- Spring Night id\n  表演节目 INTEGER, -- Performing shows\n  节目类型 VARCHAR(50), -- Program Type\n  是否获奖 VARCHAR(50), -- Awarded or not\n);\n-- 主持人与中秋晚会.主持人id can be joined with 主持人.主持人\n-- 主持人与中秋晚会.中秋晚会id can be joined with 中秋晚会.中秋晚会\n-- 主持人与春晚.春晚id can be joined with 央视春节晚会.央视春节晚会\n-- 主持人与春晚.主持人id can be joined with 主持人.主持人\n-- 春晚嘉宾.春晚id can be joined with 央视春节晚会.央视春节晚会\n-- 举办城市.中秋晚会id can be joined with 中秋晚会.中秋晚会", "columns_en": {"词条id": "Phrase_id", "名称": "Name", "届数": "Number_of_sessions", "播放频道": "Play_Channel", "在线播放平台": "Online_playing_platform", "主持人": "Moderator", "主持人数量": "Number_of_facilitators", "收视率": "Rate_of_viewing", "歌舞节目数量": "Number_of_music_and_dance_programmes", "语言节目数量": "Number_of_language_programmes", "魔术节目数量": "Number_of_magic_shows", "姓名": "Name", "毕业院校": "Graduate_schools", "代表作品": "Representing_the_work", "播出时间": "Airtime", "主会场地址": "Address_of_the_main_venue", "分会场数量": "Number_of_overflows", "主持人id": "Moderator_id", "春晚id": "Spring_Night_id", "中秋晚会id": "Mid-Autumn_partyid", "城市名称": "Name_of_city", "是否主会场": "Is_it_the_main_venue?", "嘉宾姓名": "Name_of_guest", "表演节目": "Performing_shows", "节目类型": "Program_Type", "是否获奖": "Awarded_or_not"}, "table_en": {"央视春节晚会": "The_Spring_Festival", "主持人": "Moderator", "中秋晚会": "Mid-Autumn_party", "主持人与春晚": "The_host_and_Spring_Night", "主持人与中秋晚会": "Moderators_and_Mid-Autumn_parties", "举办城市": "Host_city", "春晚嘉宾": "Spring_evening_guests"}}, "收视率": {"sqlite": "CREATE TABLE 频道收视 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  频道名称 INTEGER, -- Channel Name\n  直播关注度 VARCHAR(50), -- Live Concern\n  市场份额 INTEGER, -- Market share\n  排名 INTEGER, -- Rank\n);\nCREATE TABLE 节目收视 (\n  节目名称 INTEGER PRIMARY KEY, -- Program Name\n  频道id VARCHAR(50), -- Channel id\n  播出时间 INTEGER, -- Airtime\n  直播关注度 DATETIME, -- Live Concern\n  市场份额 INTEGER, -- Market share\n  排名 INTEGER, -- Rank\n);\nCREATE TABLE 综艺节目植入榜 (\n  词条id INTEGER PRIMARY KEY, -- Phrase id\n  节目名称 INTEGER, -- Program Name\n  播出频道id VARCHAR(50), -- Channel id\n  总时长 INTEGER, -- Total duration\n  频次 INTEGER, -- Frequency\n  点播关注度 INTEGER, --  Other Organiser\n);\n-- 综艺节目植入榜.播出频道id can be joined with 频道收视.频道收视\n-- 节目收视.频道id can be joined with 频道收视.频道收视", "columns_en": {"词条id": "Phrase_id", "频道名称": "Channel_Name", "直播关注度": "Live_Concern", "市场份额": "Market_share", "排名": "Rank", "节目名称": "Program_Name", "频道id": "Channel_id", "播出时间": "Airtime", "播出频道id": "Channel_id", "总时长": "Total_duration", "频次": "Frequency", "点播关注度": "_Other_Organiser"}, "table_en": {"频道收视": "Channel_view", "节目收视": "The_show's_on", "综艺节目植入榜": "I'm_putting_on_a_show"}}, "论文": {"sqlite": "CREATE TABLE 作者 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  姓名 INTEGER, -- Name\n  性别 VARCHAR(50), -- Gender\n  国籍 VARCHAR(50), -- Nationality\n  职业 VARCHAR(50), -- Occupation\n  所在单位 VARCHAR(50), -- Organisation\n);\nCREATE TABLE 论文 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  作者id VARCHAR(50), -- Authorid\n  会议名称 INTEGER, -- Name of meeting\n  年份 VARCHAR(50), -- Year\n  引用量 DATETIME, -- Reference\n);\nCREATE TABLE 论文引用 (\n  论文id INTEGER PRIMARY KEY, -- Papersd\n  引用论文id INTEGER, -- Quoted papers id\n  是否对比论文 INTEGER, -- Whether or not to compare papers\n);\n-- 论文引用.论文id can be joined with 论文.论文\n-- 论文.作者id can be joined with 作者.作者\n-- 论文引用.引用论文id can be joined with 论文.论文", "columns_en": {"词条id": "Phrase_id", "姓名": "Name", "性别": "Gender", "国籍": "Nationality", "职业": "Occupation", "所在单位": "Organisation", "名称": "Name", "作者id": "Authorid", "会议名称": "Name_of_meeting", "年份": "Year", "引用量": "Reference", "论文id": "Papersd", "引用论文id": "Quoted_papers_id", "是否对比论文": "Whether_or_not_to_compare_papers"}, "table_en": {"作者": "Author", "论文": "Papers", "论文引用": "References_to_papers"}}, "银行": {"sqlite": "CREATE TABLE 银行总部 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  总部地点 VARCHAR(50), -- Headquarters locations\n  成立时间 VARCHAR(50), --  Other Organiser\n  公司类型 DATETIME, -- Type of company\n);\nCREATE TABLE 年营业额 (\n  年份 VARCHAR(50) PRIMARY KEY, -- Year\n  银行id DATETIME, -- Bankid\n  营业额 INTEGER, -- turnover\n  员工数 INTEGER, -- Number of employees\n  世界五百强排名 INTEGER, -- Five hundred in the world\n);\nCREATE TABLE 城市 (\n  词条id INTEGER PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  所属省份 VARCHAR(50), -- Provinces to which they belong\n  所属区域 VARCHAR(50), -- Organisation\n);\nCREATE TABLE 银行服务网点 (\n  银行id VARCHAR(50) PRIMARY KEY, -- Bankid\n  城市id INTEGER, -- Urban id\n  建成数量 INTEGER, -- Number of completed\n  规划数量 INTEGER, -- Number planned\n);\n-- 银行服务网点.城市id can be joined with 城市.城市\n-- 银行服务网点.银行id can be joined with 银行总部.银行总部\n-- 年营业额.银行id can be joined with 银行总部.银行总部", "columns_en": {"词条id": "Phrase_id", "名称": "Name", "总部地点": "Headquarters_locations", "成立时间": "_Other_Organiser", "公司类型": "Type_of_company", "年份": "Year", "银行id": "Bankid", "营业额": "turnover", "员工数": "Number_of_employees", "世界五百强排名": "Five_hundred_in_the_world", "所属省份": "Provinces_to_which_they_belong", "所属区域": "Organisation", "城市id": "Urban_id", "建成数量": "Number_of_completed", "规划数量": "Number_planned"}, "table_en": {"银行总部": "Bank_headquarters", "年营业额": "Annual_turnover", "城市": "Urban", "银行服务网点": "Banking_services_node"}}, "历史类书籍": {"sqlite": "CREATE TABLE 国家历史 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  书名 INTEGER, -- Title\n  讲述国家 VARCHAR(50), -- Telling about the country\n  讲述时代 VARCHAR(50), -- It's about the times\n);\nCREATE TABLE 中国朝代历史 (\n  词条id DATETIME PRIMARY KEY, -- Phrase id\n  书名 INTEGER, -- Title\n  讲述朝代 VARCHAR(50), -- Talk about the dynasty\n);\nCREATE TABLE 战争历史 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  书名 INTEGER, -- Title\n  描述战事 VARCHAR(50), -- Describe the war\n);\nCREATE TABLE 人物历史 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  书名 INTEGER, -- Title\n  讲述名人 VARCHAR(50), -- He's talking about celebrities\n);\n", "columns_en": {"词条id": "Phrase_id", "书名": "Title", "讲述国家": "Telling_about_the_country", "讲述时代": "It's_about_the_times", "讲述朝代": "Talk_about_the_dynasty", "描述战事": "Describe_the_war", "讲述名人": "He's_talking_about_celebrities"}, "table_en": {"国家历史": "National_history", "中国朝代历史": "The_history_of_the_Chinese_dynasty", "战争历史": "History_of_war", "人物历史": "The_history_of_people"}}, "欧洲杯球队": {"sqlite": "CREATE TABLE 球队 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  中文队名 INTEGER, -- Chinese Team Name\n  所属地区 VARCHAR(50), -- Territory to which it belongs\n  成立时间 VARCHAR(50), --  Other Organiser\n  主场馆 DATETIME, -- Main premises\n  容纳人数 VARCHAR(50), -- Number of persons accommodated\n  主席 INTEGER, -- (Signed) Jeremy Greenstock Chairman Security Council Committee established pursuant to resolution 1373 (2001) concerning counter-terrorism\n  体育经理 VARCHAR(50), -- Sports manager\n  创始人 VARCHAR(50), -- Founder\n  现任队长 VARCHAR(50), -- The current captain\n  副队长 VARCHAR(50), -- Lieutenant\n);\nCREATE TABLE 球队欧冠赛事 (\n  名次 VARCHAR(50) PRIMARY KEY, -- Synchronising folder\n  球队id INTEGER, -- Team id\n  届数 INTEGER, -- Number of sessions\n  场次 INTEGER, -- Fields\n  胜次数 INTEGER, -- Winners\n  平次数 INTEGER, -- Number of flats\n  负次数 INTEGER, -- Negative number\n  失球 INTEGER, -- Lose the ball\n  净胜球 INTEGER, -- It's a clean win\n  场均积分 INTEGER, -- Average Field Scores\n  场均进球 INTEGER, -- It's a field goal\n  最好成绩 INTEGER, -- Best grades\n);\nCREATE TABLE 欧冠冠亚军 (\n  届数 VARCHAR(50) PRIMARY KEY, -- Number of sessions\n  杯赛 INTEGER, -- Cup race\n  冠军球队id VARCHAR(50), -- ♪ The team of champions ♪ ♪ the team of champions ♪ ♪ the team of champions ♪ ♪ the team of champions ♪ ♪ ♪ the team of champions ♪ ♪ ♪ the team of champions ♪ ♪ ♪ the team of champions ♪ ♪ ♪ the team of champions ♪ ♪ ♪ the team of champions ♪ ♪ ♪ the team of champions ♪\n  亚军球队id INTEGER, -- Yakuza id\n  冠军主教练 INTEGER, -- Master coach of the championship\n  决赛比分 VARCHAR(50), -- The final score\n  决赛场地 VARCHAR(50), -- The finals\n);\n-- 欧冠冠亚军.冠军球队id can be joined with 球队.球队\n-- 球队欧冠赛事.球队id can be joined with 球队.球队\n-- 欧冠冠亚军.亚军球队id can be joined with 球队.球队", "columns_en": {"词条id": "Phrase_id", "中文队名": "Chinese_Team_Name", "所属地区": "Territory_to_which_it_belongs", "成立时间": "_Other_Organiser", "主场馆": "Main_premises", "容纳人数": "Number_of_persons_accommodated", "主席": "(Signed)_Jeremy_Greenstock_Chairman_Security_Council_Committee_established_pursuant_to_resolution_1373_(2001)_concerning_counter-terrorism", "体育经理": "Sports_manager", "创始人": "Founder", "现任队长": "The_current_captain", "副队长": "Lieutenant", "名次": "Synchronising_folder", "球队id": "Team_id", "届数": "Number_of_sessions", "场次": "Fields", "胜次数": "Winners", "平次数": "Number_of_flats", "负次数": "Negative_number", "失球": "Lose_the_ball", "净胜球": "It's_a_clean_win", "场均积分": "Average_Field_Scores", "场均进球": "It's_a_field_goal", "最好成绩": "Best_grades", "杯赛": "Cup_race", "冠军球队id": "♪_The_team_of_champions_♪_♪_the_team_of_champions_♪_♪_the_team_of_champions_♪_♪_the_team_of_champions_♪_♪_♪_the_team_of_champions_♪_♪_♪_the_team_of_champions_♪_♪_♪_the_team_of_champions_♪_♪_♪_the_team_of_champions_♪_♪_♪_the_team_of_champions_♪_♪_♪_the_team_of_champions_♪", "亚军球队id": "Yakuza_id", "冠军主教练": "Master_coach_of_the_championship", "决赛比分": "The_final_score", "决赛场地": "The_finals"}, "table_en": {"球队": "Team", "球队欧冠赛事": "It's_the_Eunuchs_game", "欧冠冠亚军": "Ace_Crawford"}}, "中国历史名城": {"sqlite": "CREATE TABLE 城市 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  所属省份 VARCHAR(50), -- Provinces to which they belong\n  常住人口 VARCHAR(50), -- Resident population\n  城区面积 INTEGER, -- Urban area\n  建城年数 INTEGER, -- Number of founding years\n);\nCREATE TABLE 都城 (\n  朝代 INTEGER PRIMARY KEY, -- Dynasty!\n  古称 VARCHAR(50), -- Ancient\n  城市id VARCHAR(50), -- Urban id\n  建都起始时间 INTEGER, -- Construction start time\n  建都结束时间 DATETIME, -- It's the end of the building\n  建都年数 DATETIME, -- Number of years built\n);\n-- 都城.城市id can be joined with 城市.城市", "columns_en": {"词条id": "Phrase_id", "名称": "Name", "所属省份": "Provinces_to_which_they_belong", "常住人口": "Resident_population", "城区面积": "Urban_area", "建城年数": "Number_of_founding_years", "朝代": "Dynasty!", "古称": "Ancient", "城市id": "Urban_id", "建都起始时间": "Construction_start_time", "建都结束时间": "It's_the_end_of_the_building", "建都年数": "Number_of_years_built"}, "table_en": {"城市": "Urban", "都城": "The_capital"}}, "外文书籍": {"sqlite": "CREATE TABLE 外文书籍 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  英文名 VARCHAR(50), -- English Name\n  原著作者 VARCHAR(50), -- Original author\n  字数 VARCHAR(50), -- Words\n);\nCREATE TABLE 译者 (\n  词条id INTEGER PRIMARY KEY, -- Phrase id\n  姓名 INTEGER, -- Name\n  国籍 VARCHAR(50), -- Nationality\n  翻译作品数量 VARCHAR(50), -- Number of translated works\n);\nCREATE TABLE 出版社 (\n  词条id INTEGER PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  成立时间 VARCHAR(50), --  Other Organiser\n  成立地点 DATETIME, -- Location of establishment\n);\nCREATE TABLE 书籍出版信息 (\n  书籍id VARCHAR(50) PRIMARY KEY, -- Book id\n  译者id INTEGER, -- Translator id\n  出版社id INTEGER, -- Publisher id\n  出版册数 INTEGER, -- Number of publications\n  出版时间 INTEGER, -- Publication time\n);\n-- 书籍出版信息.书籍id can be joined with 外文书籍.外文书籍\n-- 书籍出版信息.出版社id can be joined with 出版社.出版社\n-- 书籍出版信息.译者id can be joined with 译者.译者", "columns_en": {"词条id": "Phrase_id", "名称": "Name", "英文名": "English_Name", "原著作者": "Original_author", "字数": "Words", "姓名": "Name", "国籍": "Nationality", "翻译作品数量": "Number_of_translated_works", "成立时间": "_Other_Organiser", "成立地点": "Location_of_establishment", "书籍id": "Book_id", "译者id": "Translator_id", "出版社id": "Publisher_id", "出版册数": "Number_of_publications", "出版时间": "Publication_time"}, "table_en": {"外文书籍": "Foreign_instruments", "译者": "Translator", "出版社": "Publications", "书籍出版信息": "Book_publishing_information"}}, "中国城市称号": {"sqlite": "CREATE TABLE 国家卫生城市 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  所属省份 VARCHAR(50), -- Provinces to which they belong\n  下辖区县数量 VARCHAR(50), -- Number of counties in lower jurisdiction\n  入选次数 INTEGER, -- Number of Selections\n);\nCREATE TABLE 国家旅游城市 (\n  词条id INTEGER PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  所属省份 VARCHAR(50), -- Provinces to which they belong\n  气候条件 VARCHAR(50), -- Climate conditions\n  景点数量 VARCHAR(50), -- Number of sites\n  5A级景点数量 INTEGER, -- No  of 5A attractions\n);\nCREATE TABLE 国家森林城市 (\n  词条id INTEGER PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  所属省份 VARCHAR(50), -- Provinces to which they belong\n  森林覆盖率 VARCHAR(50), -- Forest cover\n  森林公园数量 INTEGER, -- Number of forest parks\n);\nCREATE TABLE 国家中心城市 (\n  词条id INTEGER PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  所属省份 VARCHAR(50), -- Provinces to which they belong\n  排名 VARCHAR(50), -- Rank\n  GDP INTEGER, -- GDP\n  GDP同比增速 INTEGER, -- The same rate of growth in GDP as in the previous year\n);\nCREATE TABLE 世界一线城市 (\n  词条id INTEGER PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  所属省份 VARCHAR(50), -- Provinces to which they belong\n  世界排名 VARCHAR(50), -- World ranking\n  户籍人口 INTEGER, -- Household population\n  常住流动人口 INTEGER, -- Resident migrants\n);\n", "columns_en": {"词条id": "Phrase_id", "名称": "Name", "所属省份": "Provinces_to_which_they_belong", "下辖区县数量": "Number_of_counties_in_lower_jurisdiction", "入选次数": "Number_of_Selections", "气候条件": "Climate_conditions", "景点数量": "Number_of_sites", "5A级景点数量": "No__of_5A_attractions", "森林覆盖率": "Forest_cover", "森林公园数量": "Number_of_forest_parks", "排名": "Rank", "GDP": "GDP", "GDP同比增速": "The_same_rate_of_growth_in_GDP_as_in_the_previous_year", "世界排名": "World_ranking", "户籍人口": "Household_population", "常住流动人口": "Resident_migrants"}, "table_en": {"国家卫生城市": "National_Health_City", "国家旅游城市": "National_tourist_cities", "国家森林城市": "National_forest_cities", "国家中心城市": "Central_city_of_the_country", "世界一线城市": "First-line_city_of_the_world"}}, "外卖预定": {"sqlite": "CREATE TABLE 商家 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  起送价格 VARCHAR(50), -- Start-up price\n  送达用时 INTEGER, -- Time of service\n  评分 INTEGER, -- Rating\n  月售单数 INTEGER, -- Monthly sales odds\n);\nCREATE TABLE 平台 (\n  词条id INTEGER PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  入驻商家数量 VARCHAR(50), -- Number of registered vendors\n  市场占比 INTEGER, -- Market share\n);\nCREATE TABLE 商家平台活动 (\n  商家id INTEGER PRIMARY KEY, -- Business id\n  平台id INTEGER, -- Platformid\n  优惠活动 VARCHAR(50), -- Preferential activities\n  配送费 VARCHAR(50), -- Distribution costs\n);\n-- 商家平台活动.商家id can be joined with 商家.商家\n-- 商家平台活动.平台id can be joined with 平台.平台", "columns_en": {"词条id": "Phrase_id", "名称": "Name", "起送价格": "Start-up_price", "送达用时": "Time_of_service", "评分": "Rating", "月售单数": "Monthly_sales_odds", "入驻商家数量": "Number_of_registered_vendors", "市场占比": "Market_share", "商家id": "Business_id", "平台id": "Platformid", "优惠活动": "Preferential_activities", "配送费": "Distribution_costs"}, "table_en": {"商家": "Business", "平台": "Platform", "商家平台活动": "Business_platform_activities"}}, "大洲与国家": {"sqlite": "CREATE TABLE 大洲 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  面积 VARCHAR(50), -- Area\n  人口 INTEGER, -- Population\n  人口密度 INTEGER, -- Population density\n  国家数量 INTEGER, -- Number of countries\n  民族数量 INTEGER, -- Number of nationalities\n);\nCREATE TABLE 国家 (\n  词条id INTEGER PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  首都 VARCHAR(50), -- Capital\n  国土面积 VARCHAR(50), -- Land area\n  人口数量 INTEGER, -- Number of population\n  人口密度 INTEGER, -- Population density\n  水域率 INTEGER, -- Water rate\n  GDP总计 INTEGER, -- Total GDP\n  人均GDP INTEGER, -- GDP per capita\n  道路通行 INTEGER, -- Road access\n  人类发展指数 VARCHAR(50), -- Human Development Index\n  所属洲id INTEGER, --  Other Organiser\n);\nCREATE TABLE 最大都市 (\n  城市名称 INTEGER PRIMARY KEY, -- Name of city\n  国家id VARCHAR(50), -- Country id\n  大洲id INTEGER, -- Continentid\n);\nCREATE TABLE 2019年进出口 (\n  月份 INTEGER PRIMARY KEY, -- Month\n  大洲id INTEGER, -- Continentid\n  进出口 VARCHAR(50), -- Imports and exports\n  进口 INTEGER, -- Imports\n  出口 INTEGER, -- Exports\n  进出口同期比 INTEGER, -- Share of imports and exports over the same period\n  进口同期比 INTEGER, -- Percentage of imports over the same period\n  出口同期比 INTEGER, -- Share of exports over the same period\n);\nCREATE TABLE 大洲分界线 (\n  分界线名称 INTEGER PRIMARY KEY, -- Name of Demarcation Line\n  源大洲名称 VARCHAR(50), -- Name of continent of origin\n  目标大洲名称 INTEGER, -- Name of target continent\n);\n-- 国家.所属洲id can be joined with 大洲.大洲\n-- 2019年进出口.大洲id can be joined with 大洲.大洲\n-- 最大都市.大洲id can be joined with 大洲.大洲\n-- 最大都市.国家id can be joined with 国家.国家", "columns_en": {"词条id": "Phrase_id", "名称": "Name", "面积": "Area", "人口": "Population", "人口密度": "Population_density", "国家数量": "Number_of_countries", "民族数量": "Number_of_nationalities", "首都": "Capital", "国土面积": "Land_area", "人口数量": "Number_of_population", "水域率": "Water_rate", "GDP总计": "Total_GDP", "人均GDP": "GDP_per_capita", "道路通行": "Road_access", "人类发展指数": "Human_Development_Index", "所属洲id": "_Other_Organiser", "城市名称": "Name_of_city", "国家id": "Country_id", "大洲id": "Continentid", "月份": "Month", "进出口": "Imports_and_exports", "进口": "Imports", "出口": "Exports", "进出口同期比": "Share_of_imports_and_exports_over_the_same_period", "进口同期比": "Percentage_of_imports_over_the_same_period", "出口同期比": "Share_of_exports_over_the_same_period", "分界线名称": "Name_of_Demarcation_Line", "源大洲名称": "Name_of_continent_of_origin", "目标大洲名称": "Name_of_target_continent"}, "table_en": {"大洲": "Continent", "国家": "National", "最大都市": "The_largest_city", "2019年进出口": "Imports_and_exports_in_2019", "大洲分界线": "Continental_Demarcation_Lines"}}, "饭店预订": {"sqlite": "CREATE TABLE 饭店 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  地址 VARCHAR(50), -- Address\n  菜系 VARCHAR(50), -- It's a vegetable department\n  口味评分 VARCHAR(50), -- Taste Rating\n  环境评分 INTEGER, -- Environmental scoring\n  服务评分 INTEGER, -- Service rating\n  人均价格 INTEGER, -- Price per capita\n  包房最低消费 INTEGER, -- Minimum room consumption\n);\nCREATE TABLE 特色菜 (\n  饭店id INTEGER PRIMARY KEY, -- Hotel id\n  菜名 INTEGER, -- Name of dish\n  口味 VARCHAR(50), -- Taste\n  月销售量 VARCHAR(50), -- Monthly sales\n  必点比例 INTEGER, -- Scale of Points\n);\n-- 特色菜.饭店id can be joined with 饭店.饭店", "columns_en": {"词条id": "Phrase_id", "名称": "Name", "地址": "Address", "菜系": "It's_a_vegetable_department", "口味评分": "Taste_Rating", "环境评分": "Environmental_scoring", "服务评分": "Service_rating", "人均价格": "Price_per_capita", "包房最低消费": "Minimum_room_consumption", "饭店id": "Hotel_id", "菜名": "Name_of_dish", "口味": "Taste", "月销售量": "Monthly_sales", "必点比例": "Scale_of_Points"}, "table_en": {"饭店": "Hotel", "特色菜": "Specials"}}, "各城市院士情况": {"sqlite": "CREATE TABLE 省份 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  省份名称 VARCHAR(50), -- Name of province\n  985高校数量 INTEGER, -- Number of higher education institutions 985\n  211高校数量 INTEGER, -- Number of 211 higher education institutions\n  2018年本科录取率 INTEGER, -- Enrolment rate in undergraduate studies  2018\n  2019年本科录取率 INTEGER, -- Enrollment rate in 2019\n);\nCREATE TABLE 各省院士 (\n  年份 INTEGER PRIMARY KEY, -- Year\n  籍贯id DATETIME, -- Country of origin id\n  科学院院士数量 INTEGER, -- Number of scientific students\n  工程院院士数量 INTEGER, -- Number of engineers\n);\nCREATE TABLE 高校 (\n  词条id INTEGER PRIMARY KEY, -- Phrase id\n  学校名称 INTEGER, -- Name of school\n  院士校友人数 VARCHAR(50), -- Number of baccalaureate alumni\n  学校排名 INTEGER, -- School ranking\n  星级 INTEGER, -- Asterisk\n  办学层次 INTEGER, -- Level of schooling\n);\nCREATE TABLE 2019年院士任职学校 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  院士姓名 INTEGER, -- Name of the cadets\n  年龄 VARCHAR(50), -- Age\n  专业 INTEGER, -- Professional\n  院士类型 VARCHAR(50), -- Type of cadets\n  工作单位id VARCHAR(50), --  Other Organiser\n);\n-- 各省院士.籍贯id can be joined with 省份.省份\n-- 2019年院士任职学校.工作单位id can be joined with 高校.高校", "columns_en": {"词条id": "Phrase_id", "省份名称": "Name_of_province", "985高校数量": "Number_of_higher_education_institutions_985", "211高校数量": "Number_of_211_higher_education_institutions", "2018年本科录取率": "Enrolment_rate_in_undergraduate_studies__2018", "2019年本科录取率": "Enrollment_rate_in_2019", "年份": "Year", "籍贯id": "Country_of_origin_id", "科学院院士数量": "Number_of_scientific_students", "工程院院士数量": "Number_of_engineers", "学校名称": "Name_of_school", "院士校友人数": "Number_of_baccalaureate_alumni", "学校排名": "School_ranking", "星级": "Asterisk", "办学层次": "Level_of_schooling", "院士姓名": "Name_of_the_cadets", "年龄": "Age", "专业": "Professional", "院士类型": "Type_of_cadets", "工作单位id": "_Other_Organiser"}, "table_en": {"省份": "Province", "各省院士": "Provincial_cadets", "高校": "Colleges_of_higher_education", "2019年院士任职学校": "Baccalaureate_School_2019"}}, "IMAX电影院": {"sqlite": "CREATE TABLE 城市 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  所属省份 VARCHAR(50), -- Provinces to which they belong\n  市区面积 VARCHAR(50), -- Urban area\n);\nCREATE TABLE IMAX电影院 (\n  词条id INTEGER PRIMARY KEY, -- Phrase id\n  影院名称 INTEGER, -- Name of cinema\n  所在城市id VARCHAR(50), -- ♪ City id ♪\n  开业时间 INTEGER, -- Opening hours\n  屏幕宽 DATETIME, -- Screen Wideness\n  屏幕高 INTEGER, -- Screen height\n  屏幕面积 INTEGER, -- Screen Area\n  座位数 INTEGER, -- Number of seats\n);\nCREATE TABLE 影院放映电影数量 (\n  年份 INTEGER PRIMARY KEY, -- Year\n  影院id DATETIME, -- ♪ The cinema ♪ ♪ ♪ The cinema ♪ ♪ ♪ the cinema ♪ ♪ ♪ ♪ the cinema ♪ ♪ ♪ ♪ the cinema ♪ ♪ ♪ ♪ ♪ ♪ ♪ the cinema ♪ ♪ ♪ ♪ ♪ the cinema ♪ ♪ ♪ ♪ the cinema ♪ ♪ ♪ ♪ ♪ the cinema ♪ ♪ ♪ ♪ ♪\n  电影数量 INTEGER, -- Number of films\n  营收 INTEGER, -- Collection\n);\n-- 影院放映电影数量.影院id can be joined with IMAX电影院.IMAX电影院\n-- IMAX电影院.所在城市id can be joined with 城市.城市", "columns_en": {"词条id": "Phrase_id", "名称": "Name", "所属省份": "Provinces_to_which_they_belong", "市区面积": "Urban_area", "影院名称": "Name_of_cinema", "所在城市id": "♪_City_id_♪", "开业时间": "Opening_hours", "屏幕宽": "Screen_Wideness", "屏幕高": "Screen_height", "屏幕面积": "Screen_Area", "座位数": "Number_of_seats", "年份": "Year", "影院id": "♪_The_cinema_♪_♪_♪_The_cinema_♪_♪_♪_the_cinema_♪_♪_♪_♪_the_cinema_♪_♪_♪_♪_the_cinema_♪_♪_♪_♪_♪_♪_♪_the_cinema_♪_♪_♪_♪_♪_the_cinema_♪_♪_♪_♪_the_cinema_♪_♪_♪_♪_♪_the_cinema_♪_♪_♪_♪_♪", "电影数量": "Number_of_films", "营收": "Collection"}, "table_en": {"城市": "Urban", "IMAX电影院": "IMAX_Cinema", "影院放映电影数量": "Number_of_cinemas_showing_films"}}, "世界篮球国家队": {"sqlite": "CREATE TABLE 篮球运动队 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  队名 INTEGER, -- Team name\n  所属国家 VARCHAR(50), -- Country of nationality\n  成立时间 VARCHAR(50), --  Other Organiser\n  主教练 DATETIME, -- Master Coach\n  奥运会冠军数量 VARCHAR(50), -- Number of Olympic champions\n  世锦赛冠军数量 INTEGER, -- Number of World Cup champions\n  世界排名 INTEGER, -- World ranking\n);\nCREATE TABLE 奥运会冠亚军记录 (\n  年份 INTEGER PRIMARY KEY, -- Year\n  奥运会名称 DATETIME, -- Name of Olympic Games\n  冠军队id VARCHAR(50), -- ♪ The champion ♪ ♪ ♪ The champion ♪ ♪ ♪ the champion ♪ ♪ ♪ ♪ ♪ ♪ ♪ the champion ♪ ♪ ♪ ♪ ♪ ♪ ♪ ♪ ♪ ♪ ♪ ♪ ♪ ♪ ♪ ♪ ♪ ♪ ♪ ♪ ♪ ♪ ♪ the champion ♪ ♪ ♪ ♪ ♪\n  亚军队id INTEGER, -- Army of Asia id\n  季军队id INTEGER, -- Quarterly military id\n);\nCREATE TABLE 中国队奥运会成绩 (\n  年份 INTEGER PRIMARY KEY, -- Year\n  奥运会名称 DATETIME, -- Name of Olympic Games\n  名次 VARCHAR(50), -- Synchronising folder\n  主帅 INTEGER, -- Sir\n);\nCREATE TABLE 中国队交手记录 (\n  对手队id VARCHAR(50) PRIMARY KEY, -- Enemy id\n  赢的次数 INTEGER, -- Number of wins\n  输的次数 INTEGER, -- Number of losses\n);\n-- 奥运会冠亚军记录.冠军队id can be joined with 篮球运动队.篮球运动队\n-- 奥运会冠亚军记录.亚军队id can be joined with 篮球运动队.篮球运动队\n-- 中国队交手记录.对手队id can be joined with 篮球运动队.篮球运动队\n-- 奥运会冠亚军记录.季军队id can be joined with 篮球运动队.篮球运动队", "columns_en": {"词条id": "Phrase_id", "队名": "Team_name", "所属国家": "Country_of_nationality", "成立时间": "_Other_Organiser", "主教练": "Master_Coach", "奥运会冠军数量": "Number_of_Olympic_champions", "世锦赛冠军数量": "Number_of_World_Cup_champions", "世界排名": "World_ranking", "年份": "Year", "奥运会名称": "Name_of_Olympic_Games", "冠军队id": "♪_The_champion_♪_♪_♪_The_champion_♪_♪_♪_the_champion_♪_♪_♪_♪_♪_♪_♪_the_champion_♪_♪_♪_♪_♪_♪_♪_♪_♪_♪_♪_♪_♪_♪_♪_♪_♪_♪_♪_♪_♪_♪_♪_the_champion_♪_♪_♪_♪_♪", "亚军队id": "Army_of_Asia_id", "季军队id": "Quarterly_military_id", "名次": "Synchronising_folder", "主帅": "Sir", "对手队id": "Enemy_id", "赢的次数": "Number_of_wins", "输的次数": "Number_of_losses"}, "table_en": {"篮球运动队": "Basketball_teams", "奥运会冠亚军记录": "The_Olympic_champion's_record", "中国队奥运会成绩": "The_Chinese_Olympics", "中国队交手记录": "The_Chinese_team's_hand-to-hand_record"}}, "城市财政收入": {"sqlite": "CREATE TABLE 各省财政收入 (\n  省份 VARCHAR(50) PRIMARY KEY, -- Province\n  GDP总计(亿) VARCHAR(50), -- Total GDP (billions)\n  GDP同比增速 INTEGER, -- The same rate of growth in GDP as in the previous year\n  GDP省内排名 INTEGER, -- Intra-GDP ranking\n  固定资产投资同比增速 INTEGER, -- Increase in fixed asset investments from year to year\n  财政预算收入(亿) INTEGER, -- Fiscal budget revenue (billions)\n  财政预算同比增速 INTEGER, -- Budget increase on a year-on-year basis\n  预算支出额度(亿) INTEGER, -- Budgeted expenditure (billions)\n  预算赤字率 INTEGER, -- Budget deficit rate\n  收入透明度 INTEGER, -- Income transparency\n);\nCREATE TABLE 300城土地供给 (\n  年份 INTEGER PRIMARY KEY, -- Year\n  整体土地供给规划面积(亿平) DATETIME, -- Total land supply planning area (millions of square metres)\n  整体累计同比 INTEGER, -- Total cumulative year-on-year\n  一线城市土地供给规划面积(万平) INTEGER, -- First-line urban land supply planning area (millions of flats)\n  一线城市累计同比 INTEGER, -- Accumulated per cent of first-line cities\n  二线城市土地供给规划面积(亿平) INTEGER, -- Second-line urban land supply planning area (millions of square metres)\n  二线城市累计同比 INTEGER, -- Accumulated per cent of second-line cities\n  三四线城市土地供给规划面积(亿平) INTEGER, -- Three or four lines of urban land supply planning area (millions of square metres)\n  三四线城市累计同比 INTEGER, -- Three or four-line cities cumulatively equal to each other\n);\nCREATE TABLE 300城土地成交 (\n  年份 INTEGER PRIMARY KEY, -- Year\n  成交建筑面积 DATETIME, -- Concluded building space\n  成交累计同比 INTEGER, -- Accumulated year-on-year\n  土地出让金 INTEGER, -- Land concessions\n  一线城市成交建筑面积 INTEGER, -- The first line of the city is in the building area\n  一线成交累计同比 INTEGER, -- It's a one-to-one match on one line\n  一线城市土地出让金 INTEGER, -- First-line city land concession\n  二线城市成交建筑面积 INTEGER, -- Two-line city is in the building area\n  二线成交累计同比 INTEGER, -- It's a two-line deal  It's a one-to-one match\n  二线城市土地出让金 INTEGER, -- Second-line city land concession\n  三四线城市成交建筑面积 INTEGER, -- Three-four-line city is in the building area\n  三四线成交累计同比 INTEGER, -- Three or four lines  one-on-one\n  三四线城市土地出让金 INTEGER, -- Three or four lines of city land concession\n);\n", "columns_en": {"省份": "Province", "GDP总计(亿)": "Total_GDP_(billions)", "GDP同比增速": "The_same_rate_of_growth_in_GDP_as_in_the_previous_year", "GDP省内排名": "Intra-GDP_ranking", "固定资产投资同比增速": "Increase_in_fixed_asset_investments_from_year_to_year", "财政预算收入(亿)": "Fiscal_budget_revenue_(billions)", "财政预算同比增速": "Budget_increase_on_a_year-on-year_basis", "预算支出额度(亿)": "Budgeted_expenditure_(billions)", "预算赤字率": "Budget_deficit_rate", "收入透明度": "Income_transparency", "年份": "Year", "整体土地供给规划面积(亿平)": "Total_land_supply_planning_area_(millions_of_square_metres)", "整体累计同比": "Total_cumulative_year-on-year", "一线城市土地供给规划面积(万平)": "First-line_urban_land_supply_planning_area_(millions_of_flats)", "一线城市累计同比": "Accumulated_per_cent_of_first-line_cities", "二线城市土地供给规划面积(亿平)": "Second-line_urban_land_supply_planning_area_(millions_of_square_metres)", "二线城市累计同比": "Accumulated_per_cent_of_second-line_cities", "三四线城市土地供给规划面积(亿平)": "Three_or_four_lines_of_urban_land_supply_planning_area_(millions_of_square_metres)", "三四线城市累计同比": "Three_or_four-line_cities_cumulatively_equal_to_each_other", "成交建筑面积": "Concluded_building_space", "成交累计同比": "Accumulated_year-on-year", "土地出让金": "Land_concessions", "一线城市成交建筑面积": "The_first_line_of_the_city_is_in_the_building_area", "一线成交累计同比": "It's_a_one-to-one_match_on_one_line", "一线城市土地出让金": "First-line_city_land_concession", "二线城市成交建筑面积": "Two-line_city_is_in_the_building_area", "二线成交累计同比": "It's_a_two-line_deal__It's_a_one-to-one_match", "二线城市土地出让金": "Second-line_city_land_concession", "三四线城市成交建筑面积": "Three-four-line_city_is_in_the_building_area", "三四线成交累计同比": "Three_or_four_lines__one-on-one", "三四线城市土地出让金": "Three_or_four_lines_of_city_land_concession"}, "table_en": {"各省财政收入": "Fiscal_revenues_of_the_provinces", "300城土地供给": "300-city_land_supply", "300城土地成交": "300-city_land_deals"}}, "卫星天体": {"sqlite": "CREATE TABLE 八大行星 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  距日距离 VARCHAR(50), -- Distance from the Sun\n  表面积 INTEGER, -- Table area\n  体积排名 INTEGER, -- Volume Rating\n  重量排名 INTEGER, -- Weight Rating\n  最高温度 INTEGER, -- Maximum temperature\n  最低温度 INTEGER, -- Minimum temperature\n);\nCREATE TABLE 行星相关电影 (\n  词条id INTEGER PRIMARY KEY, -- Phrase id\n  影片名 INTEGER, -- Video Name\n  导演 VARCHAR(50), -- Director\n  拍摄国家 VARCHAR(50), -- Shooting Country\n  豆瓣评分 VARCHAR(50), -- Bean petals\n  关联行星id INTEGER, -- Associated planet id\n);\nCREATE TABLE 火星探测国家 (\n  探测器 INTEGER PRIMARY KEY, -- Detectors\n  发射时间 VARCHAR(50), -- Time of launch\n  国家 DATETIME, -- National\n  结果 VARCHAR(50), -- Outcome\n);\nCREATE TABLE 月球探测国家 (\n  飞行器 VARCHAR(50) PRIMARY KEY, -- Aircraft\n  时间 VARCHAR(50), -- Time\n  国家 DATETIME, -- National\n  有无航天员 VARCHAR(50), -- Is there an astronaut?\n  探测目的 BINARY, -- Purpose of detection\n);\nCREATE TABLE 载人飞船 (\n  飞船名称 VARCHAR(50) PRIMARY KEY, -- Name of ship\n  发射时间 VARCHAR(50), -- Time of launch\n  发射数量 DATETIME, -- Number of launches\n  国家 INTEGER, -- National\n  航天员数量 VARCHAR(50), -- Number of astronauts\n  航天员出舱时间 INTEGER, -- Astronaut exit time\n);\n-- 行星相关电影.关联行星id can be joined with 八大行星.八大行星", "columns_en": {"词条id": "Phrase_id", "名称": "Name", "距日距离": "Distance_from_the_Sun", "表面积": "Table_area", "体积排名": "Volume_Rating", "重量排名": "Weight_Rating", "最高温度": "Maximum_temperature", "最低温度": "Minimum_temperature", "影片名": "Video_Name", "导演": "Director", "拍摄国家": "Shooting_Country", "豆瓣评分": "Bean_petals", "关联行星id": "Associated_planet_id", "探测器": "Detectors", "发射时间": "Time_of_launch", "国家": "National", "结果": "Outcome", "飞行器": "Aircraft", "时间": "Time", "有无航天员": "Is_there_an_astronaut?", "探测目的": "Purpose_of_detection", "飞船名称": "Name_of_ship", "发射数量": "Number_of_launches", "航天员数量": "Number_of_astronauts", "航天员出舱时间": "Astronaut_exit_time"}, "table_en": {"八大行星": "Eight_planets", "行星相关电影": "Planet-related_movies", "火星探测国家": "Mars_exploration_countries", "月球探测国家": "Moon_exploration_countries", "载人飞船": "A_manned_ship"}}, "各城市一二三产业经济": {"sqlite": "CREATE TABLE 城市 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  所属省份 VARCHAR(50), -- Provinces to which they belong\n  地区生产总值 VARCHAR(50), -- Gross regional product (GDP)\n  生产总值增长率 INTEGER, -- GDP growth rate\n  第一产业总值 INTEGER, -- Gross domestic product (GDP)\n  第二产业总值 INTEGER, -- Gross domestic product (GDP)\n  第三产业总值 INTEGER, -- Total value of the tertiary sector\n);\nCREATE TABLE 城市金融产业 (\n  城市id INTEGER PRIMARY KEY, -- Urban id\n  金融业增加值 INTEGER, -- Value added in the financial sector\n  增长率 VARCHAR(50), -- Growth rate\n  金融机构数量 VARCHAR(50), -- Number of financial institutions\n  外币存款余额 INTEGER, -- Balance of foreign currency deposits\n  存款余额增长率 INTEGER, -- Growth of deposit balances\n  贷款余额 INTEGER, -- Loan balance\n  贷款余额增长率 INTEGER, -- Growth of loan balance\n);\nCREATE TABLE 城市贸易产业 (\n  城市id INTEGER PRIMARY KEY, -- Urban id\n  行业 INTEGER, -- Industry\n  进口额 VARCHAR(50), -- Imports\n  进口额增长率 INTEGER, -- Growth of imports\n  出口额 INTEGER, -- Exports\n  出口额增长率 INTEGER, -- Growth of export value\n);\nCREATE TABLE 城市第一产业 (\n  城市id INTEGER PRIMARY KEY, -- Urban id\n  产业类型 INTEGER, -- Type of industry\n  收入 VARCHAR(50), -- Income\n  收入增长率 INTEGER, -- Income growth rate\n  产量 INTEGER, -- Production\n  产量增长率 INTEGER, -- Production growth rate\n);\n-- 城市贸易产业.城市id can be joined with 城市.城市\n-- 城市第一产业.城市id can be joined with 城市.城市\n-- 城市金融产业.城市id can be joined with 城市.城市", "columns_en": {"词条id": "Phrase_id", "名称": "Name", "所属省份": "Provinces_to_which_they_belong", "地区生产总值": "Gross_regional_product_(GDP)", "生产总值增长率": "GDP_growth_rate", "第一产业总值": "Gross_domestic_product_(GDP)", "第二产业总值": "Gross_domestic_product_(GDP)", "第三产业总值": "Total_value_of_the_tertiary_sector", "城市id": "Urban_id", "金融业增加值": "Value_added_in_the_financial_sector", "增长率": "Growth_rate", "金融机构数量": "Number_of_financial_institutions", "外币存款余额": "Balance_of_foreign_currency_deposits", "存款余额增长率": "Growth_of_deposit_balances", "贷款余额": "Loan_balance", "贷款余额增长率": "Growth_of_loan_balance", "行业": "Industry", "进口额": "Imports", "进口额增长率": "Growth_of_imports", "出口额": "Exports", "出口额增长率": "Growth_of_export_value", "产业类型": "Type_of_industry", "收入": "Income", "收入增长率": "Income_growth_rate", "产量": "Production", "产量增长率": "Production_growth_rate"}, "table_en": {"城市": "Urban", "城市金融产业": "Urban_financial_industry", "城市贸易产业": "Urban_trade_industry", "城市第一产业": "Urban_primary_sector"}}, "历史战役": {"sqlite": "CREATE TABLE 战役 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  历时时间 VARCHAR(50), -- Time spent\n  地点 INTEGER, -- Location\n  朝代 VARCHAR(50), -- Dynasty!\n  参战人数 VARCHAR(50), -- Number of persons participating in the war\n  死亡人数 INTEGER, -- Number of deaths\n);\nCREATE TABLE 将军 (\n  词条id INTEGER PRIMARY KEY, -- Phrase id\n  姓名 INTEGER, -- Name\n  领兵出战次数 VARCHAR(50), -- Number of battles led\n  胜数 INTEGER, -- Winners\n  败数 INTEGER, -- Declines\n);\nCREATE TABLE 纪念将军的诗词 (\n  诗词 INTEGER PRIMARY KEY, -- Poetry\n  作者 VARCHAR(50), -- Author\n  朝代 VARCHAR(50), -- Dynasty!\n  纪念将军id VARCHAR(50), -- General id\n);\nCREATE TABLE 将军影视形象 (\n  将军id INTEGER PRIMARY KEY, -- General id\n  影视剧 INTEGER, -- Video drama\n  饰演者 VARCHAR(50), -- Actor\n);\nCREATE TABLE 参战双方 (\n  战役id VARCHAR(50) PRIMARY KEY, -- Battle id\n  赢方将军id INTEGER, -- Winner general id\n  赢方兵力 INTEGER, -- Winner's strength\n  败方将军id INTEGER, -- Loser general id\n  败方兵力 INTEGER, -- Loser's strength\n);\n-- 纪念将军的诗词.纪念将军id can be joined with 将军.将军\n-- 将军影视形象.将军id can be joined with 将军.将军\n-- 参战双方.败方将军id can be joined with 将军.将军\n-- 参战双方.战役id can be joined with 战役.战役\n-- 参战双方.赢方将军id can be joined with 将军.将军", "columns_en": {"词条id": "Phrase_id", "名称": "Name", "历时时间": "Time_spent", "地点": "Location", "朝代": "Dynasty!", "参战人数": "Number_of_persons_participating_in_the_war", "死亡人数": "Number_of_deaths", "姓名": "Name", "领兵出战次数": "Number_of_battles_led", "胜数": "Winners", "败数": "Declines", "诗词": "Poetry", "作者": "Author", "纪念将军id": "General_id", "将军id": "General_id", "影视剧": "Video_drama", "饰演者": "Actor", "战役id": "Battle_id", "赢方将军id": "Winner_general_id", "赢方兵力": "Winner's_strength", "败方将军id": "Loser_general_id", "败方兵力": "Loser's_strength"}, "table_en": {"战役": "Battle", "将军": "General", "纪念将军的诗词": "The_poem_of_the_General", "将军影视形象": "The_General's_image", "参战双方": "Parties_participating_in_the_war"}}, "学术比赛": {"sqlite": "CREATE TABLE 比赛 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  方向 VARCHAR(50), -- Orientation\n  举办单位 VARCHAR(50), -- Organizer\n  单位性质 VARCHAR(50), -- Nature of units\n  奖金数 VARCHAR(50), -- Number of bonuses\n  录取队伍数量 INTEGER, -- Number of teams admitted\n  比赛平台 INTEGER, -- Game platform\n);\nCREATE TABLE 参赛队伍 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  队名 INTEGER, -- Team name\n  人数 VARCHAR(50), -- Number\n);\nCREATE TABLE 参赛学生 (\n  词条id INTEGER PRIMARY KEY, -- Phrase id\n  姓名 INTEGER, -- Name\n  年龄 VARCHAR(50), -- Age\n  学历 INTEGER, -- Education\n  学校 VARCHAR(50), -- School\n);\nCREATE TABLE 参赛成绩 (\n  学生id VARCHAR(50) PRIMARY KEY, -- Student id\n  加入队伍id INTEGER, -- Join the teamid\n  参加比赛id INTEGER, -- ♪ In the game ♪ ♪ ♪ I'm in the game ♪ ♪ ♪ I'm in the game ♪ ♪ ♪ I'm in the game ♪ ♪ ♪ ♪ I'm in the game ♪ ♪ ♪ ♪ I'm in the game ♪ ♪ ♪ ♪ I'm in the game ♪ ♪ ♪ ♪ I'm in the game ♪ ♪ ♪ I'm in the game ♪\n  成绩 INTEGER, -- Achievements\n);\n-- 参赛成绩.参加比赛id can be joined with 比赛.比赛\n-- 参赛成绩.学生id can be joined with 参赛学生.参赛学生\n-- 参赛成绩.加入队伍id can be joined with 参赛队伍.参赛队伍", "columns_en": {"词条id": "Phrase_id", "名称": "Name", "方向": "Orientation", "举办单位": "Organizer", "单位性质": "Nature_of_units", "奖金数": "Number_of_bonuses", "录取队伍数量": "Number_of_teams_admitted", "比赛平台": "Game_platform", "队名": "Team_name", "人数": "Number", "姓名": "Name", "年龄": "Age", "学历": "Education", "学校": "School", "学生id": "Student_id", "加入队伍id": "Join_the_teamid", "参加比赛id": "♪_In_the_game_♪_♪_♪_I'm_in_the_game_♪_♪_♪_I'm_in_the_game_♪_♪_♪_I'm_in_the_game_♪_♪_♪_♪_I'm_in_the_game_♪_♪_♪_♪_I'm_in_the_game_♪_♪_♪_♪_I'm_in_the_game_♪_♪_♪_♪_I'm_in_the_game_♪_♪_♪_I'm_in_the_game_♪", "成绩": "Achievements"}, "table_en": {"比赛": "Game", "参赛队伍": "The_race_team", "参赛学生": "Student_contestant", "参赛成绩": "Achievements_in_the_competition"}}, "动物榜单": {"sqlite": "CREATE TABLE 动物 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  学名 INTEGER, -- Acupuncture\n  属性 VARCHAR(50), -- Properties\n);\nCREATE TABLE 最聪明的动物 (\n  动物id VARCHAR(50) PRIMARY KEY, -- Animal id\n  排名 INTEGER, -- Rank\n  理由 INTEGER, -- Rationale\n);\nCREATE TABLE 最毒的动物 (\n  动物id VARCHAR(50) PRIMARY KEY, -- Animal id\n  称号 INTEGER, -- Title\n  毒性排名 VARCHAR(50), -- Toxicity ranking\n  攻击力排名 INTEGER, -- Attack ranking\n  中毒后死亡时间 INTEGER, -- Time of death after poisoning\n);\nCREATE TABLE 最大的动物 (\n  动物id INTEGER PRIMARY KEY, -- Animal id\n  排名 INTEGER, -- Rank\n  体重 INTEGER, -- body weight\n  说明 INTEGER, -- Annotations\n);\nCREATE TABLE 飞得最高的动物 (\n  动物id VARCHAR(50) PRIMARY KEY, -- Animal id\n  排名 INTEGER, -- Rank\n  飞行高度 INTEGER, -- Flight height\n);\nCREATE TABLE 速度最快的动物 (\n  动物id INTEGER PRIMARY KEY, -- Animal id\n  排名 INTEGER, -- Rank\n  速度 INTEGER, -- Speed\n);\n-- 速度最快的动物.动物id can be joined with 动物.动物\n-- 最大的动物.动物id can be joined with 动物.动物\n-- 最聪明的动物.动物id can be joined with 动物.动物\n-- 最毒的动物.动物id can be joined with 动物.动物\n-- 飞得最高的动物.动物id can be joined with 动物.动物", "columns_en": {"词条id": "Phrase_id", "学名": "Acupuncture", "属性": "Properties", "动物id": "Animal_id", "排名": "Rank", "理由": "Rationale", "称号": "Title", "毒性排名": "Toxicity_ranking", "攻击力排名": "Attack_ranking", "中毒后死亡时间": "Time_of_death_after_poisoning", "体重": "body_weight", "说明": "Annotations", "飞行高度": "Flight_height", "速度": "Speed"}, "table_en": {"动物": "Animals", "最聪明的动物": "The_smartest_animal", "最毒的动物": "The_worst_animal", "最大的动物": "The_biggest_animal", "飞得最高的动物": "The_highest-flying_animal", "速度最快的动物": "The_fastest_animal_ever"}}, "城市地铁": {"sqlite": "CREATE TABLE 中国地铁 (\n  年份 VARCHAR(50) PRIMARY KEY, -- Year\n  总里程 DATETIME, -- Total mileage\n  开通城市数量 INTEGER, -- Number of cities opened\n);\nCREATE TABLE 城市 (\n  词条id INTEGER PRIMARY KEY, -- Phrase id\n  城市名称 VARCHAR(50), -- Name of city\n  所属省份 VARCHAR(50), -- Provinces to which they belong\n);\nCREATE TABLE 城市地铁里程 (\n  城市id VARCHAR(50) PRIMARY KEY, -- Urban id\n  地铁运营里程 INTEGER, -- Metro operating mileage\n  在建里程 INTEGER, -- It's building miles\n  规划里程 INTEGER, -- Planning miles\n  已运营线路数 INTEGER, -- Number of lines operated\n);\nCREATE TABLE 城市地铁日均客运量 (\n  城市id INTEGER PRIMARY KEY, -- Urban id\n  日均客运量(万人次) INTEGER, -- Average daily passenger traffic (millions)\n  每日每公里客运量(万人次) INTEGER, -- Number of passengers per kilometre per day (millions)\n  每公里运营成本 INTEGER, -- Operating costs per kilometre\n  每公里运营收入 INTEGER, -- Operating income per kilometre\n);\nCREATE TABLE 城市地铁票价 (\n  城市id INTEGER PRIMARY KEY, -- Urban id\n  2元可乘坐里程 INTEGER, -- Two dollars for miles\n  3元可乘坐里程 INTEGER, -- Three dollars for miles\n  4元可乘坐里程 INTEGER, -- Four bucks is a mileage\n  5元可乘坐里程 INTEGER, -- Five bucks a mile\n);\n-- 城市地铁日均客运量.城市id can be joined with 城市.城市\n-- 城市地铁里程.城市id can be joined with 城市.城市\n-- 城市地铁票价.城市id can be joined with 城市.城市", "columns_en": {"年份": "Year", "总里程": "Total_mileage", "开通城市数量": "Number_of_cities_opened", "词条id": "Phrase_id", "城市名称": "Name_of_city", "所属省份": "Provinces_to_which_they_belong", "城市id": "Urban_id", "地铁运营里程": "Metro_operating_mileage", "在建里程": "It's_building_miles", "规划里程": "Planning_miles", "已运营线路数": "Number_of_lines_operated", "日均客运量(万人次)": "Average_daily_passenger_traffic_(millions)", "每日每公里客运量(万人次)": "Number_of_passengers_per_kilometre_per_day_(millions)", "每公里运营成本": "Operating_costs_per_kilometre", "每公里运营收入": "Operating_income_per_kilometre", "2元可乘坐里程": "Two_dollars_for_miles", "3元可乘坐里程": "Three_dollars_for_miles", "4元可乘坐里程": "Four_bucks_is_a_mileage", "5元可乘坐里程": "Five_bucks_a_mile"}, "table_en": {"中国地铁": "China_Metro", "城市": "Urban", "城市地铁里程": "Urban_subway_miles", "城市地铁日均客运量": "Average_number_of_passengers_per_day_on_the_urban_subway", "城市地铁票价": "Urban_subway_fare"}}, "双11活动": {"sqlite": "CREATE TABLE 电商 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  所属公司 VARCHAR(50), -- Company to which it belongs\n  类型 VARCHAR(50), -- Type\n  影响力指数 VARCHAR(50), -- Impact index\n  排名 INTEGER, -- Rank\n  上线国家数量 INTEGER, -- Number of online countries\n);\nCREATE TABLE 电商覆盖国家 (\n  电商id INTEGER PRIMARY KEY, -- Electrician id\n  支持国家 INTEGER, -- Support to States\n  上线时间 VARCHAR(50), -- Online time\n  负责的分公司名称 DATETIME, -- Name of responsible branch\n);\nCREATE TABLE 商家 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  所属国家 VARCHAR(50), -- Country of nationality\n  主营类别 VARCHAR(50), -- Main battalion category\n  网店覆盖国家数量 VARCHAR(50), -- Number of countries covered by Internet shops\n  实体店数量 INTEGER, -- Number of physical stores\n  入驻电商数量 INTEGER, -- Number of resident electric power providers\n);\nCREATE TABLE 商家网点覆盖国家 (\n  商家id INTEGER PRIMARY KEY, -- Business id\n  国家 INTEGER, -- National\n  实体店数量 VARCHAR(50), -- Number of physical stores\n  年平均营业额 INTEGER, -- Average annual turnover\n);\nCREATE TABLE 商家交易额 (\n  商家id INTEGER PRIMARY KEY, -- Business id\n  电商平台id INTEGER, -- Commercial platformid\n  上线品类数量 INTEGER, -- Number of over-line items\n  促销品类数量 INTEGER, -- Number of promotional items\n  平均折扣 INTEGER, -- Average discount\n  交易额 INTEGER, -- Transactions\n  占全年销售额比例 INTEGER, -- Percentage of total annual sales\n);\nCREATE TABLE 电商活动交易额 (\n  电商平台id INTEGER PRIMARY KEY, -- Commercial platformid\n  活动日 INTEGER, -- Days of activity\n  参加活动商家数量 VARCHAR(50), -- Number of participants\n  促销商品数量 INTEGER, -- Number of goods promoted\n  交易额 INTEGER, -- Transactions\n);\n-- 电商覆盖国家.电商id can be joined with 电商.电商\n-- 商家交易额.电商平台id can be joined with 电商.电商\n-- 商家交易额.商家id can be joined with 商家.商家\n-- 商家网点覆盖国家.商家id can be joined with 商家.商家\n-- 电商活动交易额.电商平台id can be joined with 电商.电商", "columns_en": {"词条id": "Phrase_id", "名称": "Name", "所属公司": "Company_to_which_it_belongs", "类型": "Type", "影响力指数": "Impact_index", "排名": "Rank", "上线国家数量": "Number_of_online_countries", "电商id": "Electrician_id", "支持国家": "Support_to_States", "上线时间": "Online_time", "负责的分公司名称": "Name_of_responsible_branch", "所属国家": "Country_of_nationality", "主营类别": "Main_battalion_category", "网店覆盖国家数量": "Number_of_countries_covered_by_Internet_shops", "实体店数量": "Number_of_physical_stores", "入驻电商数量": "Number_of_resident_electric_power_providers", "商家id": "Business_id", "国家": "National", "年平均营业额": "Average_annual_turnover", "电商平台id": "Commercial_platformid", "上线品类数量": "Number_of_over-line_items", "促销品类数量": "Number_of_promotional_items", "平均折扣": "Average_discount", "交易额": "Transactions", "占全年销售额比例": "Percentage_of_total_annual_sales", "活动日": "Days_of_activity", "参加活动商家数量": "Number_of_participants", "促销商品数量": "Number_of_goods_promoted"}, "table_en": {"电商": "Electrician", "电商覆盖国家": "Operators_cover_the_country", "商家": "Business", "商家网点覆盖国家": "Business_points_cover_the_country", "商家交易额": "Business_turnover", "电商活动交易额": "Trader_'_s_activities"}}, "华语电影奖": {"sqlite": "CREATE TABLE 华语电影奖 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  创办时间 VARCHAR(50), --  Other Organiser\n  颁奖周期 DATETIME, -- Award cycle\n  颁奖地点 INTEGER, -- Award location\n);\nCREATE TABLE 演员 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  姓名 INTEGER, -- Name\n  性别 VARCHAR(50), -- Gender\n  年龄 VARCHAR(50), -- Age\n  主演电影数 INTEGER, -- Number of major films\n  出演电影数 INTEGER, -- Number of films performed\n  获得提名数 INTEGER, -- Number of nominations received\n  获奖次数 INTEGER, -- Number of awards\n);\nCREATE TABLE 电影 (\n  词条id INTEGER PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  上映时间 VARCHAR(50), -- Show time\n  片长 DATETIME, -- The film's long\n  票房 INTEGER, -- Ticket room\n  获奖次数 INTEGER, -- Number of awards\n);\nCREATE TABLE 华语电影奖提名名单 (\n  年份 INTEGER PRIMARY KEY, -- Year\n  届数 DATETIME, -- Number of sessions\n  提名人id INTEGER, -- Nominee id\n  具体奖项 INTEGER, -- Specific awards\n  电影奖id VARCHAR(50), -- Film Award id\n);\nCREATE TABLE 华语电影奖获奖名单 (\n  年份 INTEGER PRIMARY KEY, -- Year\n  届数 DATETIME, -- Number of sessions\n  电影奖id INTEGER, -- Film Award id\n  具体奖项 INTEGER, -- Specific awards\n  获奖人id VARCHAR(50), -- Laureate id\n  电影id INTEGER, -- Film id\n);\n-- 华语电影奖获奖名单.获奖人id can be joined with 演员.演员\n-- 华语电影奖提名名单.提名人id can be joined with 演员.演员\n-- 华语电影奖提名名单.电影奖id can be joined with 华语电影奖.华语电影奖\n-- 华语电影奖获奖名单.电影id can be joined with 电影.电影\n-- 华语电影奖获奖名单.电影奖id can be joined with 华语电影奖.华语电影奖", "columns_en": {"词条id": "Phrase_id", "名称": "Name", "创办时间": "_Other_Organiser", "颁奖周期": "Award_cycle", "颁奖地点": "Award_location", "姓名": "Name", "性别": "Gender", "年龄": "Age", "主演电影数": "Number_of_major_films", "出演电影数": "Number_of_films_performed", "获得提名数": "Number_of_nominations_received", "获奖次数": "Number_of_awards", "上映时间": "Show_time", "片长": "The_film's_long", "票房": "Ticket_room", "年份": "Year", "届数": "Number_of_sessions", "提名人id": "Nominee_id", "具体奖项": "Specific_awards", "电影奖id": "Film_Award_id", "获奖人id": "Laureate_id", "电影id": "Film_id"}, "table_en": {"华语电影奖": "Chinese_Film_Award", "演员": "Actors", "电影": "Film", "华语电影奖提名名单": "List_of_nominations_for_the_Chinese-language_film_award", "华语电影奖获奖名单": "List_of_winners_of_the_Chinese-language_film_award"}}, "公司广告": {"sqlite": "CREATE TABLE 公司 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  主要产品 VARCHAR(50), -- Main products\n  广告投入成本 VARCHAR(50), -- Cost of advertising input\n  广告投入成本占比 INTEGER, -- Cost of advertising inputs as a percentage\n);\nCREATE TABLE 广告平台 (\n  词条id INTEGER PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  广告收入 VARCHAR(50), -- Advertisement income\n  广告收入占比 INTEGER, -- Share of income from advertising\n);\nCREATE TABLE 公司在平台投入广告 (\n  公司id INTEGER PRIMARY KEY, -- Companyid\n  平台id INTEGER, -- Platformid\n  购买关键词数量 INTEGER, -- Number of purchase keywords\n  点击率 INTEGER, -- Click Rate\n  转换率 INTEGER, -- Conversion rate\n);\n-- 公司在平台投入广告.平台id can be joined with 广告平台.广告平台\n-- 公司在平台投入广告.公司id can be joined with 公司.公司", "columns_en": {"词条id": "Phrase_id", "名称": "Name", "主要产品": "Main_products", "广告投入成本": "Cost_of_advertising_input", "广告投入成本占比": "Cost_of_advertising_inputs_as_a_percentage", "广告收入": "Advertisement_income", "广告收入占比": "Share_of_income_from_advertising", "公司id": "Companyid", "平台id": "Platformid", "购买关键词数量": "Number_of_purchase_keywords", "点击率": "Click_Rate", "转换率": "Conversion_rate"}, "table_en": {"公司": "Company", "广告平台": "Advertising_platform", "公司在平台投入广告": "The_company's_advertising_on_the_platform"}}, "赚钱公司榜单": {"sqlite": "CREATE TABLE 国家 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  所属洲 VARCHAR(50), -- The continent to which they belong\n  注册公司数量 VARCHAR(50), -- Number of registered companies\n  上市公司数量 INTEGER, -- Number of companies listed\n);\nCREATE TABLE 世界最赚钱公司 (\n  词条id INTEGER PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  所属国家id VARCHAR(50), -- Country of nationalityd\n  年利润 INTEGER, -- Annual profits\n  世界排名 INTEGER, -- World ranking\n);\nCREATE TABLE 中国最赚钱公司 (\n  词条id INTEGER PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  位于城市 VARCHAR(50), -- It's in the city\n  所属省份 VARCHAR(50), -- Provinces to which they belong\n  年营业额 VARCHAR(50), -- Annual turnover\n  国内排名 INTEGER, -- Domestic rankings\n  世界排名 INTEGER, -- World ranking\n);\n-- 世界最赚钱公司.所属国家id can be joined with 国家.国家", "columns_en": {"词条id": "Phrase_id", "名称": "Name", "所属洲": "The_continent_to_which_they_belong", "注册公司数量": "Number_of_registered_companies", "上市公司数量": "Number_of_companies_listed", "所属国家id": "Country_of_nationalityd", "年利润": "Annual_profits", "世界排名": "World_ranking", "位于城市": "It's_in_the_city", "所属省份": "Provinces_to_which_they_belong", "年营业额": "Annual_turnover", "国内排名": "Domestic_rankings"}, "table_en": {"国家": "National", "世界最赚钱公司": "The_world's_most_profitable_company", "中国最赚钱公司": "China's_most_profitable_company"}}, "城市拥堵": {"sqlite": "CREATE TABLE 城市 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  城市 INTEGER, -- Urban\n  所属省份 VARCHAR(50), -- Provinces to which they belong\n  城市人口 VARCHAR(50), -- Urban population\n  城市面积 INTEGER, -- Urban area\n  汽车保有量级别(辆) INTEGER, -- Vehicle holdings level (vehicles)\n  通勤高峰拥堵指数 INTEGER, -- Classic peak congestion index\n  通勤高峰实际速度(千米/时) INTEGER, -- Actual velocity of commuter peaks (km/h)\n  拥堵排名 INTEGER, -- Blocking rankings\n);\nCREATE TABLE 全国交通枢纽 (\n  词条id INTEGER PRIMARY KEY, -- Phrase id\n  交通枢纽站 INTEGER, -- Traffic hubs\n  所属城市id VARCHAR(50), --  Other Organiser\n  所属省份 VARCHAR(50), -- Provinces to which they belong\n  平均拥堵指数 INTEGER, -- Average congestion index\n  周边路网平均速度(千米/时) INTEGER, -- Average speed of perimeter network (km/h)\n  拥堵排名 INTEGER, -- Blocking rankings\n);\nCREATE TABLE 旅游景点 (\n  词条id INTEGER PRIMARY KEY, -- Phrase id\n  景点名称 INTEGER, -- Place name\n  所属城市id VARCHAR(50), --  Other Organiser\n  平均拥堵指数 INTEGER, -- Average congestion index\n  周边路网平均速度(千米/时) INTEGER, -- Average speed of perimeter network (km/h)\n  拥堵排名 INTEGER, -- Blocking rankings\n);\nCREATE TABLE 全国热门景点 (\n  景点id INTEGER PRIMARY KEY, -- Siteid\n  日均接待游客数量 INTEGER, -- Average number of visitors per day\n  日均外省游客数量 INTEGER, -- Average number of visitors per day out of the province\n  热度排名 INTEGER, -- Heat Rating\n);\nCREATE TABLE 热门出境游城市 (\n  城市 INTEGER PRIMARY KEY, -- Urban\n  所在国家 VARCHAR(50), -- Country\n  国内游客数量 VARCHAR(50), -- Number of domestic tourists\n  排名 INTEGER, -- Rank\n);\n-- 旅游景点.所属城市id can be joined with 城市.城市\n-- 全国交通枢纽.所属城市id can be joined with 城市.城市\n-- 全国热门景点.景点id can be joined with 旅游景点.旅游景点", "columns_en": {"词条id": "Phrase_id", "城市": "Urban", "所属省份": "Provinces_to_which_they_belong", "城市人口": "Urban_population", "城市面积": "Urban_area", "汽车保有量级别(辆)": "Vehicle_holdings_level_(vehicles)", "通勤高峰拥堵指数": "Classic_peak_congestion_index", "通勤高峰实际速度(千米/时)": "Actual_velocity_of_commuter_peaks_(km/h)", "拥堵排名": "Blocking_rankings", "交通枢纽站": "Traffic_hubs", "所属城市id": "_Other_Organiser", "平均拥堵指数": "Average_congestion_index", "周边路网平均速度(千米/时)": "Average_speed_of_perimeter_network_(km/h)", "景点名称": "Place_name", "景点id": "Siteid", "日均接待游客数量": "Average_number_of_visitors_per_day", "日均外省游客数量": "Average_number_of_visitors_per_day_out_of_the_province", "热度排名": "Heat_Rating", "所在国家": "Country", "国内游客数量": "Number_of_domestic_tourists", "排名": "Rank"}, "table_en": {"城市": "Urban", "全国交通枢纽": "National_transportation_hubs", "旅游景点": "Tourism_attractions", "全国热门景点": "It's_a_national_hotspot", "热门出境游城市": "It's_a_hot_trip_out_of_the_city"}}, "手机品牌代言人": {"sqlite": "CREATE TABLE 代言明星 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  姓名 INTEGER, -- Name\n  性别 VARCHAR(50), -- Gender\n  年龄 VARCHAR(50), -- Age\n  所属国家 INTEGER, -- Country of nationality\n  职业 VARCHAR(50), -- Occupation\n  财富排名 VARCHAR(50), -- Wealth ranking\n);\nCREATE TABLE 智能手机品牌 (\n  词条id INTEGER PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  所属国家 VARCHAR(50), -- Country of nationality\n  世界500强排名 VARCHAR(50), -- The world's top 500\n  出货量 INTEGER, -- Volume of shipments\n  市场份额 INTEGER, -- Market share\n);\nCREATE TABLE 手机代言明星 (\n  明星id INTEGER PRIMARY KEY, -- Starid\n  品牌id INTEGER, -- Brandid\n  开始年份 INTEGER, -- Start year\n  代言年数 DATETIME, -- Year(s) of representation\n  代言费 INTEGER, -- Advocacy costs\n  代言型号数量 INTEGER, -- Number of representative models\n);\n-- 手机代言明星.明星id can be joined with 代言明星.代言明星\n-- 手机代言明星.品牌id can be joined with 智能手机品牌.智能手机品牌", "columns_en": {"词条id": "Phrase_id", "姓名": "Name", "性别": "Gender", "年龄": "Age", "所属国家": "Country_of_nationality", "职业": "Occupation", "财富排名": "Wealth_ranking", "名称": "Name", "世界500强排名": "The_world's_top_500", "出货量": "Volume_of_shipments", "市场份额": "Market_share", "明星id": "Starid", "品牌id": "Brandid", "开始年份": "Start_year", "代言年数": "Year(s)_of_representation", "代言费": "Advocacy_costs", "代言型号数量": "Number_of_representative_models"}, "table_en": {"代言明星": "He's_an_advocate_star", "智能手机品牌": "Smart_phone_brand", "手机代言明星": "He's_a_voice-over_star"}}, "歌手演唱会": {"sqlite": "CREATE TABLE 歌手 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  姓名 INTEGER, -- Name\n  出生日期 VARCHAR(50), -- Date of birth\n  出生地 DATETIME, -- Place of birth\n  演唱会场次 VARCHAR(50), -- It's a concert time\n);\nCREATE TABLE 场馆 (\n  词条id INTEGER PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  容纳人数 VARCHAR(50), -- Number of persons accommodated\n  所属城市 INTEGER, -- City to which you belong\n);\nCREATE TABLE 演唱会 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  演唱会名称 INTEGER, -- concert name\n  时间 VARCHAR(50), -- Time\n  场馆id DATETIME, -- Field id\n  歌手id INTEGER, -- Singer id\n);\nCREATE TABLE 演唱会记录 (\n  歌手id INTEGER PRIMARY KEY, -- Singer id\n  年份 INTEGER, -- Year\n  场次 DATETIME, -- Fields\n);\n-- 演唱会.歌手id can be joined with 歌手.歌手\n-- 演唱会.场馆id can be joined with 场馆.场馆\n-- 演唱会记录.歌手id can be joined with 歌手.歌手", "columns_en": {"词条id": "Phrase_id", "姓名": "Name", "出生日期": "Date_of_birth", "出生地": "Place_of_birth", "演唱会场次": "It's_a_concert_time", "名称": "Name", "容纳人数": "Number_of_persons_accommodated", "所属城市": "City_to_which_you_belong", "演唱会名称": "concert_name", "时间": "Time", "场馆id": "Field_id", "歌手id": "Singer_id", "年份": "Year", "场次": "Fields"}, "table_en": {"歌手": "Singer", "场馆": "The_courtyard", "演唱会": "A_concert", "演唱会记录": "The_record_of_the_concert"}}, "2019年各城市马拉松": {"sqlite": "CREATE TABLE 中国各城市马拉松 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  举办城市 VARCHAR(50), -- Host city\n  省份 VARCHAR(50), -- Province\n  时间 VARCHAR(50), -- Time\n  全程赛道 DATETIME, -- It's the whole track\n  人数规模 INTEGER, -- Size of population\n);\nCREATE TABLE 马拉松赛程 (\n  马拉松id INTEGER PRIMARY KEY, -- Marathonid\n  赛程 INTEGER, -- The races\n  公里数 VARCHAR(50), -- Kilometres\n  报名人数 INTEGER, -- Number of persons registered\n  中签率 INTEGER, -- Missed Rate\n);\nCREATE TABLE 历届马拉松纪录 (\n  年份 INTEGER PRIMARY KEY, -- Year\n  城市 DATETIME, -- Urban\n  参赛者最小年龄 VARCHAR(50), -- Minimum age of contestants\n  参赛者最大年龄 INTEGER, -- Maximum age of contestants\n  全程最少时间 INTEGER, -- It's the least we can do\n);\n-- 马拉松赛程.马拉松id can be joined with 中国各城市马拉松.中国各城市马拉松", "columns_en": {"词条id": "Phrase_id", "名称": "Name", "举办城市": "Host_city", "省份": "Province", "时间": "Time", "全程赛道": "It's_the_whole_track", "人数规模": "Size_of_population", "马拉松id": "Marathonid", "赛程": "The_races", "公里数": "Kilometres", "报名人数": "Number_of_persons_registered", "中签率": "Missed_Rate", "年份": "Year", "城市": "Urban", "参赛者最小年龄": "Minimum_age_of_contestants", "参赛者最大年龄": "Maximum_age_of_contestants", "全程最少时间": "It's_the_least_we_can_do"}, "table_en": {"中国各城市马拉松": "China's_cities_of_Marathon", "马拉松赛程": "Marathon", "历届马拉松纪录": "Successive_Marathon_records"}}, "动物天敌和朋友": {"sqlite": "CREATE TABLE 动物 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  中文学名 INTEGER, -- Chinese Literary Name\n  食性 VARCHAR(50), -- Food\n  是否是人类朋友 VARCHAR(50), -- Are you a friend of the human race?\n  理由 BINARY, -- Rationale\n);\nCREATE TABLE 动物的天敌 (\n  动物id VARCHAR(50) PRIMARY KEY, -- Animal id\n  天敌id INTEGER, -- Enemy id\n  克星原因 INTEGER, -- Kersung's reason\n);\nCREATE TABLE 动物朋友 (\n  动物id VARCHAR(50) PRIMARY KEY, -- Animal id\n  朋友id INTEGER, -- ♪ Friend id ♪\n);\n-- 动物的天敌.动物id can be joined with 动物.动物\n-- 动物朋友.动物id can be joined with 动物.动物\n-- 动物朋友.朋友id can be joined with 动物.动物\n-- 动物的天敌.天敌id can be joined with 动物.动物", "columns_en": {"词条id": "Phrase_id", "中文学名": "Chinese_Literary_Name", "食性": "Food", "是否是人类朋友": "Are_you_a_friend_of_the_human_race?", "理由": "Rationale", "动物id": "Animal_id", "天敌id": "Enemy_id", "克星原因": "Kersung's_reason", "朋友id": "♪_Friend_id_♪"}, "table_en": {"动物": "Animals", "动物的天敌": "An_animal's_natural_enemy", "动物朋友": "Animal_friend"}}, "中国景点": {"sqlite": "CREATE TABLE 景区 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  占地面积 VARCHAR(50), -- Area of land area\n  景点级别 INTEGER, -- Place level\n  旺季门票价格 INTEGER, -- Price of ticket for the season\n  淡季门票价格 INTEGER, -- The price of tickets for the rest of the season\n  始建时间 INTEGER, -- Start time\n  所属城市 DATETIME, -- City to which you belong\n  所属省份 VARCHAR(50), -- Provinces to which they belong\n);\nCREATE TABLE 景点 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  地理位置 VARCHAR(50), -- Geographical location\n);\nCREATE TABLE 交通站 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  类型 VARCHAR(50), -- Type\n  景区id VARCHAR(50), -- View area id\n  距离 INTEGER, -- Distance\n);\nCREATE TABLE 景区景点 (\n  景点id INTEGER PRIMARY KEY, -- Siteid\n  景区id INTEGER, -- View area id\n  是否著名 INTEGER, -- Is it famous?\n);\nCREATE TABLE 临近景区 (\n  景区id BINARY PRIMARY KEY, -- View area id\n  相邻景区id INTEGER, -- Neighborhoodid\n  距离 INTEGER, -- Distance\n);\nCREATE TABLE 博物馆 (\n  词条id INTEGER PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  占地面积 VARCHAR(50), -- Area of land area\n  开馆时间 INTEGER, -- It's opening time\n  所属城市 DATETIME, -- City to which you belong\n  票价 VARCHAR(50), -- Tickets\n);\nCREATE TABLE 重点文物保护单位 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  门票价格 VARCHAR(50), -- Price of tickets\n  保护级别 INTEGER, -- Protection level\n  所属城市 VARCHAR(50), -- City to which you belong\n  评定年份 VARCHAR(50), -- Year evaluated\n);\nCREATE TABLE 动物园 (\n  词条id DATETIME PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  占地面积 VARCHAR(50), -- Area of land area\n  竣工时间 INTEGER, -- Completion date\n  门票价格 DATETIME, -- Price of tickets\n  动物种类 INTEGER, -- Animal species\n  所属城市 INTEGER, -- City to which you belong\n);\nCREATE TABLE 馆藏动物 (\n  动物名称 VARCHAR(50) PRIMARY KEY, -- Animal name\n  动物园id VARCHAR(50), -- Zooid\n  数量 INTEGER, -- Number\n);\nCREATE TABLE 游乐园 (\n  词条id INTEGER PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  占地面积 VARCHAR(50), -- Area of land area\n  门票价格 INTEGER, -- Price of tickets\n  总投资 INTEGER, -- Total investments\n  所属城市 INTEGER, -- City to which you belong\n);\nCREATE TABLE 娱乐项目 (\n  项目名称 VARCHAR(50) PRIMARY KEY, -- Title of the project\n  游乐园id VARCHAR(50), -- Playground id\n  季节 INTEGER, -- Season\n  排名 VARCHAR(50), -- Rank\n);\n-- 临近景区.景区id can be joined with 景区.景区\n-- 临近景区.相邻景区id can be joined with 景区.景区\n-- 馆藏动物.动物园id can be joined with 动物园.动物园\n-- 娱乐项目.游乐园id can be joined with 游乐园.游乐园\n-- 景区景点.景区id can be joined with 景区.景区\n-- 交通站.景区id can be joined with 景区.景区\n-- 景区景点.景点id can be joined with 景点.景点", "columns_en": {"词条id": "Phrase_id", "名称": "Name", "占地面积": "Area_of_land_area", "景点级别": "Place_level", "旺季门票价格": "Price_of_ticket_for_the_season", "淡季门票价格": "The_price_of_tickets_for_the_rest_of_the_season", "始建时间": "Start_time", "所属城市": "City_to_which_you_belong", "所属省份": "Provinces_to_which_they_belong", "地理位置": "Geographical_location", "类型": "Type", "景区id": "View_area_id", "距离": "Distance", "景点id": "Siteid", "是否著名": "Is_it_famous?", "相邻景区id": "Neighborhoodid", "开馆时间": "It's_opening_time", "票价": "Tickets", "门票价格": "Price_of_tickets", "保护级别": "Protection_level", "评定年份": "Year_evaluated", "竣工时间": "Completion_date", "动物种类": "Animal_species", "动物名称": "Animal_name", "动物园id": "Zooid", "数量": "Number", "总投资": "Total_investments", "项目名称": "Title_of_the_project", "游乐园id": "Playground_id", "季节": "Season", "排名": "Rank"}, "table_en": {"景区": "The_scenery", "景点": "Places", "交通站": "Traffic_stations", "景区景点": "Viewpoints", "临近景区": "Near-view_area", "博物馆": "Museums", "重点文物保护单位": "Unit_for_the_Protection_of_Principal_Cultural_Objects", "动物园": "Zoo", "馆藏动物": "Repository_animals", "游乐园": "The_amusement_park", "娱乐项目": "Recreational_projects"}}, "电影票预定": {"sqlite": "CREATE TABLE 影院 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  地址 VARCHAR(50), -- Address\n  与当前距离 VARCHAR(50), -- Distance to Current\n  用户评分 INTEGER, -- User Rating\n);\nCREATE TABLE 电影 (\n  词条id INTEGER PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  拍摄国家 VARCHAR(50), -- Shooting Country\n  类型 VARCHAR(50), -- Type\n  片长 VARCHAR(50), -- The film's long\n  豆瓣评分 INTEGER, -- Bean petals\n);\nCREATE TABLE 影院上映电影 (\n  电影id INTEGER PRIMARY KEY, -- Film id\n  影院id INTEGER, -- ♪ The cinema ♪ ♪ ♪ The cinema ♪ ♪ ♪ the cinema ♪ ♪ ♪ ♪ the cinema ♪ ♪ ♪ ♪ the cinema ♪ ♪ ♪ ♪ ♪ ♪ ♪ the cinema ♪ ♪ ♪ ♪ ♪ the cinema ♪ ♪ ♪ ♪ the cinema ♪ ♪ ♪ ♪ ♪ the cinema ♪ ♪ ♪ ♪ ♪\n  上映时间 INTEGER, -- Show time\n  票价 DATETIME, -- Tickets\n  余票数量 INTEGER, -- Number of remaining votes\n);\n-- 影院上映电影.影院id can be joined with 影院.影院\n-- 影院上映电影.电影id can be joined with 电影.电影", "columns_en": {"词条id": "Phrase_id", "名称": "Name", "地址": "Address", "与当前距离": "Distance_to_Current", "用户评分": "User_Rating", "拍摄国家": "Shooting_Country", "类型": "Type", "片长": "The_film's_long", "豆瓣评分": "Bean_petals", "电影id": "Film_id", "影院id": "♪_The_cinema_♪_♪_♪_The_cinema_♪_♪_♪_the_cinema_♪_♪_♪_♪_the_cinema_♪_♪_♪_♪_the_cinema_♪_♪_♪_♪_♪_♪_♪_the_cinema_♪_♪_♪_♪_♪_the_cinema_♪_♪_♪_♪_the_cinema_♪_♪_♪_♪_♪_the_cinema_♪_♪_♪_♪_♪", "上映时间": "Show_time", "票价": "Tickets", "余票数量": "Number_of_remaining_votes"}, "table_en": {"影院": "The_cinema", "电影": "Film", "影院上映电影": "It's_a_movie_in_the_theater"}}, "明星关系": {"sqlite": "CREATE TABLE 明星 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  姓名 INTEGER, -- Name\n  年龄 VARCHAR(50), -- Age\n  毕业院校 INTEGER, -- Graduate schools\n  毕业时间 VARCHAR(50), -- Time of graduation\n);\nCREATE TABLE 明星夫妻 (\n  明星id DATETIME PRIMARY KEY, -- Starid\n  配偶id INTEGER, -- Spouse id\n  结婚时间 INTEGER, -- Time of marriage\n  子女数量 DATETIME, -- Number of children\n);\nCREATE TABLE 离异明星 (\n  明星id INTEGER PRIMARY KEY, -- Starid\n  配偶id INTEGER, -- Spouse id\n  离异时间 INTEGER, -- Departure time\n  子女数量 DATETIME, -- Number of children\n);\nCREATE TABLE 明星好友 (\n  明星id INTEGER PRIMARY KEY, -- Starid\n  好友id INTEGER, -- Friend id\n  关系 INTEGER, -- Relations\n);\n-- 明星夫妻.配偶id can be joined with 明星.明星\n-- 离异明星.配偶id can be joined with 明星.明星\n-- 明星夫妻.明星id can be joined with 明星.明星\n-- 明星好友.好友id can be joined with 明星.明星\n-- 明星好友.明星id can be joined with 明星.明星\n-- 离异明星.明星id can be joined with 明星.明星", "columns_en": {"词条id": "Phrase_id", "姓名": "Name", "年龄": "Age", "毕业院校": "Graduate_schools", "毕业时间": "Time_of_graduation", "明星id": "Starid", "配偶id": "Spouse_id", "结婚时间": "Time_of_marriage", "子女数量": "Number_of_children", "离异时间": "Departure_time", "好友id": "Friend_id", "关系": "Relations"}, "table_en": {"明星": "Star", "明星夫妻": "Star_couple", "离异明星": "A_divorcing_star", "明星好友": "Starfriend"}}, "地震": {"sqlite": "CREATE TABLE 地震 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  发生时间 VARCHAR(50), -- Time of occurrence\n  地理位置 DATETIME, -- Geographical location\n  震源深度 VARCHAR(50), -- Explosion source depth\n  震级 INTEGER, -- Seismic\n  震中烈度 INTEGER, -- Mid-shock intensity\n  死亡人数 INTEGER, -- Number of deaths\n  受伤人数 INTEGER, -- Number of injuries\n  持续时间 INTEGER, -- Duration\n  经济损失 INTEGER, -- Economic loss\n);\nCREATE TABLE 汶川地震受灾地区 (\n  地区 INTEGER PRIMARY KEY, -- Region\n  死亡人数 VARCHAR(50), -- Number of deaths\n  受伤人数 INTEGER, -- Number of injuries\n  失踪人数 INTEGER, -- Number of missing persons\n);\nCREATE TABLE 地震衍生剧 (\n  词条id INTEGER PRIMARY KEY, -- Phrase id\n  剧名 INTEGER, -- The title of the play\n  类型 VARCHAR(50), -- Type\n  地震id VARCHAR(50), -- Earthquake id\n  播出时间 INTEGER, -- Airtime\n  导演 DATETIME, -- Director\n);\nCREATE TABLE 地震纪念馆 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  地点 VARCHAR(50), -- Location\n  开馆时间 INTEGER, -- It's opening time\n  地震id INTEGER, -- Earthquake id\n  建筑面积 DATETIME, -- Construction area\n);\n-- 地震衍生剧.地震id can be joined with 地震.地震\n-- 地震纪念馆.地震id can be joined with 地震.地震", "columns_en": {"词条id": "Phrase_id", "名称": "Name", "发生时间": "Time_of_occurrence", "地理位置": "Geographical_location", "震源深度": "Explosion_source_depth", "震级": "Seismic", "震中烈度": "Mid-shock_intensity", "死亡人数": "Number_of_deaths", "受伤人数": "Number_of_injuries", "持续时间": "Duration", "经济损失": "Economic_loss", "地区": "Region", "失踪人数": "Number_of_missing_persons", "剧名": "The_title_of_the_play", "类型": "Type", "地震id": "Earthquake_id", "播出时间": "Airtime", "导演": "Director", "地点": "Location", "开馆时间": "It's_opening_time", "建筑面积": "Construction_area"}, "table_en": {"地震": "Earthquake", "汶川地震受灾地区": "Areas_affected_by_the_Wenchuan_earthquake", "地震衍生剧": "Seismic_derivatives", "地震纪念馆": "Earthquake_Memorial"}}, "羽毛球": {"sqlite": "CREATE TABLE 重要赛事 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  赛事名称 INTEGER, -- Name of event\n  人群 VARCHAR(50), -- The crowd\n  成立时间 VARCHAR(50), --  Other Organiser\n  比赛间隔年 DATETIME, -- The year of the race\n  比赛项目数量 INTEGER, -- Number of competitions\n);\nCREATE TABLE 冠军国家 (\n  国家名称 INTEGER PRIMARY KEY, -- Country Name\n  赛事id VARCHAR(50), -- Game id\n  冠军数量 INTEGER, -- Number of champions\n);\nCREATE TABLE 羽毛球球员 (\n  词条id INTEGER PRIMARY KEY, -- Phrase id\n  中文名 INTEGER, -- Chinese Name\n  性别 VARCHAR(50), -- Gender\n  国籍 VARCHAR(50), -- Nationality\n  出生日期 VARCHAR(50), -- Date of birth\n  身高 DATETIME, -- Height\n);\nCREATE TABLE 奥运会冠亚军 (\n  奥运会名称 INTEGER PRIMARY KEY, -- Name of Olympic Games\n  项目名称 VARCHAR(50), -- Title of the project\n  金牌获得者id VARCHAR(50), -- Gold medal recipient id\n  银牌获得者id INTEGER, -- Silver Card Winner id\n  铜牌获得者id INTEGER, -- Copper Card Laureateid\n);\nCREATE TABLE 球员夺冠次数 (\n  球员id INTEGER PRIMARY KEY, -- Player id\n  赛事id INTEGER, -- Game id\n  冠军次数 INTEGER, -- Number of champions\n  亚军次数 INTEGER, -- Number of military units\n  季军次数 INTEGER, -- Number of seasoned troops\n);\n-- 冠军国家.赛事id can be joined with 重要赛事.重要赛事\n-- 奥运会冠亚军.铜牌获得者id can be joined with 羽毛球球员.羽毛球球员\n-- 球员夺冠次数.赛事id can be joined with 重要赛事.重要赛事\n-- 球员夺冠次数.球员id can be joined with 羽毛球球员.羽毛球球员\n-- 奥运会冠亚军.金牌获得者id can be joined with 羽毛球球员.羽毛球球员\n-- 奥运会冠亚军.银牌获得者id can be joined with 羽毛球球员.羽毛球球员", "columns_en": {"词条id": "Phrase_id", "赛事名称": "Name_of_event", "人群": "The_crowd", "成立时间": "_Other_Organiser", "比赛间隔年": "The_year_of_the_race", "比赛项目数量": "Number_of_competitions", "国家名称": "Country_Name", "赛事id": "Game_id", "冠军数量": "Number_of_champions", "中文名": "Chinese_Name", "性别": "Gender", "国籍": "Nationality", "出生日期": "Date_of_birth", "身高": "Height", "奥运会名称": "Name_of_Olympic_Games", "项目名称": "Title_of_the_project", "金牌获得者id": "Gold_medal_recipient_id", "银牌获得者id": "Silver_Card_Winner_id", "铜牌获得者id": "Copper_Card_Laureateid", "球员id": "Player_id", "冠军次数": "Number_of_champions", "亚军次数": "Number_of_military_units", "季军次数": "Number_of_seasoned_troops"}, "table_en": {"重要赛事": "It's_an_important_event", "冠军国家": "A_champion_country", "羽毛球球员": "Badminton_player", "奥运会冠亚军": "The_Olympic_champions", "球员夺冠次数": "Number_of_champions"}}, "理财公司": {"sqlite": "CREATE TABLE 理财公司 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  公司名称 INTEGER, -- Name of company\n  创立时间 VARCHAR(50), --  Other Organiser\n  官网 DATETIME, -- Official Network\n  所属集团 VARCHAR(50), -- Groups to which they belong\n);\nCREATE TABLE 银行 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  总部地点 VARCHAR(50), -- Headquarters locations\n  所属城市 VARCHAR(50), -- City to which you belong\n  所属省份 VARCHAR(50), -- Provinces to which they belong\n  成立时间 VARCHAR(50), --  Other Organiser\n  公司类型 DATETIME, -- Type of company\n);\nCREATE TABLE 理财公司合作银行 (\n  公司id VARCHAR(50) PRIMARY KEY, -- Companyid\n  银行id INTEGER, -- Bankid\n  合作时间 INTEGER, -- Time of cooperation\n  是否有电子银行 DATETIME, -- Is there an electronic bank?\n);\nCREATE TABLE 理财产品 (\n  产品 BINARY PRIMARY KEY, -- Products\n  公司id VARCHAR(50), -- Companyid\n  支持银行id INTEGER, -- Support bankid\n  年化收益率 INTEGER, -- Annualized rate of return\n  期限 INTEGER, -- Duration\n  起投金额 INTEGER, -- Amount invested\n);\n-- 理财公司合作银行.银行id can be joined with 银行.银行\n-- 理财产品.支持银行id can be joined with 银行.银行\n-- 理财产品.公司id can be joined with 理财公司.理财公司\n-- 理财公司合作银行.公司id can be joined with 理财公司.理财公司", "columns_en": {"词条id": "Phrase_id", "公司名称": "Name_of_company", "创立时间": "_Other_Organiser", "官网": "Official_Network", "所属集团": "Groups_to_which_they_belong", "名称": "Name", "总部地点": "Headquarters_locations", "所属城市": "City_to_which_you_belong", "所属省份": "Provinces_to_which_they_belong", "成立时间": "_Other_Organiser", "公司类型": "Type_of_company", "公司id": "Companyid", "银行id": "Bankid", "合作时间": "Time_of_cooperation", "是否有电子银行": "Is_there_an_electronic_bank?", "产品": "Products", "支持银行id": "Support_bankid", "年化收益率": "Annualized_rate_of_return", "期限": "Duration", "起投金额": "Amount_invested"}, "table_en": {"理财公司": "Financial_management_company", "银行": "Bank", "理财公司合作银行": "Financial_Co-operative_Bank", "理财产品": "Property_items"}}, "城市活力研究": {"sqlite": "CREATE TABLE 百城 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  城市 INTEGER, -- Urban\n  排名 VARCHAR(50), -- Rank\n  人口吸引力指数 INTEGER, -- Population appeal index\n  同比排名变化 INTEGER, -- Change in rankings by comparison\n  环比排名变化 INTEGER, -- Ring ranking changes\n);\nCREATE TABLE 人口来源城市 (\n  城市id INTEGER PRIMARY KEY, -- Urban id\n  人口来源省份 VARCHAR(50), -- Population Source Provinces\n  流入人口占比 VARCHAR(50), -- Proportion of population inflow\n  排名 INTEGER, -- Rank\n);\nCREATE TABLE 人口去向城市 (\n  城市id INTEGER PRIMARY KEY, -- Urban id\n  人口去向省份 VARCHAR(50), -- The population goes to the provinces\n  流出人口占比 VARCHAR(50), -- Expatriate population as a percentage\n  排名 INTEGER, -- Rank\n);\nCREATE TABLE 流动人口年龄 (\n  年份 INTEGER PRIMARY KEY, -- Year\n  年龄段 DATETIME, -- Age group\n  占比 INTEGER, -- Percentage\n);\nCREATE TABLE 流动人口学历 (\n  年份 INTEGER PRIMARY KEY, -- Year\n  学历 DATETIME, -- Education\n  占比 VARCHAR(50), -- Percentage\n);\nCREATE TABLE 城市酒吧活力 (\n  城市id INTEGER PRIMARY KEY, -- Urban id\n  酒吧数量 VARCHAR(50), -- Number of bars\n  排名 INTEGER, -- Rank\n  周末客流量 INTEGER, -- Weekend passenger traffic\n  节假日客流量 INTEGER, -- Holiday passenger traffic\n  平日客流量 INTEGER, -- Regular passenger traffic\n);\nCREATE TABLE 酒吧顾客年龄 (\n  顾客年龄段 INTEGER PRIMARY KEY, -- Client age group\n  占比 INTEGER, -- Percentage\n);\nCREATE TABLE 城市美食 (\n  城市id INTEGER PRIMARY KEY, -- Urban id\n  美食名称 VARCHAR(50), -- Food name\n  搜索指数 VARCHAR(50), -- Search Index\n  关注排名 INTEGER, -- Watch your rankings\n);\nCREATE TABLE 城市文化 (\n  城市id INTEGER PRIMARY KEY, -- Urban id\n  文化名称 INTEGER, -- Cultural name\n  关注热度 VARCHAR(50), -- Focus on the heat\n  关注排名 INTEGER, -- Watch your rankings\n);\n-- 人口去向城市.城市id can be joined with 百城.百城\n-- 城市文化.城市id can be joined with 百城.百城\n-- 城市酒吧活力.城市id can be joined with 百城.百城\n-- 人口来源城市.城市id can be joined with 百城.百城\n-- 城市美食.城市id can be joined with 百城.百城", "columns_en": {"词条id": "Phrase_id", "城市": "Urban", "排名": "Rank", "人口吸引力指数": "Population_appeal_index", "同比排名变化": "Change_in_rankings_by_comparison", "环比排名变化": "Ring_ranking_changes", "城市id": "Urban_id", "人口来源省份": "Population_Source_Provinces", "流入人口占比": "Proportion_of_population_inflow", "人口去向省份": "The_population_goes_to_the_provinces", "流出人口占比": "Expatriate_population_as_a_percentage", "年份": "Year", "年龄段": "Age_group", "占比": "Percentage", "学历": "Education", "酒吧数量": "Number_of_bars", "周末客流量": "Weekend_passenger_traffic", "节假日客流量": "Holiday_passenger_traffic", "平日客流量": "Regular_passenger_traffic", "顾客年龄段": "Client_age_group", "美食名称": "Food_name", "搜索指数": "Search_Index", "关注排名": "Watch_your_rankings", "文化名称": "Cultural_name", "关注热度": "Focus_on_the_heat"}, "table_en": {"百城": "A_hundred_cities", "人口来源城市": "Urban_sources_of_population", "人口去向城市": "The_population_goes_to_the_city", "流动人口年龄": "Age_of_mobile_population", "流动人口学历": "Education_of_the_migrant_population", "城市酒吧活力": "City_bar_vibrancy", "酒吧顾客年龄": "The_age_of_the_customer_in_the_bar", "城市美食": "City_food", "城市文化": "Urban_culture"}}, "平台自制节目": {"sqlite": "CREATE TABLE 平台 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  平台名称 INTEGER, -- Name of the platform\n  年会费 VARCHAR(50), -- Annual contributions\n  季度会费 INTEGER, -- Quarterly contributions\n  月会费 INTEGER, -- Monthly contributions\n  口碑 INTEGER, -- Emblems\n);\nCREATE TABLE 综艺节目 (\n  词条id INTEGER PRIMARY KEY, -- Phrase id\n  综艺名称 INTEGER, -- Fulfilling Name\n  制作公司 VARCHAR(50), -- Production companies\n  平台id VARCHAR(50), -- Platformid\n  期数 VARCHAR(50), -- Term\n  首播时间 INTEGER, -- Launch time\n  每周播出时间 DATETIME, -- Weekly airtime\n  播出状态 VARCHAR(50), -- Broadcast Status\n);\nCREATE TABLE 艺人 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  姓名 INTEGER, -- Name\n  民族 VARCHAR(50), -- Nationalities\n  经纪公司 VARCHAR(50), -- Brokering companies\n  职业 VARCHAR(50), -- Occupation\n);\nCREATE TABLE 节目阵容 (\n  艺人id VARCHAR(50) PRIMARY KEY, -- Artist id\n  综艺节目id INTEGER, -- Leisure programme id\n  身份 INTEGER, -- Identity\n  参加期数 VARCHAR(50), -- Participation period\n);\n-- 节目阵容.艺人id can be joined with 艺人.艺人\n-- 节目阵容.综艺节目id can be joined with 综艺节目.综艺节目\n-- 综艺节目.平台id can be joined with 平台.平台", "columns_en": {"词条id": "Phrase_id", "平台名称": "Name_of_the_platform", "年会费": "Annual_contributions", "季度会费": "Quarterly_contributions", "月会费": "Monthly_contributions", "口碑": "Emblems", "综艺名称": "Fulfilling_Name", "制作公司": "Production_companies", "平台id": "Platformid", "期数": "Term", "首播时间": "Launch_time", "每周播出时间": "Weekly_airtime", "播出状态": "Broadcast_Status", "姓名": "Name", "民族": "Nationalities", "经纪公司": "Brokering_companies", "职业": "Occupation", "艺人id": "Artist_id", "综艺节目id": "Leisure_programme_id", "身份": "Identity", "参加期数": "Participation_period"}, "table_en": {"平台": "Platform", "综艺节目": "Phenomenal_programmes", "艺人": "Artist", "节目阵容": "A_program_set"}}, "医院": {"sqlite": "CREATE TABLE 城市 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  所属省份 VARCHAR(50), -- Provinces to which they belong\n  三甲医院数量 VARCHAR(50), -- Number of tri-a-hospitals\n  人口数量 INTEGER, -- Number of population\n  老年人口占比 INTEGER, -- Population share of older persons\n);\nCREATE TABLE 医院 (\n  词条id INTEGER PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  所属城市id VARCHAR(50), --  Other Organiser\n  医院等级 INTEGER, -- Hospital level\n  职工数量 INTEGER, -- Number of employees\n  院士数量 INTEGER, -- Number of cadets\n  科室数量 INTEGER, -- Number of sections\n  重点专科数量 INTEGER, -- Number of priority specialties\n);\nCREATE TABLE 医院排名 (\n  年份 INTEGER PRIMARY KEY, -- Year\n  医院id DATETIME, -- Hospital id\n  排名 INTEGER, -- Rank\n  接待病患数量(万人次) INTEGER, -- Number of patients received (millions)\n  手术数量 INTEGER, -- Number of operations\n);\nCREATE TABLE 特色科室 (\n  科室 INTEGER PRIMARY KEY, -- Section\n  医院id INTEGER, -- Hospital id\n  是否重点 INTEGER, -- Focus\n  是否研究中心 BINARY, -- Research Centers\n);\n-- 医院排名.医院id can be joined with 医院.医院\n-- 特色科室.医院id can be joined with 医院.医院\n-- 医院.所属城市id can be joined with 城市.城市", "columns_en": {"词条id": "Phrase_id", "名称": "Name", "所属省份": "Provinces_to_which_they_belong", "三甲医院数量": "Number_of_tri-a-hospitals", "人口数量": "Number_of_population", "老年人口占比": "Population_share_of_older_persons", "所属城市id": "_Other_Organiser", "医院等级": "Hospital_level", "职工数量": "Number_of_employees", "院士数量": "Number_of_cadets", "科室数量": "Number_of_sections", "重点专科数量": "Number_of_priority_specialties", "年份": "Year", "医院id": "Hospital_id", "排名": "Rank", "接待病患数量(万人次)": "Number_of_patients_received_(millions)", "手术数量": "Number_of_operations", "科室": "Section", "是否重点": "Focus", "是否研究中心": "Research_Centers"}, "table_en": {"城市": "Urban", "医院": "Hospital", "医院排名": "Hospital_ranking", "特色科室": "Specialties"}}, "动物": {"sqlite": "CREATE TABLE 城市 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  气候地带 VARCHAR(50), -- Climate zone\n  所属国家 VARCHAR(50), -- Country of nationality\n  所属洲 VARCHAR(50), -- The continent to which they belong\n);\nCREATE TABLE 动物 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  中文学名 INTEGER, -- Chinese Literary Name\n  所属纲 VARCHAR(50), -- Outline of affiliation\n  所属科 VARCHAR(50), -- Sections to which they belong\n  食性 VARCHAR(50), -- Food\n  濒危级别 VARCHAR(50), -- Level of exposure\n  保护级别 VARCHAR(50), -- Protection level\n);\nCREATE TABLE 动物分布城市 (\n  动物id VARCHAR(50) PRIMARY KEY, -- Animal id\n  城市id INTEGER, -- Urban id\n  现存数量 INTEGER, -- Existing number\n);\nCREATE TABLE 动物电影 (\n  词条id INTEGER PRIMARY KEY, -- Phrase id\n  影片名 INTEGER, -- Video Name\n  动物id VARCHAR(50), -- Animal id\n  拍摄国家 INTEGER, -- Shooting Country\n  类型 VARCHAR(50), -- Type\n);\nCREATE TABLE 动物寓言故事 (\n  动物id VARCHAR(50) PRIMARY KEY, -- Animal id\n  寓言故事 INTEGER, -- Fable\n  形象 VARCHAR(50), -- Image\n);\n-- 动物分布城市.城市id can be joined with 城市.城市\n-- 动物分布城市.动物id can be joined with 动物.动物\n-- 动物电影.动物id can be joined with 动物.动物\n-- 动物寓言故事.动物id can be joined with 动物.动物", "columns_en": {"词条id": "Phrase_id", "名称": "Name", "气候地带": "Climate_zone", "所属国家": "Country_of_nationality", "所属洲": "The_continent_to_which_they_belong", "中文学名": "Chinese_Literary_Name", "所属纲": "Outline_of_affiliation", "所属科": "Sections_to_which_they_belong", "食性": "Food", "濒危级别": "Level_of_exposure", "保护级别": "Protection_level", "动物id": "Animal_id", "城市id": "Urban_id", "现存数量": "Existing_number", "影片名": "Video_Name", "拍摄国家": "Shooting_Country", "类型": "Type", "寓言故事": "Fable", "形象": "Image"}, "table_en": {"城市": "Urban", "动物": "Animals", "动物分布城市": "Animal-distributed_cities", "动物电影": "Animal_movies", "动物寓言故事": "An_animal_legend"}}, "招聘会和宣讲会": {"sqlite": "CREATE TABLE 公司 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  行业 VARCHAR(50), -- Industry\n  校招人数 VARCHAR(50), -- Enrolment in schools\n);\nCREATE TABLE 学校 (\n  词条id INTEGER PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  所在城市 VARCHAR(50), -- It's in the city\n  毕业人数 VARCHAR(50), -- Number of graduates\n);\nCREATE TABLE 学校各专业 (\n  学校id INTEGER PRIMARY KEY, -- School id\n  专业 INTEGER, -- Professional\n  毕业人数 VARCHAR(50), -- Number of graduates\n  专业全国排名 INTEGER, -- Professional national ranking\n  平均薪资 INTEGER, -- Average salary\n);\nCREATE TABLE 公司对口专业 (\n  公司id INTEGER PRIMARY KEY, -- Companyid\n  专业 INTEGER, -- Professional\n  对应岗位 VARCHAR(50), -- Counterpart posts\n  拟招聘人数 VARCHAR(50), -- Proposed recruitment\n  基本工资 INTEGER, -- Basic wage\n  工资幅度 INTEGER, -- Level of wages\n);\nCREATE TABLE 公司宣讲会 (\n  公司id INTEGER PRIMARY KEY, -- Companyid\n  学校id INTEGER, -- School id\n  宣讲时间 INTEGER, -- Time for the lecture\n  拟招聘人数 DATETIME, -- Proposed recruitment\n  参加笔试人数 INTEGER, -- Number of participants in written examinations\n  参加面试人数 INTEGER, -- Number of persons interviewed\n  实际招聘人数 INTEGER, -- Actual number of recruits\n);\n-- 学校各专业.学校id can be joined with 学校.学校\n-- 公司对口专业.公司id can be joined with 公司.公司\n-- 公司宣讲会.公司id can be joined with 公司.公司\n-- 公司宣讲会.学校id can be joined with 学校.学校", "columns_en": {"词条id": "Phrase_id", "名称": "Name", "行业": "Industry", "校招人数": "Enrolment_in_schools", "所在城市": "It's_in_the_city", "毕业人数": "Number_of_graduates", "学校id": "School_id", "专业": "Professional", "专业全国排名": "Professional_national_ranking", "平均薪资": "Average_salary", "公司id": "Companyid", "对应岗位": "Counterpart_posts", "拟招聘人数": "Proposed_recruitment", "基本工资": "Basic_wage", "工资幅度": "Level_of_wages", "宣讲时间": "Time_for_the_lecture", "参加笔试人数": "Number_of_participants_in_written_examinations", "参加面试人数": "Number_of_persons_interviewed", "实际招聘人数": "Actual_number_of_recruits"}, "table_en": {"公司": "Company", "学校": "School", "学校各专业": "School_specializations", "公司对口专业": "Corporate_Counterpart_Professionals", "公司宣讲会": "Company_presentations"}}, "火车票预定": {"sqlite": "CREATE TABLE 火车站 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  所属城市 VARCHAR(50), -- City to which you belong\n  是否有地铁站 VARCHAR(50), -- Is there a subway station?\n  距机场距离 BINARY, -- Distance from airport\n  距汽车站距离 INTEGER, -- Distance from bus station\n  距市中心距离 INTEGER, -- It's downtown\n);\nCREATE TABLE 列车 (\n  词条id INTEGER PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  类型 VARCHAR(50), -- Type\n  始发站id VARCHAR(50), -- From station id\n  到达站id INTEGER, -- Arrival stationid\n  出发时间 INTEGER, -- Time to go\n  到达时间 DATETIME, -- Time of arrival\n);\nCREATE TABLE 列车票价 (\n  日期 DATETIME PRIMARY KEY, -- Date\n  列车id DATETIME, -- Train id\n  车票类型 INTEGER, -- Type of ticket\n  票价 VARCHAR(50), -- Tickets\n  余票 INTEGER, -- The rest of the tickets\n);\n-- 列车.始发站id can be joined with 火车站.火车站\n-- 列车票价.列车id can be joined with 列车.列车\n-- 列车.到达站id can be joined with 火车站.火车站", "columns_en": {"词条id": "Phrase_id", "名称": "Name", "所属城市": "City_to_which_you_belong", "是否有地铁站": "Is_there_a_subway_station?", "距机场距离": "Distance_from_airport", "距汽车站距离": "Distance_from_bus_station", "距市中心距离": "It's_downtown", "类型": "Type", "始发站id": "From_station_id", "到达站id": "Arrival_stationid", "出发时间": "Time_to_go", "到达时间": "Time_of_arrival", "日期": "Date", "列车id": "Train_id", "车票类型": "Type_of_ticket", "票价": "Tickets", "余票": "The_rest_of_the_tickets"}, "table_en": {"火车站": "Train_station", "列车": "Train", "列车票价": "The_fare"}}, "豆瓣读书": {"sqlite": "CREATE TABLE 书籍 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  作者 VARCHAR(50), -- Author\n  作者国籍 VARCHAR(50), -- Nationality of authors\n  豆瓣评分 VARCHAR(50), -- Bean petals\n  评价人数 INTEGER, -- Number of evaluations\n  5星占比 INTEGER, -- 5-star ratio\n  1星占比 INTEGER, -- 1 asterisk ratio\n);\nCREATE TABLE 高分图书榜单 (\n  年份 INTEGER PRIMARY KEY, -- Year\n  书籍id DATETIME, -- Book id\n  评分 INTEGER, -- Rating\n  排名 INTEGER, -- Rank\n);\nCREATE TABLE 最受关注图书榜单 (\n  年份 INTEGER PRIMARY KEY, -- Year\n  书籍id DATETIME, -- Book id\n  关注数 INTEGER, --  Other Organiser\n  排名 INTEGER, -- Rank\n);\nCREATE TABLE 最畅销图书榜单 (\n  年份 INTEGER PRIMARY KEY, -- Year\n  书籍id DATETIME, -- Book id\n  购买数 INTEGER, -- Purchases\n  排名 INTEGER, -- Rank\n);\nCREATE TABLE 购买平台 (\n  书籍id INTEGER PRIMARY KEY, -- Book id\n  平台 INTEGER, -- Platform\n  售价 VARCHAR(50), -- Price of sale\n  是否有货 INTEGER, -- Is there a shipment?\n);\n-- 最受关注图书榜单.书籍id can be joined with 书籍.书籍\n-- 购买平台.书籍id can be joined with 书籍.书籍\n-- 高分图书榜单.书籍id can be joined with 书籍.书籍\n-- 最畅销图书榜单.书籍id can be joined with 书籍.书籍", "columns_en": {"词条id": "Phrase_id", "名称": "Name", "作者": "Author", "作者国籍": "Nationality_of_authors", "豆瓣评分": "Bean_petals", "评价人数": "Number_of_evaluations", "5星占比": "5-star_ratio", "1星占比": "1_asterisk_ratio", "年份": "Year", "书籍id": "Book_id", "评分": "Rating", "排名": "Rank", "关注数": "_Other_Organiser", "购买数": "Purchases", "平台": "Platform", "售价": "Price_of_sale", "是否有货": "Is_there_a_shipment?"}, "table_en": {"书籍": "Books", "高分图书榜单": "High_score_book_list", "最受关注图书榜单": "Top-of-the-line_book_list", "最畅销图书榜单": "Best-selling_book_list", "购买平台": "Purchase_of_platforms"}}, "空调": {"sqlite": "CREATE TABLE 空调品牌 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  所属公司 VARCHAR(50), -- Company to which it belongs\n  国家 VARCHAR(50), -- National\n  亚洲企业排名 VARCHAR(50), -- Asian ranking of enterprises\n  中国上市公司排名 INTEGER, -- China’s Listed Companies\n);\nCREATE TABLE 空调型号 (\n  词条id INTEGER PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  毛重 VARCHAR(50), -- Gross weight\n  频数类型 INTEGER, -- Frequency type\n  匹数 VARCHAR(50), -- Punctuation\n  类别 INTEGER, -- Category\n  用途 VARCHAR(50), -- Use\n  制冷量 VARCHAR(50), -- Refrigeration\n  制热量 INTEGER, -- Heat-making\n  定价 INTEGER, -- Pricing\n  制冷剂 INTEGER, -- Refrigerants\n  品牌id VARCHAR(50), -- Brandid\n);\nCREATE TABLE 匹数对应面积 (\n  匹数 INTEGER PRIMARY KEY, -- Punctuation\n  最小面积 INTEGER, -- Minimum Area\n  最大面积 INTEGER, -- Maximum area\n);\nCREATE TABLE 空调各季度售卖 (\n  型号id INTEGER PRIMARY KEY, -- Model id\n  季度 INTEGER, -- Quarterly\n  售价 VARCHAR(50), -- Price of sale\n  最高价格 INTEGER, -- Maximum price\n  最低价格 INTEGER, -- Minimum price\n  售卖量 INTEGER, -- Sales\n);\nCREATE TABLE 空调各城市售卖 (\n  城市 INTEGER PRIMARY KEY, -- Urban\n  空调售卖量 VARCHAR(50), -- Air conditioner sales\n  空调日平均用时 INTEGER, -- Average air-conditioning hours per day\n);\n-- 空调各季度售卖.型号id can be joined with 空调型号.空调型号\n-- 空调型号.品牌id can be joined with 空调品牌.空调品牌", "columns_en": {"词条id": "Phrase_id", "名称": "Name", "所属公司": "Company_to_which_it_belongs", "国家": "National", "亚洲企业排名": "Asian_ranking_of_enterprises", "中国上市公司排名": "China’s_Listed_Companies", "毛重": "Gross_weight", "频数类型": "Frequency_type", "匹数": "Punctuation", "类别": "Category", "用途": "Use", "制冷量": "Refrigeration", "制热量": "Heat-making", "定价": "Pricing", "制冷剂": "Refrigerants", "品牌id": "Brandid", "最小面积": "Minimum_Area", "最大面积": "Maximum_area", "型号id": "Model_id", "季度": "Quarterly", "售价": "Price_of_sale", "最高价格": "Maximum_price", "最低价格": "Minimum_price", "售卖量": "Sales", "城市": "Urban", "空调售卖量": "Air_conditioner_sales", "空调日平均用时": "Average_air-conditioning_hours_per_day"}, "table_en": {"空调品牌": "Air_conditioner_brand", "空调型号": "Air_conditioner_type", "匹数对应面积": "Pixmap_equivalencies", "空调各季度售卖": "Air_conditioners_are_sold_quarterly", "空调各城市售卖": "Air_conditioners_are_sold_in_cities"}}, "机票预定": {"sqlite": "CREATE TABLE 航空公司 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  国内通航城市数量 VARCHAR(50), -- Number of open cities in the country\n  国际通航城市数量 INTEGER, -- Number of cities served by international navigation\n  机队规模 INTEGER, -- Fleet size\n  运送旅客人数 INTEGER, -- Number of passengers transported\n  飞机餐用户满意度 INTEGER, -- Aircraft meal user satisfaction\n);\nCREATE TABLE 机场 (\n  词条id INTEGER PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  所属地区 VARCHAR(50), -- Territory to which it belongs\n  机位数量 VARCHAR(50), -- Number of slots\n  跑道长度 INTEGER, -- runway length\n  跑道数量 INTEGER, -- Number of runways\n  国内航线数量 INTEGER, -- Number of domestic routes\n  国际航线数量 INTEGER, -- Number of international routes\n  通航城市 INTEGER, -- The navigable city\n  旅客吞量 INTEGER, -- Passenger ingestion\n  航站楼数量 INTEGER, -- Number of terminals\n);\nCREATE TABLE 航空公司主运营基地 (\n  航空公司id INTEGER PRIMARY KEY, -- Airlineid\n  机场id INTEGER, -- Airportd\n);\nCREATE TABLE 航空公司机队 (\n  航空公司id INTEGER PRIMARY KEY, -- Airlineid\n  飞机型号 INTEGER, -- Type of aircraft\n  数量 VARCHAR(50), -- Number\n);\nCREATE TABLE 航班信息 (\n  日期 INTEGER PRIMARY KEY, -- Date\n  出发机场id DATETIME, -- Departure from airport id\n  到达机场id INTEGER, -- Arrival at airport id\n  起飞时间 INTEGER, -- Time of departure\n  航班号 DATETIME, -- Flight number\n  航空公司id VARCHAR(50), -- Airlineid\n  机龄 INTEGER, -- Age of flight\n  经济舱价格 INTEGER, -- Economy class price\n  头等舱价格 INTEGER, -- First-class fare\n  经济舱余票 INTEGER, -- The rest of the economy\n  头等舱余票 INTEGER, -- First-class tickets\n  历经时间 INTEGER, -- Time spent\n);\n-- 航空公司机队.航空公司id can be joined with 航空公司.航空公司\n-- 航空公司主运营基地.机场id can be joined with 机场.机场\n-- 航空公司主运营基地.航空公司id can be joined with 航空公司.航空公司\n-- 航班信息.到达机场id can be joined with 机场.机场\n-- 航班信息.出发机场id can be joined with 机场.机场\n-- 航班信息.航空公司id can be joined with 航空公司.航空公司", "columns_en": {"词条id": "Phrase_id", "名称": "Name", "国内通航城市数量": "Number_of_open_cities_in_the_country", "国际通航城市数量": "Number_of_cities_served_by_international_navigation", "机队规模": "Fleet_size", "运送旅客人数": "Number_of_passengers_transported", "飞机餐用户满意度": "Aircraft_meal_user_satisfaction", "所属地区": "Territory_to_which_it_belongs", "机位数量": "Number_of_slots", "跑道长度": "runway_length", "跑道数量": "Number_of_runways", "国内航线数量": "Number_of_domestic_routes", "国际航线数量": "Number_of_international_routes", "通航城市": "The_navigable_city", "旅客吞量": "Passenger_ingestion", "航站楼数量": "Number_of_terminals", "航空公司id": "Airlineid", "机场id": "Airportd", "飞机型号": "Type_of_aircraft", "数量": "Number", "日期": "Date", "出发机场id": "Departure_from_airport_id", "到达机场id": "Arrival_at_airport_id", "起飞时间": "Time_of_departure", "航班号": "Flight_number", "机龄": "Age_of_flight", "经济舱价格": "Economy_class_price", "头等舱价格": "First-class_fare", "经济舱余票": "The_rest_of_the_economy", "头等舱余票": "First-class_tickets", "历经时间": "Time_spent"}, "table_en": {"航空公司": "Airlines", "机场": "Airport", "航空公司主运营基地": "Airline_main_operating_base", "航空公司机队": "Airline_fleet", "航班信息": "Flight_Information"}}, "明星与经纪公司": {"sqlite": "CREATE TABLE 经纪公司 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  公司名称 INTEGER, -- Name of company\n  成立时间 VARCHAR(50), --  Other Organiser\n  注册资本 DATETIME, -- Registered capital\n);\nCREATE TABLE 明星 (\n  词条id INTEGER PRIMARY KEY, -- Phrase id\n  姓名 INTEGER, -- Name\n  所属经纪公司id VARCHAR(50), -- Broker company of which he is a memberd\n  加入时间 INTEGER, -- Add Time\n  解约时间 DATETIME, -- Time of release\n);\nCREATE TABLE 经纪人 (\n  词条id DATETIME PRIMARY KEY, -- Phrase id\n  姓名 INTEGER, -- Name\n  出生地 VARCHAR(50), -- Place of birth\n  出生日期 VARCHAR(50), -- Date of birth\n);\nCREATE TABLE 明星与经纪人 (\n  明星id DATETIME PRIMARY KEY, -- Starid\n  经纪人id INTEGER, -- Brokerid\n  合作年数 INTEGER, -- Years of cooperation\n);\n-- 明星与经纪人.明星id can be joined with 明星.明星\n-- 明星.所属经纪公司id can be joined with 经纪公司.经纪公司\n-- 明星与经纪人.经纪人id can be joined with 经纪人.经纪人", "columns_en": {"词条id": "Phrase_id", "公司名称": "Name_of_company", "成立时间": "_Other_Organiser", "注册资本": "Registered_capital", "姓名": "Name", "所属经纪公司id": "Broker_company_of_which_he_is_a_memberd", "加入时间": "Add_Time", "解约时间": "Time_of_release", "出生地": "Place_of_birth", "出生日期": "Date_of_birth", "明星id": "Starid", "经纪人id": "Brokerid", "合作年数": "Years_of_cooperation"}, "table_en": {"经纪公司": "Brokering_companies", "明星": "Star", "经纪人": "Brokers", "明星与经纪人": "Stars_and_brokers"}}, "中国体育场馆": {"sqlite": "CREATE TABLE 体育场 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  面积 VARCHAR(50), -- Area\n  容纳人数 INTEGER, -- Number of persons accommodated\n  所在城市 INTEGER, -- It's in the city\n);\nCREATE TABLE 中国体育赛事 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  热度 VARCHAR(50), -- Heat\n  商业价值 INTEGER, -- Commercial value\n  影响力 INTEGER, -- Impact\n);\nCREATE TABLE 2018年具体赛事 (\n  赛事名称 INTEGER PRIMARY KEY, -- Name of event\n  赛事类型id VARCHAR(50), -- Race Typeid\n  场馆id INTEGER, -- Field id\n  时间 INTEGER, -- Time\n  观众人数 DATETIME, -- Number of viewers\n);\nCREATE TABLE 2018年演唱会 (\n  词条id INTEGER PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  歌手 VARCHAR(50), -- Singer\n  场馆id VARCHAR(50), -- Field id\n  时间 INTEGER, -- Time\n  最低票价 DATETIME, -- Minimum fare\n);\n-- 2018年演唱会.场馆id can be joined with 体育场.体育场\n-- 2018年具体赛事.场馆id can be joined with 体育场.体育场\n-- 2018年具体赛事.赛事类型id can be joined with 中国体育赛事.中国体育赛事", "columns_en": {"词条id": "Phrase_id", "名称": "Name", "面积": "Area", "容纳人数": "Number_of_persons_accommodated", "所在城市": "It's_in_the_city", "热度": "Heat", "商业价值": "Commercial_value", "影响力": "Impact", "赛事名称": "Name_of_event", "赛事类型id": "Race_Typeid", "场馆id": "Field_id", "时间": "Time", "观众人数": "Number_of_viewers", "歌手": "Singer", "最低票价": "Minimum_fare"}, "table_en": {"体育场": "Stadium", "中国体育赛事": "Chinese_sports_events", "2018年具体赛事": "It's_a_special_event_in_2018", "2018年演唱会": "The_2018_concert"}}, "影视企业": {"sqlite": "CREATE TABLE 公司 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  成立时间 VARCHAR(50), --  Other Organiser\n  负责人 DATETIME, -- Officer-in-Charge\n  排名 VARCHAR(50), -- Rank\n);\nCREATE TABLE 电影 (\n  词条id INTEGER PRIMARY KEY, -- Phrase id\n  影片名 INTEGER, -- Video Name\n  上映时间 VARCHAR(50), -- Show time\n  票房 DATETIME, -- Ticket room\n);\nCREATE TABLE 影视公司拍摄的电影 (\n  公司id INTEGER PRIMARY KEY, -- Companyid\n  电影id INTEGER, -- Film id\n  投资比例 INTEGER, -- Percentage of investments\n);\n-- 影视公司拍摄的电影.电影id can be joined with 电影.电影\n-- 影视公司拍摄的电影.公司id can be joined with 公司.公司", "columns_en": {"词条id": "Phrase_id", "名称": "Name", "成立时间": "_Other_Organiser", "负责人": "Officer-in-Charge", "排名": "Rank", "影片名": "Video_Name", "上映时间": "Show_time", "票房": "Ticket_room", "公司id": "Companyid", "电影id": "Film_id", "投资比例": "Percentage_of_investments"}, "table_en": {"公司": "Company", "电影": "Film", "影视公司拍摄的电影": "It's_a_movie_by_a_video_company"}}, "中国基础设施": {"sqlite": "CREATE TABLE 中国城市供水生产能力 (\n  年份 VARCHAR(50) PRIMARY KEY, -- Year\n  供水生成能力 DATETIME, -- Water supply generation capacity\n  供水管道长度 INTEGER, -- Length of water pipelines\n  供水总量 INTEGER, -- Total water supply\n  供水量增长率 INTEGER, -- Water supply growth rate\n  生活用水供水量 INTEGER, -- Water supply for living use\n  生产用水供水量 INTEGER, -- Production of water and water supply\n  用水人口 INTEGER, -- Population using water\n  用水人口同比增长 INTEGER, -- The water population is growing on a year-on-year basis\n  人均日生活用水量 INTEGER, -- Water for daily life per capita\n  人均用水量同比增长 INTEGER, -- Increase in water use per capita\n);\nCREATE TABLE 中国发电量及电力消费量 (\n  年份 INTEGER PRIMARY KEY, -- Year\n  发电量 DATETIME, -- Power generation\n  电力消费 INTEGER, -- Electricity consumption\n);\nCREATE TABLE 中国电力结构及发电量 (\n  年份 INTEGER PRIMARY KEY, -- Year\n  发电类型 DATETIME, -- Type of power generation\n  发电量 VARCHAR(50), -- Power generation\n);\nCREATE TABLE 中国电力装机量 (\n  年份 INTEGER PRIMARY KEY, -- Year\n  发电类型 DATETIME, -- Type of power generation\n  新增装机量(MW) VARCHAR(50), -- Add Load (MW)\n  累计装机量(MW) INTEGER, -- Cumulative load (MW)\n);\nCREATE TABLE 各省发电量及电力消费量 (\n  省份 INTEGER PRIMARY KEY, -- Province\n  发电量(亿千瓦小时) VARCHAR(50), -- Power generation (millions of kilowatt hours)\n  电力消费(亿千瓦小时) INTEGER, -- Electricity consumption (billion kWh)\n);\nCREATE TABLE 各省生物质发电量 (\n  省份 INTEGER PRIMARY KEY, -- Province\n  累计并网装机容量(万千瓦) VARCHAR(50), -- Accumulated grid capacity (thousands of kilowatts)\n  农林生物质发电量(亿千瓦小时) INTEGER, -- Biomass power generation in agriculture and forestry (billion kWh)\n  生活垃圾焚烧发电量(亿千瓦小时) INTEGER, -- Incineration of electricity from domestic waste (millions of kilowatt-hours)\n  沼气发电量(亿千瓦小时) INTEGER, -- Biogas power generation (billion kWh)\n);\n", "columns_en": {"年份": "Year", "供水生成能力": "Water_supply_generation_capacity", "供水管道长度": "Length_of_water_pipelines", "供水总量": "Total_water_supply", "供水量增长率": "Water_supply_growth_rate", "生活用水供水量": "Water_supply_for_living_use", "生产用水供水量": "Production_of_water_and_water_supply", "用水人口": "Population_using_water", "用水人口同比增长": "The_water_population_is_growing_on_a_year-on-year_basis", "人均日生活用水量": "Water_for_daily_life_per_capita", "人均用水量同比增长": "Increase_in_water_use_per_capita", "发电量": "Power_generation", "电力消费": "Electricity_consumption", "发电类型": "Type_of_power_generation", "新增装机量(MW)": "Add_Load_(MW)", "累计装机量(MW)": "Cumulative_load_(MW)", "省份": "Province", "发电量(亿千瓦小时)": "Power_generation_(millions_of_kilowatt_hours)", "电力消费(亿千瓦小时)": "Electricity_consumption_(billion_kWh)", "累计并网装机容量(万千瓦)": "Accumulated_grid_capacity_(thousands_of_kilowatts)", "农林生物质发电量(亿千瓦小时)": "Biomass_power_generation_in_agriculture_and_forestry_(billion_kWh)", "生活垃圾焚烧发电量(亿千瓦小时)": "Incineration_of_electricity_from_domestic_waste_(millions_of_kilowatt-hours)", "沼气发电量(亿千瓦小时)": "Biogas_power_generation_(billion_kWh)"}, "table_en": {"中国城市供水生产能力": "Urban_water_supply_production_capacity_in_China", "中国发电量及电力消费量": "Power_generation_and_consumption_in_China", "中国电力结构及发电量": "China_'_s_electricity_structure_and_power_generation", "中国电力装机量": "China_'_s_power_loading_capacity", "各省发电量及电力消费量": "Electricity_generation_and_consumption_in_the_provinces", "各省生物质发电量": "Biomass_power_generation_in_the_provinces"}}, "卫视播放节目": {"sqlite": "CREATE TABLE 卫视电视剧 (\n  卫视 VARCHAR(50) PRIMARY KEY, -- Guards\n  电视剧名 VARCHAR(50), -- It's a TV show\n  日期 VARCHAR(50), -- Date\n  播放时间 DATETIME, -- Playtime\n  集数 DATETIME, -- Collections\n);\nCREATE TABLE 卫视综艺节目 (\n  卫视 INTEGER PRIMARY KEY, -- Guards\n  节目名 VARCHAR(50), -- Program Name\n  日期 VARCHAR(50), -- Date\n  播放时间 DATETIME, -- Playtime\n  期数 DATETIME, -- Term\n);\nCREATE TABLE 央视栏目 (\n  频道 INTEGER PRIMARY KEY, -- Channel\n  栏目名 VARCHAR(50), -- Column Name\n  类型 VARCHAR(50), -- Type\n  日期 VARCHAR(50), -- Date\n  播放时间 DATETIME, -- Playtime\n);\nCREATE TABLE 付费栏目 (\n  频道 DATETIME PRIMARY KEY, -- Channel\n  栏目名 VARCHAR(50), -- Column Name\n  类型 VARCHAR(50), -- Type\n  日期 VARCHAR(50), -- Date\n  播放时间 DATETIME, -- Playtime\n  费用 DATETIME, -- Costs\n);\n", "columns_en": {"卫视": "Guards", "电视剧名": "It's_a_TV_show", "日期": "Date", "播放时间": "Playtime", "集数": "Collections", "节目名": "Program_Name", "期数": "Term", "频道": "Channel", "栏目名": "Column_Name", "类型": "Type", "费用": "Costs"}, "table_en": {"卫视电视剧": "Watch_the_TV_show", "卫视综艺节目": "Xiao_Xiao_Xiao_Xiao_Xiao_Xing", "央视栏目": "View_Columns", "付费栏目": "Payment_fields"}}, "北京驾校": {"sqlite": "CREATE TABLE 驾校 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  驾校名称 INTEGER, -- Name of driving school\n  驾校地址 VARCHAR(50), -- The driving address\n  报名电话 VARCHAR(50), -- Sign up the phone\n  车辆数量 INTEGER, -- Number of vehicles\n  教练数量 INTEGER, -- Number of coaches\n  班车点数量 INTEGER, -- Number of bus stops\n  学员数量 INTEGER, -- Number of participants\n);\nCREATE TABLE 驾校班型 (\n  词条id INTEGER PRIMARY KEY, -- Phrase id\n  班型名称 INTEGER, -- Class name\n  驾照类型 VARCHAR(50), -- Type of driver ' s licence\n  拿证时间 VARCHAR(50), -- Testimonial time\n);\nCREATE TABLE 驾校费用 (\n  班型id INTEGER PRIMARY KEY, -- X-ray  X-ray  X-ray  X-ray  X-ray  X-ray  X-ray  X-ray  X-ray  X-ray  X-ray  X-ray  X-ray  X-ray  X-ray  X-ray  X-ray  X-ray  X-ray  X-ray  X-ray  X-ray\n  学校id INTEGER, -- School id\n  费用 INTEGER, -- Costs\n);\n-- 驾校费用.学校id can be joined with 驾校.驾校\n-- 驾校费用.班型id can be joined with 驾校班型.驾校班型", "columns_en": {"词条id": "Phrase_id", "驾校名称": "Name_of_driving_school", "驾校地址": "The_driving_address", "报名电话": "Sign_up_the_phone", "车辆数量": "Number_of_vehicles", "教练数量": "Number_of_coaches", "班车点数量": "Number_of_bus_stops", "学员数量": "Number_of_participants", "班型名称": "Class_name", "驾照类型": "Type_of_driver_'_s_licence", "拿证时间": "Testimonial_time", "班型id": "X-ray__X-ray__X-ray__X-ray__X-ray__X-ray__X-ray__X-ray__X-ray__X-ray__X-ray__X-ray__X-ray__X-ray__X-ray__X-ray__X-ray__X-ray__X-ray__X-ray__X-ray__X-ray", "学校id": "School_id", "费用": "Costs"}, "table_en": {"驾校": "Heading_school", "驾校班型": "I'm_driving_class", "驾校费用": "School_driving_costs"}}, "城市消费": {"sqlite": "CREATE TABLE 40城消费力排名 (\n  城市 VARCHAR(50) PRIMARY KEY, -- Urban\n  所在省份 VARCHAR(50), -- Where are you from?\n  社消总额(亿) VARCHAR(50), -- Total social expenditure (millions)\n  总额排名 INTEGER, -- Total ranking\n  增速 INTEGER, -- Speed up\n  增速排名 INTEGER, -- Speed up the rankings\n  人均社消(万) INTEGER, -- Social deprivation per capita (millions)\n  总GDP(亿) INTEGER, -- Total GDP (millions)\n  人均GDP(万) INTEGER, -- GDP per capita (millions)\n  常住人口(万) INTEGER, -- Resident population (millions)\n  参考房价 INTEGER, -- Reference house price\n);\nCREATE TABLE 各城市消费结构 (\n  城市 INTEGER PRIMARY KEY, -- Urban\n  人均可支配收入 VARCHAR(50), -- Per capita disposable income\n  餐饮消费占比 INTEGER, -- Share of catering consumption\n  奢侈品消费占比 INTEGER, -- Proportion of consumption of luxury goods\n  旅游占比 INTEGER, -- Tourism as a percentage\n  人均网购消费额 INTEGER, -- Net purchase consumption per capita\n  电子产品消费占比 INTEGER, -- Share of consumption of electronics\n);\nCREATE TABLE 生态文明消费 (\n  环保消费品 INTEGER PRIMARY KEY, -- Environmentally friendly consumer goods\n  增长率 VARCHAR(50), -- Growth rate\n);\nCREATE TABLE 品牌消费 (\n  品牌 INTEGER PRIMARY KEY, -- Brand\n  类型 VARCHAR(50), -- Type\n  销量占比 VARCHAR(50), -- Proportion of sales\n  销量排名 INTEGER, -- Sales ranking\n);\nCREATE TABLE 商品种类消费增速 (\n  种类 INTEGER PRIMARY KEY, -- Category\n  2013年增速 VARCHAR(50), -- Growth in 2013\n  2015年增速 INTEGER, -- Growth in 2015\n  2017年增速 INTEGER, -- It's going up in 2017\n);\n", "columns_en": {"城市": "Urban", "所在省份": "Where_are_you_from?", "社消总额(亿)": "Total_social_expenditure_(millions)", "总额排名": "Total_ranking", "增速": "Speed_up", "增速排名": "Speed_up_the_rankings", "人均社消(万)": "Social_deprivation_per_capita_(millions)", "总GDP(亿)": "Total_GDP_(millions)", "人均GDP(万)": "GDP_per_capita_(millions)", "常住人口(万)": "Resident_population_(millions)", "参考房价": "Reference_house_price", "人均可支配收入": "Per_capita_disposable_income", "餐饮消费占比": "Share_of_catering_consumption", "奢侈品消费占比": "Proportion_of_consumption_of_luxury_goods", "旅游占比": "Tourism_as_a_percentage", "人均网购消费额": "Net_purchase_consumption_per_capita", "电子产品消费占比": "Share_of_consumption_of_electronics", "环保消费品": "Environmentally_friendly_consumer_goods", "增长率": "Growth_rate", "品牌": "Brand", "类型": "Type", "销量占比": "Proportion_of_sales", "销量排名": "Sales_ranking", "种类": "Category", "2013年增速": "Growth_in_2013", "2015年增速": "Growth_in_2015", "2017年增速": "It's_going_up_in_2017"}, "table_en": {"40城消费力排名": "40-city_consumer_power_ranking", "各城市消费结构": "Consumption_structure_of_cities", "生态文明消费": "Ecocivilization_consumption", "品牌消费": "Brand_consumption", "商品种类消费增速": "Growth_in_consumption_of_commodity_groups"}}, "公司收购": {"sqlite": "CREATE TABLE 公司 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  总部地点 VARCHAR(50), -- Headquarters locations\n  成立时间 VARCHAR(50), --  Other Organiser\n  员工数量 DATETIME, -- Number of employees\n  市值 INTEGER, -- Market value\n);\nCREATE TABLE 收购的公司 (\n  公司id INTEGER PRIMARY KEY, -- Companyid\n  被收购公司id INTEGER, -- Purchased companyid\n  时间 INTEGER, -- Time\n  收购方式 DATETIME, -- Acquisition modalities\n  收购资金 VARCHAR(50), -- Acquisition of funds\n);\nCREATE TABLE 投资的公司 (\n  公司id INTEGER PRIMARY KEY, -- Companyid\n  被投资公司id INTEGER, -- ♪ By an investment company ♪\n  时间 INTEGER, -- Time\n  投资资金 DATETIME, -- Investment funds\n  股权占比 INTEGER, -- Shares\n);\nCREATE TABLE 并购的公司 (\n  主公司id INTEGER PRIMARY KEY, -- Main firmid\n  并购公司id INTEGER, -- Mergers and acquisitionsd\n  主公司股权占比 INTEGER, -- Shares in the main company\n  并购公司股权占比 INTEGER, -- Shares in M & A companies\n);\n-- 收购的公司.被收购公司id can be joined with 公司.公司\n-- 并购的公司.并购公司id can be joined with 公司.公司\n-- 收购的公司.公司id can be joined with 公司.公司\n-- 投资的公司.公司id can be joined with 公司.公司\n-- 并购的公司.主公司id can be joined with 公司.公司\n-- 投资的公司.被投资公司id can be joined with 公司.公司", "columns_en": {"词条id": "Phrase_id", "名称": "Name", "总部地点": "Headquarters_locations", "成立时间": "_Other_Organiser", "员工数量": "Number_of_employees", "市值": "Market_value", "公司id": "Companyid", "被收购公司id": "Purchased_companyid", "时间": "Time", "收购方式": "Acquisition_modalities", "收购资金": "Acquisition_of_funds", "被投资公司id": "♪_By_an_investment_company_♪", "投资资金": "Investment_funds", "股权占比": "Shares", "主公司id": "Main_firmid", "并购公司id": "Mergers_and_acquisitionsd", "主公司股权占比": "Shares_in_the_main_company", "并购公司股权占比": "Shares_in_M_&_A_companies"}, "table_en": {"公司": "Company", "收购的公司": "Acquisitions", "投资的公司": "Investment_companies", "并购的公司": "Mergers_and_acquisitions"}}, "酒店预订": {"sqlite": "CREATE TABLE 酒店 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  地址 VARCHAR(50), -- Address\n  距火车站距离 VARCHAR(50), -- Distance from train station\n  距机场距离 INTEGER, -- Distance from airport\n  距汽车站距离 INTEGER, -- Distance from bus station\n  距市中心距离 INTEGER, -- It's downtown\n  周围景点数 INTEGER, -- Perimeter sites\n  周围饭店数量 INTEGER, -- Number of hotels around\n);\nCREATE TABLE 酒店交通 (\n  酒店id INTEGER PRIMARY KEY, -- Hotel id\n  地铁线路 INTEGER, -- Subway\n  地铁站名称 VARCHAR(50), -- Name of subway station\n  步行距离 VARCHAR(50), -- Walking distance\n);\nCREATE TABLE 酒店客房 (\n  酒店id INTEGER PRIMARY KEY, -- Hotel id\n  房型 INTEGER, -- Room type\n  早餐 VARCHAR(50), -- Breakfast\n  价格 BINARY, -- Prices\n  剩余房间数 INTEGER, -- Number of rooms remaining\n);\n-- 酒店客房.酒店id can be joined with 酒店.酒店\n-- 酒店交通.酒店id can be joined with 酒店.酒店", "columns_en": {"词条id": "Phrase_id", "名称": "Name", "地址": "Address", "距火车站距离": "Distance_from_train_station", "距机场距离": "Distance_from_airport", "距汽车站距离": "Distance_from_bus_station", "距市中心距离": "It's_downtown", "周围景点数": "Perimeter_sites", "周围饭店数量": "Number_of_hotels_around", "酒店id": "Hotel_id", "地铁线路": "Subway", "地铁站名称": "Name_of_subway_station", "步行距离": "Walking_distance", "房型": "Room_type", "早餐": "Breakfast", "价格": "Prices", "剩余房间数": "Number_of_rooms_remaining"}, "table_en": {"酒店": "Hotel", "酒店交通": "Hotel_traffic", "酒店客房": "Hotel_room"}}, "NBA篮球": {"sqlite": "CREATE TABLE 篮球运动员 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  中文名 INTEGER, -- Chinese Name\n  国籍 VARCHAR(50), -- Nationality\n  出生地 VARCHAR(50), -- Place of birth\n  出生日期 VARCHAR(50), -- Date of birth\n  身高 DATETIME, -- Height\n  体重 INTEGER, -- body weight\n  毕业院校 INTEGER, -- Graduate schools\n  场上位置 VARCHAR(50), -- Field position\n);\nCREATE TABLE 比赛场馆 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  容纳人数 VARCHAR(50), -- Number of persons accommodated\n);\nCREATE TABLE 篮球俱乐部 (\n  词条id INTEGER PRIMARY KEY, -- Phrase id\n  中文队名 INTEGER, -- Chinese Team Name\n  所属地区 VARCHAR(50), -- Territory to which it belongs\n  成立时间 VARCHAR(50), --  Other Organiser\n  主场馆id DATETIME, -- Main complexid\n  赛区 INTEGER, -- Chai District\n);\nCREATE TABLE 俱乐部现役球员 (\n  球员id VARCHAR(50) PRIMARY KEY, -- Player id\n  俱乐部id INTEGER, -- Club id\n  场上位置 INTEGER, -- Field position\n  球衣号码 VARCHAR(50), -- {\\bord0\\shad0\\alphaH3D}The {\\cHFFFFFF}{\\cH00FFFF} {\\cHFFFFFF}{\\cH00FFFF} {\\cHFFFFFF}{\\cH00FFFF} {\\cHFFFFFF}{\\cH00FFFF}\n  是否主力 INTEGER, -- ♪ Is the main force ♪\n);\nCREATE TABLE 运动员转会 (\n  运动员id BINARY PRIMARY KEY, -- Athlete id\n  俱乐部id INTEGER, -- Club id\n  加入日期 INTEGER, -- Date of accession\n  服役时间 DATETIME, -- Time of service\n  号码 INTEGER, -- Number\n  薪资 INTEGER, -- Salaries\n);\nCREATE TABLE 教练 (\n  词条id INTEGER PRIMARY KEY, -- Phrase id\n  中文名 INTEGER, -- Chinese Name\n  国籍 VARCHAR(50), -- Nationality\n  毕业院校 VARCHAR(50), -- Graduate schools\n  执教时长 VARCHAR(50), -- I've been teaching for a long time\n  年薪 INTEGER, -- Annual salary\n);\nCREATE TABLE 俱乐部教练 (\n  教练id INTEGER PRIMARY KEY, -- Coach id\n  俱乐部id INTEGER, -- Club id\n  加入日期 INTEGER, -- Date of accession\n  身份 DATETIME, -- Identity\n);\n-- 俱乐部教练.教练id can be joined with 教练.教练\n-- 篮球俱乐部.主场馆id can be joined with 比赛场馆.比赛场馆\n-- 运动员转会.俱乐部id can be joined with 篮球俱乐部.篮球俱乐部\n-- 俱乐部现役球员.球员id can be joined with 篮球运动员.篮球运动员\n-- 俱乐部教练.俱乐部id can be joined with 篮球俱乐部.篮球俱乐部\n-- 运动员转会.运动员id can be joined with 篮球运动员.篮球运动员\n-- 俱乐部现役球员.俱乐部id can be joined with 篮球俱乐部.篮球俱乐部", "columns_en": {"词条id": "Phrase_id", "中文名": "Chinese_Name", "国籍": "Nationality", "出生地": "Place_of_birth", "出生日期": "Date_of_birth", "身高": "Height", "体重": "body_weight", "毕业院校": "Graduate_schools", "场上位置": "Field_position", "名称": "Name", "容纳人数": "Number_of_persons_accommodated", "中文队名": "Chinese_Team_Name", "所属地区": "Territory_to_which_it_belongs", "成立时间": "_Other_Organiser", "主场馆id": "Main_complexid", "赛区": "Chai_District", "球员id": "Player_id", "俱乐部id": "Club_id", "球衣号码": "{\\bord0\\shad0\\alphaH3D}The_{\\cHFFFFFF}{\\cH00FFFF}_{\\cHFFFFFF}{\\cH00FFFF}_{\\cHFFFFFF}{\\cH00FFFF}_{\\cHFFFFFF}{\\cH00FFFF}", "是否主力": "♪_Is_the_main_force_♪", "运动员id": "Athlete_id", "加入日期": "Date_of_accession", "服役时间": "Time_of_service", "号码": "Number", "薪资": "Salaries", "执教时长": "I've_been_teaching_for_a_long_time", "年薪": "Annual_salary", "教练id": "Coach_id", "身份": "Identity"}, "table_en": {"篮球运动员": "Basketball_player", "比赛场馆": "It's_a_game_house", "篮球俱乐部": "Basketball_Club", "俱乐部现役球员": "Active_club_player", "运动员转会": "Sportsmen's_turn", "教练": "Coach", "俱乐部教练": "Coach_of_the_club"}}, "中国姓氏": {"sqlite": "CREATE TABLE 汉字 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  汉字 INTEGER, -- Chinese\n  部首 VARCHAR(50), -- Header\n  笔画 VARCHAR(50), -- Brush\n);\nCREATE TABLE 姓氏 (\n  姓氏id INTEGER PRIMARY KEY, -- Last name id\n  源自姓氏id INTEGER, -- From family name id\n  人口 INTEGER, -- Population\n  占比 INTEGER, -- Percentage\n);\nCREATE TABLE 姓氏分布区域 (\n  姓氏id INTEGER PRIMARY KEY, -- Last name id\n  区域 INTEGER, -- Regional\n  人口占比 VARCHAR(50), -- Proportion of population\n);\n-- 姓氏.姓氏id can be joined with 汉字.汉字\n-- 姓氏.源自姓氏id can be joined with 汉字.汉字\n-- 姓氏分布区域.姓氏id can be joined with 汉字.汉字", "columns_en": {"词条id": "Phrase_id", "汉字": "Chinese", "部首": "Header", "笔画": "Brush", "姓氏id": "Last_name_id", "源自姓氏id": "From_family_name_id", "人口": "Population", "占比": "Percentage", "区域": "Regional", "人口占比": "Proportion_of_population"}, "table_en": {"汉字": "Chinese", "姓氏": "Surname", "姓氏分布区域": "Family_name_distribution_area"}}, "澳网公开赛": {"sqlite": "CREATE TABLE 网球运动员 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  姓名 INTEGER, -- Name\n  性别 VARCHAR(50), -- Gender\n  国籍 VARCHAR(50), -- Nationality\n  专业特点 VARCHAR(50), -- Professional characteristics\n);\nCREATE TABLE 网球赛事单打冠军排名 (\n  运动员id VARCHAR(50) PRIMARY KEY, -- Athlete id\n  赛事 INTEGER, -- The race\n  夺冠次数 VARCHAR(50), -- Number of crowns\n  夺冠年份 INTEGER, -- Winning year\n);\nCREATE TABLE 网球赛事历届单打冠军 (\n  年份 VARCHAR(50) PRIMARY KEY, -- Year\n  赛事 DATETIME, -- The race\n  性别 VARCHAR(50), -- Gender\n  冠军id VARCHAR(50), -- Champion id\n  亚军id INTEGER, -- Yajun id\n  决赛比分 INTEGER, -- The final score\n);\nCREATE TABLE 网球比赛记录 (\n  记录项目 INTEGER PRIMARY KEY, -- Record items\n  保持者id VARCHAR(50), -- Maintainer id\n  说明 INTEGER, -- Annotations\n);\n-- 网球赛事历届单打冠军.亚军id can be joined with 网球运动员.网球运动员\n-- 网球比赛记录.保持者id can be joined with 网球运动员.网球运动员\n-- 网球赛事单打冠军排名.运动员id can be joined with 网球运动员.网球运动员\n-- 网球赛事历届单打冠军.冠军id can be joined with 网球运动员.网球运动员", "columns_en": {"词条id": "Phrase_id", "姓名": "Name", "性别": "Gender", "国籍": "Nationality", "专业特点": "Professional_characteristics", "运动员id": "Athlete_id", "赛事": "The_race", "夺冠次数": "Number_of_crowns", "夺冠年份": "Winning_year", "年份": "Year", "冠军id": "Champion_id", "亚军id": "Yajun_id", "决赛比分": "The_final_score", "记录项目": "Record_items", "保持者id": "Maintainer_id", "说明": "Annotations"}, "table_en": {"网球运动员": "Tennis_player", "网球赛事单打冠军排名": "Tennis_is_the_number_one_champion", "网球赛事历届单打冠军": "One-time_champions_in_tennis", "网球比赛记录": "Tennis_record"}}, "足球奖项": {"sqlite": "CREATE TABLE 足球运动员 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  中文名 INTEGER, -- Chinese Name\n  国籍 VARCHAR(50), -- Nationality\n  年龄 VARCHAR(50), -- Age\n  俱乐部 INTEGER, -- Club\n);\nCREATE TABLE 世界杯金球奖 (\n  年份 VARCHAR(50) PRIMARY KEY, -- Year\n  世界杯名称 DATETIME, -- World Cup name\n  金球奖运动员id VARCHAR(50), -- Goldball player id\n  银球奖运动员id INTEGER, -- Silverball Award player id\n  铜球奖运动员id INTEGER, -- Bronze Ball Award player id\n);\nCREATE TABLE 欧洲杯金球奖 (\n  赛季 INTEGER PRIMARY KEY, -- Season\n  运动员id INTEGER, -- Athlete id\n  国籍 INTEGER, -- Nationality\n  俱乐部 VARCHAR(50), -- Club\n  进球数 VARCHAR(50), -- Goal\n);\nCREATE TABLE FIFA金球奖 (\n  年度 INTEGER PRIMARY KEY, -- Year\n  运动员id DATETIME, -- Athlete id\n  获奖时国籍 INTEGER, -- Nationality at the time of award\n  获奖时俱乐部 VARCHAR(50), -- The Club when the prize is awarded\n);\n-- 世界杯金球奖.金球奖运动员id can be joined with 足球运动员.足球运动员\n-- FIFA金球奖.运动员id can be joined with 足球运动员.足球运动员\n-- 欧洲杯金球奖.运动员id can be joined with 足球运动员.足球运动员\n-- 世界杯金球奖.银球奖运动员id can be joined with 足球运动员.足球运动员\n-- 世界杯金球奖.铜球奖运动员id can be joined with 足球运动员.足球运动员", "columns_en": {"词条id": "Phrase_id", "中文名": "Chinese_Name", "国籍": "Nationality", "年龄": "Age", "俱乐部": "Club", "年份": "Year", "世界杯名称": "World_Cup_name", "金球奖运动员id": "Goldball_player_id", "银球奖运动员id": "Silverball_Award_player_id", "铜球奖运动员id": "Bronze_Ball_Award_player_id", "赛季": "Season", "运动员id": "Athlete_id", "进球数": "Goal", "年度": "Year", "获奖时国籍": "Nationality_at_the_time_of_award", "获奖时俱乐部": "The_Club_when_the_prize_is_awarded"}, "table_en": {"足球运动员": "Football_players", "世界杯金球奖": "The_World_Cup_Goldball_Award", "欧洲杯金球奖": "The_European_Goldball_Prize", "FIFA金球奖": "FIFA_Goldball_Award"}}, "视频软件": {"sqlite": "CREATE TABLE 视频平台 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  平台名称 INTEGER, -- Name of the platform\n  有无插件 VARCHAR(50), -- Plugins available\n  客户端大小 BINARY, -- Client Size\n  会费 INTEGER, -- Contributions\n  好评率 INTEGER, -- That's a good rating\n);\nCREATE TABLE 各视频平台自制剧 (\n  词条id INTEGER PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  平台id VARCHAR(50), -- Platformid\n  播出年份 INTEGER, -- Year of broadcast\n  类型 DATETIME, -- Type\n  观看量 VARCHAR(50), -- Number of views\n  评分 INTEGER, -- Rating\n);\nCREATE TABLE 体育赛事 (\n  词条id INTEGER PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  所属项目 VARCHAR(50), -- Items to which\n);\nCREATE TABLE 赛事转播 (\n  赛事id VARCHAR(50) PRIMARY KEY, -- Game id\n  平台id INTEGER, -- Platformid\n  转播费 INTEGER, -- Rebroadcasting fees\n);\n-- 赛事转播.赛事id can be joined with 体育赛事.体育赛事\n-- 各视频平台自制剧.平台id can be joined with 视频平台.视频平台\n-- 赛事转播.平台id can be joined with 视频平台.视频平台", "columns_en": {"词条id": "Phrase_id", "平台名称": "Name_of_the_platform", "有无插件": "Plugins_available", "客户端大小": "Client_Size", "会费": "Contributions", "好评率": "That's_a_good_rating", "名称": "Name", "平台id": "Platformid", "播出年份": "Year_of_broadcast", "类型": "Type", "观看量": "Number_of_views", "评分": "Rating", "所属项目": "Items_to_which", "赛事id": "Game_id", "转播费": "Rebroadcasting_fees"}, "table_en": {"视频平台": "Video_platform", "各视频平台自制剧": "Home-made_dramas_from_various_video_platforms", "体育赛事": "Sports_events", "赛事转播": "The_game's_on_the_air"}}, "网红食品": {"sqlite": "CREATE TABLE 网红食品 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  品类数量 VARCHAR(50), -- Number of Classes\n  商家数量 INTEGER, -- Number of businesses\n  出现年份 INTEGER, -- Year of occurrence\n);\nCREATE TABLE 网红食品销售 (\n  类型id DATETIME PRIMARY KEY, -- Type id\n  年份 INTEGER, -- Year\n  销售额 DATETIME, -- Sales\n  购买人数 INTEGER, -- Number of persons purchased\n);\nCREATE TABLE 网红食品购买者 (\n  类型id INTEGER PRIMARY KEY, -- Type id\n  年龄段 INTEGER, -- Age group\n  人数占比 VARCHAR(50), -- Number of persons as a percentage\n);\nCREATE TABLE 网红食品分布城市 (\n  类型id INTEGER PRIMARY KEY, -- Type id\n  省份 INTEGER, -- Province\n  销售量占比 VARCHAR(50), -- Proportion of sales\n  商家占比 INTEGER, -- Business as a percentage\n  安全事件关注度 INTEGER, -- Security incident concerns\n);\n-- 网红食品销售.类型id can be joined with 网红食品.网红食品\n-- 网红食品购买者.类型id can be joined with 网红食品.网红食品\n-- 网红食品分布城市.类型id can be joined with 网红食品.网红食品", "columns_en": {"词条id": "Phrase_id", "名称": "Name", "品类数量": "Number_of_Classes", "商家数量": "Number_of_businesses", "出现年份": "Year_of_occurrence", "类型id": "Type_id", "年份": "Year", "销售额": "Sales", "购买人数": "Number_of_persons_purchased", "年龄段": "Age_group", "人数占比": "Number_of_persons_as_a_percentage", "省份": "Province", "销售量占比": "Proportion_of_sales", "商家占比": "Business_as_a_percentage", "安全事件关注度": "Security_incident_concerns"}, "table_en": {"网红食品": "Red_food", "网红食品销售": "Red_food_sales", "网红食品购买者": "Red_food_buyers", "网红食品分布城市": "Red_food_distribution_cities"}}, "中国演员和电影": {"sqlite": "CREATE TABLE 演职员 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  姓名 INTEGER, -- Name\n  身高 VARCHAR(50), -- Height\n  体重 INTEGER, -- body weight\n  出生地 INTEGER, -- Place of birth\n  出生日期 VARCHAR(50), -- Date of birth\n  毕业院校 DATETIME, -- Graduate schools\n  职业 VARCHAR(50), -- Occupation\n);\nCREATE TABLE 电影 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  电影名称 INTEGER, -- Film Name\n  制片地区 VARCHAR(50), -- Production area\n  制片成本 VARCHAR(50), -- Production costs\n  片长 INTEGER, -- The film's long\n  导演 INTEGER, -- Director\n  上映时间 INTEGER, -- Show time\n  票房 DATETIME, -- Ticket room\n  类型 INTEGER, -- Type\n);\nCREATE TABLE 演员和电影 (\n  演员id VARCHAR(50) PRIMARY KEY, -- Actor id\n  电影id INTEGER, -- Film id\n  饰演角色 INTEGER, -- Play a role\n  片酬 VARCHAR(50), -- Film remuneration\n);\nCREATE TABLE 电影平台 (\n  电影id INTEGER PRIMARY KEY, -- Film id\n  播放平台 INTEGER, -- Play Platform\n  播放量 VARCHAR(50), -- Playbacks\n  评分 INTEGER, -- Rating\n);\n-- 演员和电影.电影id can be joined with 电影.电影\n-- 演员和电影.演员id can be joined with 演职员.演职员\n-- 电影平台.电影id can be joined with 电影.电影", "columns_en": {"词条id": "Phrase_id", "姓名": "Name", "身高": "Height", "体重": "body_weight", "出生地": "Place_of_birth", "出生日期": "Date_of_birth", "毕业院校": "Graduate_schools", "职业": "Occupation", "电影名称": "Film_Name", "制片地区": "Production_area", "制片成本": "Production_costs", "片长": "The_film's_long", "导演": "Director", "上映时间": "Show_time", "票房": "Ticket_room", "类型": "Type", "演员id": "Actor_id", "电影id": "Film_id", "饰演角色": "Play_a_role", "片酬": "Film_remuneration", "播放平台": "Play_Platform", "播放量": "Playbacks", "评分": "Rating"}, "table_en": {"演职员": "Actor", "电影": "Film", "演员和电影": "Actors_and_movies", "电影平台": "Film_platform"}}, "豆瓣电影": {"sqlite": "CREATE TABLE 电影 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  影名 INTEGER, -- Shadow Name\n  语言 VARCHAR(50), -- Languages\n  类型 VARCHAR(50), -- Type\n  豆瓣评分 VARCHAR(50), -- Bean petals\n  评价人数 INTEGER, -- Number of evaluations\n  5星占比 INTEGER, -- 5-star ratio\n);\nCREATE TABLE 一周口碑榜 (\n  电影id INTEGER PRIMARY KEY, -- Film id\n  名次 INTEGER, -- Synchronising folder\n  名次变化 INTEGER, -- Nominal change\n);\nCREATE TABLE top10票房榜 (\n  电影id INTEGER PRIMARY KEY, -- Film id\n  上映日期 INTEGER, -- Date of presentation\n  总票房 DATETIME, -- The ticket office\n  制作预算 INTEGER, -- Budget production\n);\nCREATE TABLE top100电影 (\n  电影id INTEGER PRIMARY KEY, -- Film id\n  名次 INTEGER, -- Synchronising folder\n  点赞次数 INTEGER, -- How many times do I get?\n);\n-- top10票房榜.电影id can be joined with 电影.电影\n-- 一周口碑榜.电影id can be joined with 电影.电影\n-- top100电影.电影id can be joined with 电影.电影", "columns_en": {"词条id": "Phrase_id", "影名": "Shadow_Name", "语言": "Languages", "类型": "Type", "豆瓣评分": "Bean_petals", "评价人数": "Number_of_evaluations", "5星占比": "5-star_ratio", "电影id": "Film_id", "名次": "Synchronising_folder", "名次变化": "Nominal_change", "上映日期": "Date_of_presentation", "总票房": "The_ticket_office", "制作预算": "Budget_production", "点赞次数": "How_many_times_do_I_get?"}, "table_en": {"电影": "Film", "一周口碑榜": "A_week's_watch", "top10票房榜": "Top_10_tickets", "top100电影": "Top_100_movies"}}, "中国资源城市": {"sqlite": "CREATE TABLE 城市 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  行政区划 VARCHAR(50), -- Administrative divisions\n  所属省份 VARCHAR(50), -- Provinces to which they belong\n  类型 VARCHAR(50), -- Type\n);\nCREATE TABLE 资源 (\n  名称 VARCHAR(50) PRIMARY KEY, -- Name\n  城市id VARCHAR(50), -- Urban id\n  资源所占面积 INTEGER, -- Area of resources\n  储量 INTEGER, -- Storage\n  已开采量 INTEGER, -- Exploited\n);\n-- 资源.城市id can be joined with 城市.城市", "columns_en": {"词条id": "Phrase_id", "名称": "Name", "行政区划": "Administrative_divisions", "所属省份": "Provinces_to_which_they_belong", "类型": "Type", "城市id": "Urban_id", "资源所占面积": "Area_of_resources", "储量": "Storage", "已开采量": "Exploited"}, "table_en": {"城市": "Urban", "资源": "Resources"}}, "数字单位": {"sqlite": "CREATE TABLE 单位 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  类别 VARCHAR(50), -- Category\n);\nCREATE TABLE 进制换算 (\n  单位id VARCHAR(50) PRIMARY KEY, -- Unit id\n  转换单位id INTEGER, -- Convert unitid\n  进制 INTEGER, -- Progress\n);\n-- 进制换算.转换单位id can be joined with 单位.单位\n-- 进制换算.单位id can be joined with 单位.单位", "columns_en": {"词条id": "Phrase_id", "名称": "Name", "类别": "Category", "单位id": "Unit_id", "转换单位id": "Convert_unitid", "进制": "Progress"}, "table_en": {"单位": "Units", "进制换算": "Evolution"}}, "举重比赛": {"sqlite": "CREATE TABLE 运动员 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  姓名 INTEGER, -- Name\n  性别 VARCHAR(50), -- Gender\n  国籍 VARCHAR(50), -- Nationality\n  出生地 VARCHAR(50), -- Place of birth\n  出生日期 VARCHAR(50), -- Date of birth\n  体重 DATETIME, -- body weight\n);\nCREATE TABLE 举重世界记录 (\n  公斤级别 INTEGER PRIMARY KEY, -- Kilogram level\n  项目类型 INTEGER, -- Type of project\n  记录成绩 VARCHAR(50), -- Recording of accomplishments\n  运动员id INTEGER, -- Athlete id\n  破纪录时间 INTEGER, -- It's record time\n);\nCREATE TABLE 举重奥运会冠军 (\n  奥运会名称 DATETIME PRIMARY KEY, -- Name of Olympic Games\n  公斤级别 VARCHAR(50), -- Kilogram level\n  运动员id INTEGER, -- Athlete id\n);\n-- 举重世界记录.运动员id can be joined with 运动员.运动员\n-- 举重奥运会冠军.运动员id can be joined with 运动员.运动员", "columns_en": {"词条id": "Phrase_id", "姓名": "Name", "性别": "Gender", "国籍": "Nationality", "出生地": "Place_of_birth", "出生日期": "Date_of_birth", "体重": "body_weight", "公斤级别": "Kilogram_level", "项目类型": "Type_of_project", "记录成绩": "Recording_of_accomplishments", "运动员id": "Athlete_id", "破纪录时间": "It's_record_time", "奥运会名称": "Name_of_Olympic_Games"}, "table_en": {"运动员": "Athletes", "举重世界记录": "Weight_lift_world_record", "举重奥运会冠军": "Weightlifting_Olympic_champion"}}, "当前上映电影": {"sqlite": "CREATE TABLE 电影 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  片长 VARCHAR(50), -- The film's long\n  类型 INTEGER, -- Type\n  拍摄国家 VARCHAR(50), -- Shooting Country\n  排名 VARCHAR(50), -- Rank\n  影评数 INTEGER, -- Film reviews\n  评分 INTEGER, -- Rating\n);\nCREATE TABLE 影院 (\n  词条id INTEGER PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  地址 VARCHAR(50), -- Address\n  会员费 VARCHAR(50), -- Membership fees\n  影厅数 INTEGER, -- Number of cinemas\n  评分 INTEGER, -- Rating\n);\nCREATE TABLE 电影上映 (\n  电影id INTEGER PRIMARY KEY, -- Film id\n  影院id INTEGER, -- ♪ The cinema ♪ ♪ ♪ The cinema ♪ ♪ ♪ the cinema ♪ ♪ ♪ ♪ the cinema ♪ ♪ ♪ ♪ the cinema ♪ ♪ ♪ ♪ ♪ ♪ ♪ the cinema ♪ ♪ ♪ ♪ ♪ the cinema ♪ ♪ ♪ ♪ the cinema ♪ ♪ ♪ ♪ ♪ the cinema ♪ ♪ ♪ ♪ ♪\n  播放日期 INTEGER, -- Play date\n  播放时间 DATETIME, -- Playtime\n  票价 DATETIME, -- Tickets\n  会员票价 INTEGER, -- Member fare\n  余票 INTEGER, -- The rest of the tickets\n);\n-- 电影上映.电影id can be joined with 电影.电影\n-- 电影上映.影院id can be joined with 影院.影院", "columns_en": {"词条id": "Phrase_id", "名称": "Name", "片长": "The_film's_long", "类型": "Type", "拍摄国家": "Shooting_Country", "排名": "Rank", "影评数": "Film_reviews", "评分": "Rating", "地址": "Address", "会员费": "Membership_fees", "影厅数": "Number_of_cinemas", "电影id": "Film_id", "影院id": "♪_The_cinema_♪_♪_♪_The_cinema_♪_♪_♪_the_cinema_♪_♪_♪_♪_the_cinema_♪_♪_♪_♪_the_cinema_♪_♪_♪_♪_♪_♪_♪_the_cinema_♪_♪_♪_♪_♪_the_cinema_♪_♪_♪_♪_the_cinema_♪_♪_♪_♪_♪_the_cinema_♪_♪_♪_♪_♪", "播放日期": "Play_date", "播放时间": "Playtime", "票价": "Tickets", "会员票价": "Member_fare", "余票": "The_rest_of_the_tickets"}, "table_en": {"电影": "Film", "影院": "The_cinema", "电影上映": "It's_on_film"}}, "公司招聘": {"sqlite": "CREATE TABLE 公司 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  所在城市 VARCHAR(50), -- It's in the city\n  是否上市 VARCHAR(50), -- Is it on the market?\n);\nCREATE TABLE 招聘岗位 (\n  词条id BINARY PRIMARY KEY, -- Phrase id\n  岗位名称 INTEGER, -- Name of post\n  学历要求 VARCHAR(50), -- Educational requirements\n  职责 VARCHAR(50), -- Duties\n  工作年限最低要求 VARCHAR(50), -- Minimum requirements for length of service\n  年龄最低限 INTEGER, -- Minimum age\n  年龄最大限 INTEGER, -- Maximum age\n);\nCREATE TABLE 公司招聘计划 (\n  公司id INTEGER PRIMARY KEY, -- Companyid\n  招聘岗位id INTEGER, -- Recruited positiond\n  基本月薪 INTEGER, -- Monthly base salary\n  发放月数 INTEGER, -- Number of months issued\n  浮动幅度 INTEGER, -- Float range\n  招聘人数 INTEGER, -- Number of recruits\n);\n-- 公司招聘计划.招聘岗位id can be joined with 招聘岗位.招聘岗位\n-- 公司招聘计划.公司id can be joined with 公司.公司", "columns_en": {"词条id": "Phrase_id", "名称": "Name", "所在城市": "It's_in_the_city", "是否上市": "Is_it_on_the_market?", "岗位名称": "Name_of_post", "学历要求": "Educational_requirements", "职责": "Duties", "工作年限最低要求": "Minimum_requirements_for_length_of_service", "年龄最低限": "Minimum_age", "年龄最大限": "Maximum_age", "公司id": "Companyid", "招聘岗位id": "Recruited_positiond", "基本月薪": "Monthly_base_salary", "发放月数": "Number_of_months_issued", "浮动幅度": "Float_range", "招聘人数": "Number_of_recruits"}, "table_en": {"公司": "Company", "招聘岗位": "Recruitment_posts", "公司招聘计划": "Corporate_Recruitment_Scheme"}}, "世界河流": {"sqlite": "CREATE TABLE 河流 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  全长 VARCHAR(50), -- Long and long\n  流域面积 INTEGER, -- Watershed area\n  发源地 INTEGER, -- Origin\n  所属水系 VARCHAR(50), -- Water system\n  所属国家 VARCHAR(50), -- Country of nationality\n  所属洲 VARCHAR(50), -- The continent to which they belong\n  流域国家数 VARCHAR(50), -- Number of basin countries\n);\nCREATE TABLE 城市 (\n  词条id INTEGER PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  所属国家 VARCHAR(50), -- Country of nationality\n);\nCREATE TABLE 河流流经的城市 (\n  河流id VARCHAR(50) PRIMARY KEY, -- Riverid\n  城市id INTEGER, -- Urban id\n);\nCREATE TABLE 河流支流 (\n  河流id INTEGER PRIMARY KEY, -- Riverid\n  所属河流id INTEGER, -- ♪ The river that belongs to ♪ ♪ ♪ the river ♪ ♪ ♪ ♪ the river ♪ ♪ ♪ ♪ ♪ ♪ the river ♪ ♪ ♪ ♪ ♪ ♪ ♪ ♪ ♪ the river ♪ ♪ ♪ ♪ ♪ ♪ ♪ ♪ ♪ the river ♪ ♪ ♪ ♪ ♪ ♪ ♪ ♪ ♪ the river ♪ ♪ ♪ ♪ ♪ ♪ the river ♪ ♪ ♪ ♪ ♪ ♪ ♪ the river ♪ ♪ ♪ ♪ ♪ ♪ the river ♪ ♪ ♪ ♪ ♪ ♪\n);\n-- 河流支流.河流id can be joined with 河流.河流\n-- 河流流经的城市.城市id can be joined with 城市.城市\n-- 河流流经的城市.河流id can be joined with 河流.河流\n-- 河流支流.所属河流id can be joined with 河流.河流", "columns_en": {"词条id": "Phrase_id", "名称": "Name", "全长": "Long_and_long", "流域面积": "Watershed_area", "发源地": "Origin", "所属水系": "Water_system", "所属国家": "Country_of_nationality", "所属洲": "The_continent_to_which_they_belong", "流域国家数": "Number_of_basin_countries", "河流id": "Riverid", "城市id": "Urban_id", "所属河流id": "♪_The_river_that_belongs_to_♪_♪_♪_the_river_♪_♪_♪_♪_the_river_♪_♪_♪_♪_♪_♪_the_river_♪_♪_♪_♪_♪_♪_♪_♪_♪_the_river_♪_♪_♪_♪_♪_♪_♪_♪_♪_the_river_♪_♪_♪_♪_♪_♪_♪_♪_♪_the_river_♪_♪_♪_♪_♪_♪_the_river_♪_♪_♪_♪_♪_♪_♪_the_river_♪_♪_♪_♪_♪_♪_the_river_♪_♪_♪_♪_♪_♪"}, "table_en": {"河流": "River", "城市": "Urban", "河流流经的城市": "The_city_through_which_the_rivers_flow", "河流支流": "River_tributaries"}}, "音乐金曲奖": {"sqlite": "CREATE TABLE 各届金曲奖 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  年份 VARCHAR(50), -- Year\n  奖项数量 DATETIME, -- Number of awards\n  主持人 INTEGER, -- Moderator\n  参赛作品数量 VARCHAR(50), -- Number of entries\n  入围作品数量 INTEGER, -- Number of enclosed works\n);\nCREATE TABLE 歌手 (\n  词条id INTEGER PRIMARY KEY, -- Phrase id\n  姓名 INTEGER, -- Name\n  性别 VARCHAR(50), -- Gender\n  出生地 VARCHAR(50), -- Place of birth\n  专辑数量 VARCHAR(50), -- Number of albums\n  歌曲数量 INTEGER, -- Number of songs\n  演唱会总场次 INTEGER, -- Main session of the concert\n  粉丝总数 INTEGER, -- Total number of fans\n  红粉数量 INTEGER, -- Number of pink powders\n);\nCREATE TABLE 歌手签约唱片公司 (\n  歌手id INTEGER PRIMARY KEY, -- Singer id\n  唱片公司 INTEGER, -- The record company\n  签约时间 VARCHAR(50), -- Date of signature\n);\nCREATE TABLE 金曲奖提名名单 (\n  奖届id DATETIME PRIMARY KEY, -- Award id\n  奖项名称 INTEGER, -- Name of award\n  提名歌手id VARCHAR(50), -- Nominee singer id\n  提名作品 INTEGER, -- Nomination of works\n);\nCREATE TABLE 金曲奖获奖名单 (\n  奖届id VARCHAR(50) PRIMARY KEY, -- Award id\n  奖项名称 INTEGER, -- Name of award\n  获奖歌手id VARCHAR(50), -- Prize-winning singer id\n  歌手唱片公司 INTEGER, -- Singer Records\n);\n-- 金曲奖提名名单.奖届id can be joined with 各届金曲奖.各届金曲奖\n-- 歌手签约唱片公司.歌手id can be joined with 歌手.歌手\n-- 金曲奖获奖名单.奖届id can be joined with 各届金曲奖.各届金曲奖\n-- 金曲奖提名名单.提名歌手id can be joined with 歌手.歌手\n-- 金曲奖获奖名单.获奖歌手id can be joined with 歌手.歌手", "columns_en": {"词条id": "Phrase_id", "名称": "Name", "年份": "Year", "奖项数量": "Number_of_awards", "主持人": "Moderator", "参赛作品数量": "Number_of_entries", "入围作品数量": "Number_of_enclosed_works", "姓名": "Name", "性别": "Gender", "出生地": "Place_of_birth", "专辑数量": "Number_of_albums", "歌曲数量": "Number_of_songs", "演唱会总场次": "Main_session_of_the_concert", "粉丝总数": "Total_number_of_fans", "红粉数量": "Number_of_pink_powders", "歌手id": "Singer_id", "唱片公司": "The_record_company", "签约时间": "Date_of_signature", "奖届id": "Award_id", "奖项名称": "Name_of_award", "提名歌手id": "Nominee_singer_id", "提名作品": "Nomination_of_works", "获奖歌手id": "Prize-winning_singer_id", "歌手唱片公司": "Singer_Records"}, "table_en": {"各届金曲奖": "Tribute_prizes", "歌手": "Singer", "歌手签约唱片公司": "Singer_signing_record_company", "金曲奖提名名单": "List_of_nominations_for_the_Golden_Tribune_Award", "金曲奖获奖名单": "List_of_prizes_for_the_Golden_Collegiate"}}, "房产公司": {"sqlite": "CREATE TABLE 地产集团 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  位于城市 VARCHAR(50), -- It's in the city\n  所属省份 VARCHAR(50), -- Provinces to which they belong\n  年销售额 VARCHAR(50), -- Annual sales\n  销售额同比增长 INTEGER, -- Growth in sales on a year-on-year basis\n  销售额市场占比 INTEGER, -- Market share of sales\n  商品房销售面积 INTEGER, -- Area of sale of merchandise rooms\n  销售面积同比增长 INTEGER, -- Increase in sales area per year\n  销售面积 INTEGER, -- Area of sale\n  市场占比 INTEGER, -- Market share\n);\nCREATE TABLE 2019年房地产企业500强 (\n  集团id INTEGER PRIMARY KEY, -- Groupid\n  总排名 INTEGER, -- Total ranking\n  发展潜力排名 INTEGER, -- Development potential ranking\n  成长速度排名 INTEGER, -- Growing speed ranking\n  综合发展排名 INTEGER, -- Integrated development ranking\n  创新能力排名 INTEGER, -- Innovability ranking\n);\nCREATE TABLE 2019年房地产企业运营100强 (\n  集团id INTEGER PRIMARY KEY, -- Groupid\n  运营效率排名 INTEGER, -- Performance efficiency ranking\n  区域运营排名 INTEGER, -- Regional operational rankings\n  稳健运营排名 INTEGER, -- Robust Operations Rating\n  商业地产运营排名 INTEGER, -- Rank of commercial real estate operations\n  社区文化运营排名 INTEGER, -- Community cultural operations ranking\n  长租公寓运营排名 INTEGER, -- Long-rent apartment operations ranking\n);\nCREATE TABLE 房地产各城市排名 (\n  集团id INTEGER PRIMARY KEY, -- Groupid\n  城市 INTEGER, -- Urban\n  排名 VARCHAR(50), -- Rank\n  销售面积 INTEGER, -- Area of sale\n  销售额 INTEGER, -- Sales\n);\nCREATE TABLE 房产公司典型项目 (\n  项目名称 INTEGER PRIMARY KEY, -- Title of the project\n  所属集团id VARCHAR(50), -- Group to which id\n  位于城市 INTEGER, -- It's in the city\n  占地面积 VARCHAR(50), -- Area of land area\n  总户数 INTEGER, -- Total number of households\n  户型面积 INTEGER, -- Household size\n);\n-- 房地产各城市排名.集团id can be joined with 地产集团.地产集团\n-- 房产公司典型项目.所属集团id can be joined with 地产集团.地产集团\n-- 2019年房地产企业500强.集团id can be joined with 地产集团.地产集团\n-- 2019年房地产企业运营100强.集团id can be joined with 地产集团.地产集团", "columns_en": {"词条id": "Phrase_id", "名称": "Name", "位于城市": "It's_in_the_city", "所属省份": "Provinces_to_which_they_belong", "年销售额": "Annual_sales", "销售额同比增长": "Growth_in_sales_on_a_year-on-year_basis", "销售额市场占比": "Market_share_of_sales", "商品房销售面积": "Area_of_sale_of_merchandise_rooms", "销售面积同比增长": "Increase_in_sales_area_per_year", "销售面积": "Area_of_sale", "市场占比": "Market_share", "集团id": "Groupid", "总排名": "Total_ranking", "发展潜力排名": "Development_potential_ranking", "成长速度排名": "Growing_speed_ranking", "综合发展排名": "Integrated_development_ranking", "创新能力排名": "Innovability_ranking", "运营效率排名": "Performance_efficiency_ranking", "区域运营排名": "Regional_operational_rankings", "稳健运营排名": "Robust_Operations_Rating", "商业地产运营排名": "Rank_of_commercial_real_estate_operations", "社区文化运营排名": "Community_cultural_operations_ranking", "长租公寓运营排名": "Long-rent_apartment_operations_ranking", "城市": "Urban", "排名": "Rank", "销售额": "Sales", "项目名称": "Title_of_the_project", "所属集团id": "Group_to_which_id", "占地面积": "Area_of_land_area", "总户数": "Total_number_of_households", "户型面积": "Household_size"}, "table_en": {"地产集团": "Property_Group", "2019年房地产企业500强": "In_2019__real_estate_companies_were_500_strong", "2019年房地产企业运营100强": "In_2019__real_estate_operated_at_100%", "房地产各城市排名": "Real_estate_rankings_by_city", "房产公司典型项目": "Typical_real_estate_company_projects"}}, "地图软件": {"sqlite": "CREATE TABLE 地图软件 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  上线时间 VARCHAR(50), -- Online time\n  运营公司 DATETIME, -- Operating company\n  覆盖国家和地区数量 VARCHAR(50), -- Number of countries and areas covered\n  评分 INTEGER, -- Rating\n);\nCREATE TABLE 地图软件支持的平台 (\n  软件id INTEGER PRIMARY KEY, -- Softwareid\n  平台 INTEGER, -- Platform\n  首次支持版本号 VARCHAR(50), -- First-time support for version number\n  发布时间 INTEGER, -- Release Time\n);\nCREATE TABLE 地图软件支持的功能 (\n  软件id DATETIME PRIMARY KEY, -- Softwareid\n  功能 INTEGER, -- Functions\n  是否创新亮点 VARCHAR(50), -- Whether or not to innovate bright spots\n  首次支持版本号 BINARY, -- First-time support for version number\n  发布时间 INTEGER, -- Release Time\n);\nCREATE TABLE 软件支持的打车APP (\n  软件id DATETIME PRIMARY KEY, -- Softwareid\n  打车app INTEGER, -- Taxi app\n  车型数量 VARCHAR(50), -- Number of models\n  日均单数 INTEGER, -- Average number of days\n);\n-- 地图软件支持的功能.软件id can be joined with 地图软件.地图软件\n-- 地图软件支持的平台.软件id can be joined with 地图软件.地图软件\n-- 软件支持的打车APP.软件id can be joined with 地图软件.地图软件", "columns_en": {"词条id": "Phrase_id", "名称": "Name", "上线时间": "Online_time", "运营公司": "Operating_company", "覆盖国家和地区数量": "Number_of_countries_and_areas_covered", "评分": "Rating", "软件id": "Softwareid", "平台": "Platform", "首次支持版本号": "First-time_support_for_version_number", "发布时间": "Release_Time", "功能": "Functions", "是否创新亮点": "Whether_or_not_to_innovate_bright_spots", "打车app": "Taxi_app", "车型数量": "Number_of_models", "日均单数": "Average_number_of_days"}, "table_en": {"地图软件": "Map_software", "地图软件支持的平台": "Map_software-supported_platforms", "地图软件支持的功能": "Map_software-supported_functionality", "软件支持的打车APP": "Software-supported_taxiing_APP"}}, "中国演员和电视剧": {"sqlite": "CREATE TABLE 演员 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  姓名 INTEGER, -- Name\n  民族 VARCHAR(50), -- Nationalities\n  星座 VARCHAR(50), -- Constellation\n  血型 VARCHAR(50), -- Blood type\n  身高 VARCHAR(50), -- Height\n  体重 INTEGER, -- body weight\n  出生地 INTEGER, -- Place of birth\n  出生日期 VARCHAR(50), -- Date of birth\n  毕业院校 DATETIME, -- Graduate schools\n);\nCREATE TABLE 导演 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  姓名 INTEGER, -- Name\n  出生地 VARCHAR(50), -- Place of birth\n  出生日期 VARCHAR(50), -- Date of birth\n  毕业院校 DATETIME, -- Graduate schools\n);\nCREATE TABLE 角色 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  姓名 INTEGER, -- Name\n  饰演演员id VARCHAR(50), -- Actor id\n  配音演员id INTEGER, -- Musical actor id\n  出场作品 INTEGER, -- It's an exhibition\n);\nCREATE TABLE 电视剧 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  剧名 INTEGER, -- The title of the play\n  导演 VARCHAR(50), -- Director\n  编剧 VARCHAR(50), -- A screenwriter\n  制片人 VARCHAR(50), -- Producer\n  集数 VARCHAR(50), -- Collections\n  类型 INTEGER, -- Type\n);\nCREATE TABLE 演员及导演作品 (\n  演员id VARCHAR(50) PRIMARY KEY, -- Actor id\n  导演id INTEGER, -- Director id\n  合作作品id INTEGER, -- Co-author id\n  作品出品时间 INTEGER, -- Time of production\n);\nCREATE TABLE 演员与导演的合作 (\n  演员id DATETIME PRIMARY KEY, -- Actor id\n  导演id INTEGER, -- Director id\n  合作次数 INTEGER, -- Number of cooperations\n);\nCREATE TABLE 演员的作品 (\n  演员id INTEGER PRIMARY KEY, -- Actor id\n  作品id INTEGER, -- Worksid\n  角色类型 INTEGER, -- Role Type\n);\n-- 演员的作品.作品id can be joined with 电视剧.电视剧\n-- 角色.饰演演员id can be joined with 演员.演员\n-- 演员及导演作品.演员id can be joined with 演员.演员\n-- 演员及导演作品.合作作品id can be joined with 电视剧.电视剧\n-- 角色.配音演员id can be joined with 演员.演员\n-- 演员与导演的合作.导演id can be joined with 导演.导演\n-- 演员及导演作品.导演id can be joined with 导演.导演\n-- 演员与导演的合作.演员id can be joined with 演员.演员\n-- 演员的作品.演员id can be joined with 演员.演员", "columns_en": {"词条id": "Phrase_id", "姓名": "Name", "民族": "Nationalities", "星座": "Constellation", "血型": "Blood_type", "身高": "Height", "体重": "body_weight", "出生地": "Place_of_birth", "出生日期": "Date_of_birth", "毕业院校": "Graduate_schools", "饰演演员id": "Actor_id", "配音演员id": "Musical_actor_id", "出场作品": "It's_an_exhibition", "剧名": "The_title_of_the_play", "导演": "Director", "编剧": "A_screenwriter", "制片人": "Producer", "集数": "Collections", "类型": "Type", "演员id": "Actor_id", "导演id": "Director_id", "合作作品id": "Co-author_id", "作品出品时间": "Time_of_production", "合作次数": "Number_of_cooperations", "作品id": "Worksid", "角色类型": "Role_Type"}, "table_en": {"演员": "Actors", "导演": "Director", "角色": "Role", "电视剧": "A_TV_show", "演员及导演作品": "An_actor_and_a_director", "演员与导演的合作": "An_actor's_collaboration_with_a_director", "演员的作品": "An_actor's_work"}}, "奥运会参赛队伍": {"sqlite": "CREATE TABLE 国家 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  所属洲 VARCHAR(50), -- The continent to which they belong\n);\nCREATE TABLE 夏季奥运会 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  举办国家id VARCHAR(50), -- Organization of country id\n  举办城市 INTEGER, -- Host city\n  吉祥物 VARCHAR(50), -- A mascot\n  参赛国家数量 VARCHAR(50), -- Number of countries participating\n  参赛运动员数量 INTEGER, -- Number of athletes participating\n  大项项目数 INTEGER, -- Number of large projects\n  小项项目数 INTEGER, -- Number of small projects\n);\nCREATE TABLE 公司 (\n  词条id INTEGER PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  国家id VARCHAR(50), -- Country id\n);\nCREATE TABLE 2008北京奥运会奖牌榜 (\n  排名 INTEGER PRIMARY KEY, -- Rank\n  国家id INTEGER, -- Country id\n  金牌数 INTEGER, -- Number of gold medals\n  银牌数 INTEGER, -- Number of silver medals\n  铜牌数 INTEGER, -- Number of bronze medals\n  奖牌总数 INTEGER, -- Total number of medals\n);\nCREATE TABLE 奥运会赞助商 (\n  奥运会id INTEGER PRIMARY KEY, -- Olympic id\n  赞助商id INTEGER, -- Sponsorid\n);\n-- 奥运会赞助商.奥运会id can be joined with 夏季奥运会.夏季奥运会\n-- 2008北京奥运会奖牌榜.国家id can be joined with 国家.国家\n-- 夏季奥运会.举办国家id can be joined with 国家.国家\n-- 公司.国家id can be joined with 国家.国家\n-- 奥运会赞助商.赞助商id can be joined with 公司.公司", "columns_en": {"词条id": "Phrase_id", "名称": "Name", "所属洲": "The_continent_to_which_they_belong", "举办国家id": "Organization_of_country_id", "举办城市": "Host_city", "吉祥物": "A_mascot", "参赛国家数量": "Number_of_countries_participating", "参赛运动员数量": "Number_of_athletes_participating", "大项项目数": "Number_of_large_projects", "小项项目数": "Number_of_small_projects", "国家id": "Country_id", "排名": "Rank", "金牌数": "Number_of_gold_medals", "银牌数": "Number_of_silver_medals", "铜牌数": "Number_of_bronze_medals", "奖牌总数": "Total_number_of_medals", "奥运会id": "Olympic_id", "赞助商id": "Sponsorid"}, "table_en": {"国家": "National", "夏季奥运会": "Summer_Olympics", "公司": "Company", "2008北京奥运会奖牌榜": "The_2008_Beijing_Olympics_medals", "奥运会赞助商": "Olympics_sponsors"}}, "酒店": {"sqlite": "CREATE TABLE 酒店集团 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  总部所在省 VARCHAR(50), -- Headquarters is located in the province\n  上级主管部门 VARCHAR(50), -- Superior authorities\n  酒店数量 VARCHAR(50), -- Number of hotels\n  客房数量 INTEGER, -- Number of guest rooms\n  省排名 INTEGER, -- Provincial rankings\n  中国500最具价值品牌排名 INTEGER, -- China’s 500 most valuable brands\n  全球酒店集团300强排名 INTEGER, -- The Global Hotel Group is 300 top rankings\n);\nCREATE TABLE 酒店 (\n  词条id INTEGER PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  酒店地址 VARCHAR(50), -- Hotel address\n  开业时间 VARCHAR(50), -- Opening hours\n  酒店星级 DATETIME, -- Hotel Star Level\n  所属集团id INTEGER, -- Group to which id\n  客房数量 INTEGER, -- Number of guest rooms\n  大厅容纳人数 INTEGER, -- Number of persons accommodated in the lobby\n);\nCREATE TABLE 机场 (\n  词条id INTEGER PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  所属城市 VARCHAR(50), -- City to which you belong\n  类型 VARCHAR(50), -- Type\n);\nCREATE TABLE 火车站 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  所属城市 VARCHAR(50), -- City to which you belong\n  类型 VARCHAR(50), -- Type\n);\nCREATE TABLE 酒店距离机场路程 (\n  酒店id VARCHAR(50) PRIMARY KEY, -- Hotel id\n  机场id INTEGER, -- Airportd\n  距离 INTEGER, -- Distance\n  打车费用 INTEGER, -- Taxi fare\n  高峰用时 INTEGER, -- Peak Time\n  平时用时 INTEGER, -- Organisation\n);\nCREATE TABLE 酒店距离火车站路程 (\n  酒店id INTEGER PRIMARY KEY, -- Hotel id\n  火车站id INTEGER, -- Train stationid\n  公交线路数 INTEGER, -- Number of bus lines\n  地铁线路数 INTEGER, -- Number of metro lines\n  地铁用时 INTEGER, -- When you're on the subway\n);\nCREATE TABLE 酒店活动费用 (\n  酒店id INTEGER PRIMARY KEY, -- Hotel id\n  活动类型 INTEGER, -- Type of activity\n  人数规模 VARCHAR(50), -- Size of population\n  费用 INTEGER, -- Costs\n);\n-- 酒店距离机场路程.机场id can be joined with 机场.机场\n-- 酒店距离火车站路程.酒店id can be joined with 酒店.酒店\n-- 酒店距离机场路程.酒店id can be joined with 酒店.酒店\n-- 酒店活动费用.酒店id can be joined with 酒店.酒店\n-- 酒店.所属集团id can be joined with 酒店集团.酒店集团\n-- 酒店距离火车站路程.火车站id can be joined with 火车站.火车站", "columns_en": {"词条id": "Phrase_id", "名称": "Name", "总部所在省": "Headquarters_is_located_in_the_province", "上级主管部门": "Superior_authorities", "酒店数量": "Number_of_hotels", "客房数量": "Number_of_guest_rooms", "省排名": "Provincial_rankings", "中国500最具价值品牌排名": "China’s_500_most_valuable_brands", "全球酒店集团300强排名": "The_Global_Hotel_Group_is_300_top_rankings", "酒店地址": "Hotel_address", "开业时间": "Opening_hours", "酒店星级": "Hotel_Star_Level", "所属集团id": "Group_to_which_id", "大厅容纳人数": "Number_of_persons_accommodated_in_the_lobby", "所属城市": "City_to_which_you_belong", "类型": "Type", "酒店id": "Hotel_id", "机场id": "Airportd", "距离": "Distance", "打车费用": "Taxi_fare", "高峰用时": "Peak_Time", "平时用时": "Organisation", "火车站id": "Train_stationid", "公交线路数": "Number_of_bus_lines", "地铁线路数": "Number_of_metro_lines", "地铁用时": "When_you're_on_the_subway", "活动类型": "Type_of_activity", "人数规模": "Size_of_population", "费用": "Costs"}, "table_en": {"酒店集团": "Hotel_Group", "酒店": "Hotel", "机场": "Airport", "火车站": "Train_station", "酒店距离机场路程": "The_hotel's_a_long_way_from_the_airport", "酒店距离火车站路程": "The_hotel's_a_long_way_from_the_train_station", "酒店活动费用": "Hotel_activity_costs"}}, "世博会/园博会": {"sqlite": "CREATE TABLE 世博会 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  时间 VARCHAR(50), -- Time\n  地点 DATETIME, -- Location\n  种类 VARCHAR(50), -- Category\n  举办天数 VARCHAR(50), -- Number of days held\n  主题 INTEGER, -- Theme\n  参展方数量 VARCHAR(50), -- Number of exhibitors\n  投资成本 INTEGER, -- Investment costs\n  会场面积 INTEGER, -- Space area\n  参观人数 INTEGER, -- Number of visitors\n  单日客流 INTEGER, -- One-day passenger stream\n);\nCREATE TABLE 世博会场馆 (\n  世博会id INTEGER PRIMARY KEY, -- Episode id\n  场馆 INTEGER, -- The courtyard\n  场馆所属国家 VARCHAR(50), -- Country to which the pavilion belongs\n  排名 VARCHAR(50), -- Rank\n  占比面积 INTEGER, -- Proportion area\n  参观人数 INTEGER, -- Number of visitors\n);\nCREATE TABLE 世界园博会 (\n  词条id INTEGER PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  时间 VARCHAR(50), -- Time\n  地点 DATETIME, -- Location\n  级别 VARCHAR(50), -- Level\n  会期 VARCHAR(50), -- Duration\n  主题 INTEGER, -- Theme\n  场馆数量 VARCHAR(50), -- Number of premises\n  会场面积 INTEGER, -- Space area\n  参观人数 INTEGER, -- Number of visitors\n  票价 INTEGER, -- Tickets\n);\nCREATE TABLE 中国花卉园博会 (\n  时间 INTEGER PRIMARY KEY, -- Time\n  届数 DATETIME, -- Number of sessions\n  举办城市 INTEGER, -- Host city\n  地点 VARCHAR(50), -- Location\n  展园数量 VARCHAR(50), -- Number of parks\n  参与机构数量 INTEGER, -- Number of participating institutions\n);\n-- 世博会场馆.世博会id can be joined with 世博会.世博会", "columns_en": {"词条id": "Phrase_id", "名称": "Name", "时间": "Time", "地点": "Location", "种类": "Category", "举办天数": "Number_of_days_held", "主题": "Theme", "参展方数量": "Number_of_exhibitors", "投资成本": "Investment_costs", "会场面积": "Space_area", "参观人数": "Number_of_visitors", "单日客流": "One-day_passenger_stream", "世博会id": "Episode_id", "场馆": "The_courtyard", "场馆所属国家": "Country_to_which_the_pavilion_belongs", "排名": "Rank", "占比面积": "Proportion_area", "级别": "Level", "会期": "Duration", "场馆数量": "Number_of_premises", "票价": "Tickets", "届数": "Number_of_sessions", "举办城市": "Host_city", "展园数量": "Number_of_parks", "参与机构数量": "Number_of_participating_institutions"}, "table_en": {"世博会": "Expo", "世博会场馆": "The_Expo", "世界园博会": "World_Parks_Fair", "中国花卉园博会": "China_Flower_Gardens_Fair"}}, "二手车": {"sqlite": "CREATE TABLE 车型 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  上牌时间 VARCHAR(50), -- Card Time\n  上牌地 DATETIME, -- Up on the deck\n  里程数 VARCHAR(50), -- Miles\n  排量 INTEGER, -- Queue\n  过户记录 INTEGER, -- Checking records\n  所属公司 INTEGER, -- Company to which it belongs\n);\nCREATE TABLE 车型平台售卖 (\n  车型id VARCHAR(50) PRIMARY KEY, -- Type of vehicle id\n  平台 INTEGER, -- Platform\n  售价 VARCHAR(50), -- Price of sale\n  服务费比例 INTEGER, -- Proportion of cost of services\n);\n-- 车型平台售卖.车型id can be joined with 车型.车型", "columns_en": {"词条id": "Phrase_id", "名称": "Name", "上牌时间": "Card_Time", "上牌地": "Up_on_the_deck", "里程数": "Miles", "排量": "Queue", "过户记录": "Checking_records", "所属公司": "Company_to_which_it_belongs", "车型id": "Type_of_vehicle_id", "平台": "Platform", "售价": "Price_of_sale", "服务费比例": "Proportion_of_cost_of_services"}, "table_en": {"车型": "Type_of_vehicle", "车型平台售卖": "Automotive_platform_sales"}}, "在线英语教学": {"sqlite": "CREATE TABLE 平台 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  成立年数 VARCHAR(50), -- Number of years established\n  教师数量 INTEGER, -- Number of teachers\n  课程体系分级 INTEGER, -- Classification of the curriculum system\n);\nCREATE TABLE 青少年课程 (\n  平台id INTEGER PRIMARY KEY, -- Platformid\n  适合群体 INTEGER, -- Appropriate for groups\n  一节课时间 VARCHAR(50), -- It's a class time\n  课时数 INTEGER, -- Number of hours taught\n  主题数 INTEGER, -- Number of themes\n  词汇量 INTEGER, -- Glossary\n);\nCREATE TABLE 教师 (\n  平台id INTEGER PRIMARY KEY, -- Platformid\n  外教来自国家 INTEGER, -- Foreign education comes from the state\n  外教数量 VARCHAR(50), -- Number of foreign students\n  教师职业占比 INTEGER, -- Teacher career ratio\n);\nCREATE TABLE 学费 (\n  平台id INTEGER PRIMARY KEY, -- Platformid\n  课时数 INTEGER, -- Number of hours taught\n  原价 INTEGER, -- Original price\n  折扣 INTEGER, -- Discount\n);\n-- 学费.平台id can be joined with 平台.平台\n-- 青少年课程.平台id can be joined with 平台.平台\n-- 教师.平台id can be joined with 平台.平台", "columns_en": {"词条id": "Phrase_id", "名称": "Name", "成立年数": "Number_of_years_established", "教师数量": "Number_of_teachers", "课程体系分级": "Classification_of_the_curriculum_system", "平台id": "Platformid", "适合群体": "Appropriate_for_groups", "一节课时间": "It's_a_class_time", "课时数": "Number_of_hours_taught", "主题数": "Number_of_themes", "词汇量": "Glossary", "外教来自国家": "Foreign_education_comes_from_the_state", "外教数量": "Number_of_foreign_students", "教师职业占比": "Teacher_career_ratio", "原价": "Original_price", "折扣": "Discount"}, "table_en": {"平台": "Platform", "青少年课程": "Youth_courses", "教师": "Teachers", "学费": "School_fees"}}, "中国城市的企业": {"sqlite": "CREATE TABLE 省份 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  500强企业数量 VARCHAR(50), -- Number of top 500 enterprises\n  总营收(亿元) INTEGER, -- Total revenue (millions of yuan)\n  总利润(亿元) INTEGER, -- Total profits (millions of yuan)\n);\nCREATE TABLE 企业 (\n  词条id INTEGER PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  省份id VARCHAR(50), -- Province id\n  成立时间 INTEGER, --  Other Organiser\n  公司类型 DATETIME, -- Type of company\n  领域分类 VARCHAR(50), -- Classification of areas\n  年营业额 VARCHAR(50), -- Annual turnover\n  员工数 INTEGER, -- Number of employees\n  注册资本 INTEGER, -- Registered capital\n  500强排名 INTEGER, -- 500 rankings\n);\n-- 企业.省份id can be joined with 省份.省份", "columns_en": {"词条id": "Phrase_id", "名称": "Name", "500强企业数量": "Number_of_top_500_enterprises", "总营收(亿元)": "Total_revenue_(millions_of_yuan)", "总利润(亿元)": "Total_profits_(millions_of_yuan)", "省份id": "Province_id", "成立时间": "_Other_Organiser", "公司类型": "Type_of_company", "领域分类": "Classification_of_areas", "年营业额": "Annual_turnover", "员工数": "Number_of_employees", "注册资本": "Registered_capital", "500强排名": "500_rankings"}, "table_en": {"省份": "Province", "企业": "Enterprise"}}, "汽车": {"sqlite": "CREATE TABLE 汽车公司 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  所属国家 VARCHAR(50), -- Country of nationality\n  经营范围 VARCHAR(50), -- Scope of operation\n  母公司 VARCHAR(50), -- The parent company\n  主要车系数量 VARCHAR(50), -- Number of major departments\n  世界500强排名 INTEGER, -- The world's top 500\n  主要荣誉 INTEGER, -- Main honours\n);\nCREATE TABLE 汽车公司中国事业部 (\n  公司id VARCHAR(50) PRIMARY KEY, -- Companyid\n  中国事业部名称 INTEGER, -- Name of Ministry of Industry of China\n  位于城市 VARCHAR(50), -- It's in the city\n  所属省份 VARCHAR(50), -- Provinces to which they belong\n  总投资金额 VARCHAR(50), -- Total amount invested\n  负责产品数量 INTEGER, -- Number of products in charge\n  主要产品 INTEGER, -- Main products\n);\nCREATE TABLE 汽车产品 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  推出时间 VARCHAR(50), -- Launch Time\n  车型 DATETIME, -- Type of vehicle\n  车款数量 VARCHAR(50), -- Number of vehicles\n  保值率 INTEGER, -- Persistence rate\n  生产公司id INTEGER, -- Production companiesd\n);\nCREATE TABLE 车型 (\n  词条id INTEGER PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  排量 VARCHAR(50), -- Queue\n  油耗 INTEGER, -- Fuel consumption\n  售价 INTEGER, -- Price of sale\n  所属产品id INTEGER, -- Product to which id\n  关注指数 INTEGER, -- Concern index\n  累计销量 INTEGER, -- Cumulative sales\n  安全排行 INTEGER, -- Secure Lines\n  性能排行 INTEGER, -- Performance Row\n  油耗排行 INTEGER, -- Gas consumption rows\n  空间排行 INTEGER, -- Space Row\n  舒适排行 INTEGER, -- Comfortable line\n);\n-- 车型.所属产品id can be joined with 汽车产品.汽车产品\n-- 汽车公司中国事业部.公司id can be joined with 汽车公司.汽车公司\n-- 汽车产品.生产公司id can be joined with 汽车公司.汽车公司", "columns_en": {"词条id": "Phrase_id", "名称": "Name", "所属国家": "Country_of_nationality", "经营范围": "Scope_of_operation", "母公司": "The_parent_company", "主要车系数量": "Number_of_major_departments", "世界500强排名": "The_world's_top_500", "主要荣誉": "Main_honours", "公司id": "Companyid", "中国事业部名称": "Name_of_Ministry_of_Industry_of_China", "位于城市": "It's_in_the_city", "所属省份": "Provinces_to_which_they_belong", "总投资金额": "Total_amount_invested", "负责产品数量": "Number_of_products_in_charge", "主要产品": "Main_products", "推出时间": "Launch_Time", "车型": "Type_of_vehicle", "车款数量": "Number_of_vehicles", "保值率": "Persistence_rate", "生产公司id": "Production_companiesd", "排量": "Queue", "油耗": "Fuel_consumption", "售价": "Price_of_sale", "所属产品id": "Product_to_which_id", "关注指数": "Concern_index", "累计销量": "Cumulative_sales", "安全排行": "Secure_Lines", "性能排行": "Performance_Row", "油耗排行": "Gas_consumption_rows", "空间排行": "Space_Row", "舒适排行": "Comfortable_line"}, "table_en": {"汽车公司": "Automotive_company", "汽车公司中国事业部": "China_Enterprise__Automotive_Company", "汽车产品": "Automobile_products", "车型": "Type_of_vehicle"}}, "相亲软件": {"sqlite": "CREATE TABLE 相亲软件 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  是否实名认证 VARCHAR(50), -- Authentication of real name\n  是否资产认证 BINARY, -- Certification of assets\n  是否跨城 BINARY, -- Are you crossing the city?\n  经营年限 BINARY, -- Business life\n  注册会员数 INTEGER, -- Number of registered members\n);\nCREATE TABLE 相亲软件会费 (\n  软件id INTEGER PRIMARY KEY, -- Softwareid\n  会员类型 INTEGER, -- Type of membership\n  会费 VARCHAR(50), -- Contributions\n);\nCREATE TABLE 会员年龄分布 (\n  软件id INTEGER PRIMARY KEY, -- Softwareid\n  会员性别 INTEGER, -- Gender of membership\n  25~30岁会员数量 VARCHAR(50), -- Number of members aged 25-30\n  31~35岁会员数量 INTEGER, -- Number of members aged 31 to 35\n  36~40岁会员数量 INTEGER, -- Number of members aged 36-40\n  41~45岁会员数量 INTEGER, -- Number of members aged 41-45\n  45~55岁会员数量 INTEGER, -- Number of members aged 45-55\n);\nCREATE TABLE 会员城市分布 (\n  软件id INTEGER PRIMARY KEY, -- Softwareid\n  会员性别 INTEGER, -- Gender of membership\n  城市 VARCHAR(50), -- Urban\n  会员数量 VARCHAR(50), -- Number of members\n  成功率 INTEGER, -- Success rate\n);\n-- 会员年龄分布.软件id can be joined with 相亲软件.相亲软件\n-- 相亲软件会费.软件id can be joined with 相亲软件.相亲软件\n-- 会员城市分布.软件id can be joined with 相亲软件.相亲软件", "columns_en": {"词条id": "Phrase_id", "名称": "Name", "是否实名认证": "Authentication_of_real_name", "是否资产认证": "Certification_of_assets", "是否跨城": "Are_you_crossing_the_city?", "经营年限": "Business_life", "注册会员数": "Number_of_registered_members", "软件id": "Softwareid", "会员类型": "Type_of_membership", "会费": "Contributions", "会员性别": "Gender_of_membership", "25~30岁会员数量": "Number_of_members_aged_25-30", "31~35岁会员数量": "Number_of_members_aged_31_to_35", "36~40岁会员数量": "Number_of_members_aged_36-40", "41~45岁会员数量": "Number_of_members_aged_41-45", "45~55岁会员数量": "Number_of_members_aged_45-55", "城市": "Urban", "会员数量": "Number_of_members", "成功率": "Success_rate"}, "table_en": {"相亲软件": "Accompaniment_software", "相亲软件会费": "Accompaniment_software_dues", "会员年龄分布": "Member_age_distribution", "会员城市分布": "Urban_distribution_of_members"}}, "城市外资吸引力": {"sqlite": "CREATE TABLE 城市 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  所属省份 VARCHAR(50), -- Provinces to which they belong\n  行政级别 VARCHAR(50), -- Administrative level\n  车牌代码 VARCHAR(50), -- Car plate code\n);\nCREATE TABLE 城市城建 (\n  年份 VARCHAR(50) PRIMARY KEY, -- Year\n  城市id DATETIME, -- Urban id\n  市区面积 INTEGER, -- Urban area\n  建成区面积 INTEGER, -- Size of area constructed\n  城市建设用地面积 INTEGER, -- Land area for urban construction\n  本年征地面积 INTEGER, -- Land area in the current year\n  建成区排名 INTEGER, -- Number of built-up areas\n);\nCREATE TABLE 城市外资吸引力 (\n  年份 INTEGER PRIMARY KEY, -- Year\n  城市id DATETIME, -- Urban id\n  工业总产值(亿) INTEGER, -- Gross industrial product (millions)\n  内资(亿) INTEGER, -- Domestic resources (millions)\n  外资(亿) INTEGER, -- Foreign capital (billions)\n  省内排名 INTEGER, -- Intra-provincial rankings\n);\nCREATE TABLE 城市实际利用外资 (\n  年份 INTEGER PRIMARY KEY, -- Year\n  城市id DATETIME, -- Urban id\n  实际利用外资(亿美元) INTEGER, -- Actual utilization of foreign direct investment (US$ billion)\n  同比增速 INTEGER, -- The same speed as before\n);\n-- 城市实际利用外资.城市id can be joined with 城市.城市\n-- 城市外资吸引力.城市id can be joined with 城市.城市\n-- 城市城建.城市id can be joined with 城市.城市", "columns_en": {"词条id": "Phrase_id", "名称": "Name", "所属省份": "Provinces_to_which_they_belong", "行政级别": "Administrative_level", "车牌代码": "Car_plate_code", "年份": "Year", "城市id": "Urban_id", "市区面积": "Urban_area", "建成区面积": "Size_of_area_constructed", "城市建设用地面积": "Land_area_for_urban_construction", "本年征地面积": "Land_area_in_the_current_year", "建成区排名": "Number_of_built-up_areas", "工业总产值(亿)": "Gross_industrial_product_(millions)", "内资(亿)": "Domestic_resources_(millions)", "外资(亿)": "Foreign_capital_(billions)", "省内排名": "Intra-provincial_rankings", "实际利用外资(亿美元)": "Actual_utilization_of_foreign_direct_investment_(US$_billion)", "同比增速": "The_same_speed_as_before"}, "table_en": {"城市": "Urban", "城市城建": "City_building", "城市外资吸引力": "Urban_FDI_attraction", "城市实际利用外资": "Real_use_of_foreign_capital_in_cities"}}, "朝代": {"sqlite": "CREATE TABLE 朝代 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  起始时间 VARCHAR(50), -- Start Time\n  结束时间 DATETIME, -- End Time\n  都城 DATETIME, -- The capital\n  人口数量 VARCHAR(50), -- Number of population\n  国土面积 INTEGER, -- Land area\n);\nCREATE TABLE 皇帝 (\n  词条id INTEGER PRIMARY KEY, -- Phrase id\n  中文名 INTEGER, -- Chinese Name\n  所处朝代id VARCHAR(50), -- ♪ Where the dynasty is id ♪\n  出生时间 INTEGER, -- Date of birth\n  去世时间 DATETIME, -- Time of death\n  主要成就 DATETIME, -- Main achievements\n  年号 VARCHAR(50), -- Year\n);\nCREATE TABLE 各朝代皇帝 (\n  皇帝id VARCHAR(50) PRIMARY KEY, -- Emperor id\n  朝代id INTEGER, -- Dynasty id\n  登基时间 INTEGER, -- Landing time\n  在位时间 DATETIME, --  Other Organiser\n  第几位 INTEGER, -- Number one\n);\nCREATE TABLE 年号 (\n  年号 INTEGER PRIMARY KEY, -- Year\n  朝代id VARCHAR(50), -- Dynasty id\n  上一年号 INTEGER, -- Last year\n  下一年号 VARCHAR(50), -- Next year\n);\nCREATE TABLE 大臣 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  姓名 INTEGER, -- Name\n  所处朝代id VARCHAR(50), -- ♪ Where the dynasty is id ♪\n  出生时间 INTEGER, -- Date of birth\n  去世时间 DATETIME, -- Time of death\n  职业 DATETIME, -- Occupation\n);\nCREATE TABLE 大臣辅佐的皇帝 (\n  大臣id VARCHAR(50) PRIMARY KEY, -- Minister id\n  皇帝id INTEGER, -- Emperor id\n  辅佐时间 INTEGER, -- Auxiliary Time\n);\n-- 大臣辅佐的皇帝.皇帝id can be joined with 皇帝.皇帝\n-- 大臣.所处朝代id can be joined with 朝代.朝代\n-- 各朝代皇帝.皇帝id can be joined with 皇帝.皇帝\n-- 年号.朝代id can be joined with 朝代.朝代\n-- 各朝代皇帝.朝代id can be joined with 朝代.朝代\n-- 皇帝.所处朝代id can be joined with 朝代.朝代\n-- 大臣辅佐的皇帝.大臣id can be joined with 大臣.大臣", "columns_en": {"词条id": "Phrase_id", "名称": "Name", "起始时间": "Start_Time", "结束时间": "End_Time", "都城": "The_capital", "人口数量": "Number_of_population", "国土面积": "Land_area", "中文名": "Chinese_Name", "所处朝代id": "♪_Where_the_dynasty_is_id_♪", "出生时间": "Date_of_birth", "去世时间": "Time_of_death", "主要成就": "Main_achievements", "年号": "Year", "皇帝id": "Emperor_id", "朝代id": "Dynasty_id", "登基时间": "Landing_time", "在位时间": "_Other_Organiser", "第几位": "Number_one", "上一年号": "Last_year", "下一年号": "Next_year", "姓名": "Name", "职业": "Occupation", "大臣id": "Minister_id", "辅佐时间": "Auxiliary_Time"}, "table_en": {"朝代": "Dynasty!", "皇帝": "Emperor", "各朝代皇帝": "The_emperors_of_the_dynasty", "年号": "Year", "大臣": "Minister", "大臣辅佐的皇帝": "The_Emperor_of_the_Secretary_of_State"}}, "电视机": {"sqlite": "CREATE TABLE 电视机品牌 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  所属公司 VARCHAR(50), -- Company to which it belongs\n  国家 VARCHAR(50), -- National\n  市场份额 VARCHAR(50), -- Market share\n);\nCREATE TABLE 电视机型号 (\n  词条id INTEGER PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  产品定位 VARCHAR(50), -- Product location\n  屏幕尺寸 VARCHAR(50), -- Screen Size\n  屏幕比例 INTEGER, -- Screen Scale\n  分辨率 VARCHAR(50), -- Resolution\n  背光灯寿命 INTEGER, -- Backlight lifetime\n  定价 INTEGER, -- Pricing\n  品牌id INTEGER, -- Brandid\n);\nCREATE TABLE 电视机平台售卖 (\n  型号id INTEGER PRIMARY KEY, -- Model id\n  平台 INTEGER, -- Platform\n  售价 VARCHAR(50), -- Price of sale\n  最高价格 INTEGER, -- Maximum price\n  最低价格 INTEGER, -- Minimum price\n  售卖量 INTEGER, -- Sales\n  用户评分 INTEGER, -- User Rating\n);\nCREATE TABLE 各城市电视机售卖 (\n  城市 INTEGER PRIMARY KEY, -- Urban\n  所属省份 VARCHAR(50), -- Provinces to which they belong\n  电视机售卖量 VARCHAR(50), -- Sale of television sets\n  观看电视日平均用时 INTEGER, -- It's an average time for watching TV days\n);\n-- 电视机型号.品牌id can be joined with 电视机品牌.电视机品牌\n-- 电视机平台售卖.型号id can be joined with 电视机型号.电视机型号", "columns_en": {"词条id": "Phrase_id", "名称": "Name", "所属公司": "Company_to_which_it_belongs", "国家": "National", "市场份额": "Market_share", "产品定位": "Product_location", "屏幕尺寸": "Screen_Size", "屏幕比例": "Screen_Scale", "分辨率": "Resolution", "背光灯寿命": "Backlight_lifetime", "定价": "Pricing", "品牌id": "Brandid", "型号id": "Model_id", "平台": "Platform", "售价": "Price_of_sale", "最高价格": "Maximum_price", "最低价格": "Minimum_price", "售卖量": "Sales", "用户评分": "User_Rating", "城市": "Urban", "所属省份": "Provinces_to_which_they_belong", "电视机售卖量": "Sale_of_television_sets", "观看电视日平均用时": "It's_an_average_time_for_watching_TV_days"}, "table_en": {"电视机品牌": "The_TV_brand", "电视机型号": "Type_of_television", "电视机平台售卖": "Television_platform_sales", "各城市电视机售卖": "All_city_TVs_are_sold"}}, "中国城市产业结构": {"sqlite": "CREATE TABLE 省份产业 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  第一产业收入 VARCHAR(50), -- Income from primary industries\n  第一产业增长 INTEGER, -- Growth of the primary sector\n  第二产业收入 INTEGER, -- Income from the secondary sector\n  第二产业增长 INTEGER, -- Growth in the secondary sector\n  第三产业收入 INTEGER, -- Income from the tertiary sector\n  第三产业增长 INTEGER, -- Growth in the tertiary sector\n);\nCREATE TABLE 城市交通 (\n  词条id INTEGER PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  所属省份id VARCHAR(50), -- Province to which id belongs\n  机场数量 INTEGER, -- Number of airports\n  火车站数量 INTEGER, -- Number of railway stations\n  地铁线数量 INTEGER, -- Number of subway lines\n  公交线数量 INTEGER, -- Number of bus lines\n);\nCREATE TABLE 高铁城市 (\n  词条id INTEGER PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  省份id VARCHAR(50), -- Province id\n  高铁站数量 INTEGER, -- Number of high railway stations\n  联通城市数量 INTEGER, -- Number of cities connected\n);\nCREATE TABLE 码头 (\n  词条id INTEGER PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  城市id VARCHAR(50), -- Urban id\n  旅客吞吐量 INTEGER, -- Passenger throughput\n);\n-- 城市交通.所属省份id can be joined with 省份产业.省份产业\n-- 码头.城市id can be joined with 城市交通.城市交通\n-- 高铁城市.省份id can be joined with 省份产业.省份产业", "columns_en": {"词条id": "Phrase_id", "名称": "Name", "第一产业收入": "Income_from_primary_industries", "第一产业增长": "Growth_of_the_primary_sector", "第二产业收入": "Income_from_the_secondary_sector", "第二产业增长": "Growth_in_the_secondary_sector", "第三产业收入": "Income_from_the_tertiary_sector", "第三产业增长": "Growth_in_the_tertiary_sector", "所属省份id": "Province_to_which_id_belongs", "机场数量": "Number_of_airports", "火车站数量": "Number_of_railway_stations", "地铁线数量": "Number_of_subway_lines", "公交线数量": "Number_of_bus_lines", "省份id": "Province_id", "高铁站数量": "Number_of_high_railway_stations", "联通城市数量": "Number_of_cities_connected", "城市id": "Urban_id", "旅客吞吐量": "Passenger_throughput"}, "table_en": {"省份产业": "Provincial_industries", "城市交通": "Urban_transport", "高铁城市": "High_Iron_City", "码头": "The_pier"}}, "高考": {"sqlite": "CREATE TABLE 2018年各地区考生 (\n  考生所在省份 VARCHAR(50) PRIMARY KEY, -- The candidate is in the province\n  考生类别 VARCHAR(50), -- Category of candidates\n  考卷类型 VARCHAR(50), -- Examination type\n  状元分数线 VARCHAR(50), -- Lines of Numeric Fractions\n  考生数量 INTEGER, -- Number of candidates\n  700以上考生数量 INTEGER, -- Number of candidates over 700\n);\nCREATE TABLE 2018年各地区分数线 (\n  考生所在省份 INTEGER PRIMARY KEY, -- The candidate is in the province\n  考生类别 VARCHAR(50), -- Category of candidates\n  批次 VARCHAR(50), -- Batch\n  分数线 VARCHAR(50), -- Fraction Lines\n  录取率 INTEGER, -- Admission rate\n);\nCREATE TABLE 2018年高校分数线 (\n  院校名称 INTEGER PRIMARY KEY, -- Name of institution\n  考生所在省份 VARCHAR(50), -- The candidate is in the province\n  考生类别 VARCHAR(50), -- Category of candidates\n  批次 VARCHAR(50), -- Batch\n  分数线 VARCHAR(50), -- Fraction Lines\n  最高分 INTEGER, -- Highest score\n  平均分 INTEGER, -- Average score\n  招生人数 INTEGER, -- Number of students enrolled\n);\nCREATE TABLE 一分一档 (\n  考生所在省份 INTEGER PRIMARY KEY, -- The candidate is in the province\n  考生类别 VARCHAR(50), -- Category of candidates\n  分数段 VARCHAR(50), -- Fraction\n  本段人数 INTEGER, -- Number of personnel in this paragraph\n  累计人数 INTEGER, -- Cumulative\n);\n", "columns_en": {"考生所在省份": "The_candidate_is_in_the_province", "考生类别": "Category_of_candidates", "考卷类型": "Examination_type", "状元分数线": "Lines_of_Numeric_Fractions", "考生数量": "Number_of_candidates", "700以上考生数量": "Number_of_candidates_over_700", "批次": "Batch", "分数线": "Fraction_Lines", "录取率": "Admission_rate", "院校名称": "Name_of_institution", "最高分": "Highest_score", "平均分": "Average_score", "招生人数": "Number_of_students_enrolled", "分数段": "Fraction", "本段人数": "Number_of_personnel_in_this_paragraph", "累计人数": "Cumulative"}, "table_en": {"2018年各地区考生": "Regional_candidates__2018", "2018年各地区分数线": "Regional_fraction_lines__2018", "2018年高校分数线": "High_school_scores_line__2018", "一分一档": "One_down__one_down__one_down__one_down__one_down__one_down__one_down__one_down__one_down__one_down__one_down__one_down__one_down__one_down__one_down__one_down__one_down__one_down__one_down__one_down__one_down__one_down__one_down__one_down"}}, "城市图书馆": {"sqlite": "CREATE TABLE 城市 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  所属省份 VARCHAR(50), -- Provinces to which they belong\n  图书馆数量 VARCHAR(50), -- Number of libraries\n  教育排名 INTEGER, -- Education ranking\n);\nCREATE TABLE 图书馆 (\n  词条id INTEGER PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  地址 VARCHAR(50), -- Address\n  所属城市id VARCHAR(50), --  Other Organiser\n  属性 INTEGER, -- Properties\n  建馆时间 VARCHAR(50), -- Building time\n  面积 DATETIME, -- Area\n  藏品数量 INTEGER, -- Number of collections\n  阅览室数量 INTEGER, -- Number of reading rooms\n  座位数量 INTEGER, -- Number of seats\n  古籍数 INTEGER, -- Ancient\n  数字资源 INTEGER, -- Digital resources\n);\nCREATE TABLE 员工数量 (\n  年份 INTEGER PRIMARY KEY, -- Year\n  图书馆id DATETIME, -- Library id\n  在编职工数量 INTEGER, -- Number of employees in service\n  研究生学历占比 INTEGER, -- Percentage of post-graduate education\n  本科学历占比 INTEGER, -- Percentage of scientific history\n);\n-- 员工数量.图书馆id can be joined with 图书馆.图书馆\n-- 图书馆.所属城市id can be joined with 城市.城市", "columns_en": {"词条id": "Phrase_id", "名称": "Name", "所属省份": "Provinces_to_which_they_belong", "图书馆数量": "Number_of_libraries", "教育排名": "Education_ranking", "地址": "Address", "所属城市id": "_Other_Organiser", "属性": "Properties", "建馆时间": "Building_time", "面积": "Area", "藏品数量": "Number_of_collections", "阅览室数量": "Number_of_reading_rooms", "座位数量": "Number_of_seats", "古籍数": "Ancient", "数字资源": "Digital_resources", "年份": "Year", "图书馆id": "Library_id", "在编职工数量": "Number_of_employees_in_service", "研究生学历占比": "Percentage_of_post-graduate_education", "本科学历占比": "Percentage_of_scientific_history"}, "table_en": {"城市": "Urban", "图书馆": "Library", "员工数量": "Number_of_employees"}}, "企业股东": {"sqlite": "CREATE TABLE 企业 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  企业名称 INTEGER, -- Name of enterprise\n  市值 VARCHAR(50), -- Market value\n  当前股价 INTEGER, -- Current stock price\n);\nCREATE TABLE 股东 (\n  词条id INTEGER PRIMARY KEY, -- Phrase id\n  姓名 INTEGER, -- Name\n  年龄 VARCHAR(50), -- Age\n  最高学历 INTEGER, -- Highest level of education\n);\nCREATE TABLE 企业股东 (\n  股东id VARCHAR(50) PRIMARY KEY, -- Shareholdersid\n  企业id INTEGER, -- Enterprise id\n  任职职位 INTEGER, -- Positions held\n  拥有股份 VARCHAR(50), -- Ownership of shares\n);\n-- 企业股东.股东id can be joined with 股东.股东\n-- 企业股东.企业id can be joined with 企业.企业", "columns_en": {"词条id": "Phrase_id", "企业名称": "Name_of_enterprise", "市值": "Market_value", "当前股价": "Current_stock_price", "姓名": "Name", "年龄": "Age", "最高学历": "Highest_level_of_education", "股东id": "Shareholdersid", "企业id": "Enterprise_id", "任职职位": "Positions_held", "拥有股份": "Ownership_of_shares"}, "table_en": {"企业": "Enterprise", "股东": "Shareholders", "企业股东": "Shareholders_of_an_enterprise"}}, "人口出生死亡及结婚离婚率": {"sqlite": "CREATE TABLE 各省人口出生及死亡率 (\n  年份 VARCHAR(50) PRIMARY KEY, -- Year\n  省份 DATETIME, -- Province\n  婴儿出生率 VARCHAR(50), -- Infant birth rate\n  二胎出生率 INTEGER, -- Second birth rate\n  人口死亡率 INTEGER, -- Mortality rate of the population\n  总人口 INTEGER, -- Total population\n);\nCREATE TABLE 各省结婚及离婚率 (\n  年份 INTEGER PRIMARY KEY, -- Year\n  省份 DATETIME, -- Province\n  结婚登记 VARCHAR(50), -- Registration of marriages\n  离婚登记 INTEGER, -- Registration of divorces\n  离婚率 INTEGER, -- Divorce rate\n);\nCREATE TABLE 省份单身人口年龄分布 (\n  省份 INTEGER PRIMARY KEY, -- Province\n  性别 VARCHAR(50), -- Gender\n  年龄段 VARCHAR(50), -- Age group\n  单身人数 VARCHAR(50), -- Singles\n  占总单身人数比例 INTEGER, -- Percentage of total singles\n);\n", "columns_en": {"年份": "Year", "省份": "Province", "婴儿出生率": "Infant_birth_rate", "二胎出生率": "Second_birth_rate", "人口死亡率": "Mortality_rate_of_the_population", "总人口": "Total_population", "结婚登记": "Registration_of_marriages", "离婚登记": "Registration_of_divorces", "离婚率": "Divorce_rate", "性别": "Gender", "年龄段": "Age_group", "单身人数": "Singles", "占总单身人数比例": "Percentage_of_total_singles"}, "table_en": {"各省人口出生及死亡率": "Birth_and_death_rates_among_the_population_of_the_provinces", "各省结婚及离婚率": "Marriage_and_divorce_rates_in_the_provinces", "省份单身人口年龄分布": "Age_distribution_of_the_single_population_in_the_provinces"}}, "世界语言分布": {"sqlite": "CREATE TABLE 语言 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  所属语系 VARCHAR(50), -- Department(s) of language\n  词汇量 VARCHAR(50), -- Glossary\n  使用人数 INTEGER, -- Number of users\n  占全球人口比例 INTEGER, -- Share of global population\n  国际评分 INTEGER, -- International scoring\n  学习难度 INTEGER, -- Learning difficulties\n  分支数量 VARCHAR(50), -- Number of branches\n  官方语言国家数量 INTEGER, -- Number of official language countries\n);\nCREATE TABLE 各国家语言 (\n  语言id INTEGER PRIMARY KEY, -- Language id\n  国家 INTEGER, -- National\n  地位 VARCHAR(50), -- Status\n  使用人数 VARCHAR(50), -- Number of users\n  人口占比 INTEGER, -- Proportion of population\n);\nCREATE TABLE 中国英语考试 (\n  申请国家 INTEGER PRIMARY KEY, -- Applicant State\n  考试类型 VARCHAR(50), -- Type of examination\n  通过分数 VARCHAR(50), -- Through fractions\n);\n-- 各国家语言.语言id can be joined with 语言.语言", "columns_en": {"词条id": "Phrase_id", "名称": "Name", "所属语系": "Department(s)_of_language", "词汇量": "Glossary", "使用人数": "Number_of_users", "占全球人口比例": "Share_of_global_population", "国际评分": "International_scoring", "学习难度": "Learning_difficulties", "分支数量": "Number_of_branches", "官方语言国家数量": "Number_of_official_language_countries", "语言id": "Language_id", "国家": "National", "地位": "Status", "人口占比": "Proportion_of_population", "申请国家": "Applicant_State", "考试类型": "Type_of_examination", "通过分数": "Through_fractions"}, "table_en": {"语言": "Languages", "各国家语言": "National_languages", "中国英语考试": "Chinese_English_Examination"}}, "中国城市潜力": {"sqlite": "CREATE TABLE 城市 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  所属省份 VARCHAR(50), -- Provinces to which they belong\n  城镇比例 VARCHAR(50), -- Percentage of towns and cities\n  GDP总额 INTEGER, -- Total GDP\n  平均工资 INTEGER, -- Average wage\n  房租收入占比 INTEGER, -- Rental income as a percentage\n);\nCREATE TABLE 消费力前十城市 (\n  城市id INTEGER PRIMARY KEY, -- Urban id\n  消费总额 INTEGER, -- Total consumption\n  人均消费 INTEGER, -- Per capita consumption\n);\nCREATE TABLE 人口结构 (\n  城市id INTEGER PRIMARY KEY, -- Urban id\n  名称 INTEGER, -- Name\n  出生比例 VARCHAR(50), -- Proportion of births\n  死亡比例 INTEGER, -- Proportion of deaths\n  老年人口比例 INTEGER, -- Proportion of elderly population\n  流入比例 INTEGER, -- Inflow ratio\n);\nCREATE TABLE 房价前十城市 (\n  城市id INTEGER PRIMARY KEY, -- Urban id\n  名称 INTEGER, -- Name\n  房价 INTEGER, -- The price of the house\n  商品房销售面积 INTEGER, -- Area of sale of merchandise rooms\n);\n-- 人口结构.城市id can be joined with 城市.城市\n-- 消费力前十城市.城市id can be joined with 城市.城市\n-- 房价前十城市.城市id can be joined with 城市.城市", "columns_en": {"词条id": "Phrase_id", "名称": "Name", "所属省份": "Provinces_to_which_they_belong", "城镇比例": "Percentage_of_towns_and_cities", "GDP总额": "Total_GDP", "平均工资": "Average_wage", "房租收入占比": "Rental_income_as_a_percentage", "城市id": "Urban_id", "消费总额": "Total_consumption", "人均消费": "Per_capita_consumption", "出生比例": "Proportion_of_births", "死亡比例": "Proportion_of_deaths", "老年人口比例": "Proportion_of_elderly_population", "流入比例": "Inflow_ratio", "房价": "The_price_of_the_house", "商品房销售面积": "Area_of_sale_of_merchandise_rooms"}, "table_en": {"城市": "Urban", "消费力前十城市": "Top_ten_cities", "人口结构": "Population_structure", "房价前十城市": "The_top_ten_cities"}}, "二手车软件": {"sqlite": "CREATE TABLE 二手车软件 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  上线时间 VARCHAR(50), -- Online time\n  创始人 DATETIME, -- Founder\n  官网 VARCHAR(50), -- Official Network\n  覆盖省份数量 VARCHAR(50), -- Number of provinces covered\n  覆盖城市数量 INTEGER, -- Number of cities covered\n  二手车数量 INTEGER, -- Number of used vehicles\n  评分 INTEGER, -- Rating\n);\nCREATE TABLE 二手车软件覆盖省份 (\n  软件id INTEGER PRIMARY KEY, -- Softwareid\n  省份 INTEGER, -- Province\n  覆盖时间 VARCHAR(50), -- Overwrite Time\n  二手车数量 DATETIME, -- Number of used vehicles\n  交易车数量 INTEGER, -- Number of tradable vehicles\n  累计交易额 INTEGER, -- Cumulative transactions\n  所在省排名 INTEGER, --  Other Organiser\n);\nCREATE TABLE 二手车软件代言人 (\n  软件id INTEGER PRIMARY KEY, -- Softwareid\n  代言人 INTEGER, -- Advocate\n  年份 VARCHAR(50), -- Year\n);\n-- 二手车软件代言人.软件id can be joined with 二手车软件.二手车软件\n-- 二手车软件覆盖省份.软件id can be joined with 二手车软件.二手车软件", "columns_en": {"词条id": "Phrase_id", "名称": "Name", "上线时间": "Online_time", "创始人": "Founder", "官网": "Official_Network", "覆盖省份数量": "Number_of_provinces_covered", "覆盖城市数量": "Number_of_cities_covered", "二手车数量": "Number_of_used_vehicles", "评分": "Rating", "软件id": "Softwareid", "省份": "Province", "覆盖时间": "Overwrite_Time", "交易车数量": "Number_of_tradable_vehicles", "累计交易额": "Cumulative_transactions", "所在省排名": "_Other_Organiser", "代言人": "Advocate", "年份": "Year"}, "table_en": {"二手车软件": "Second-hand_vehicle_software", "二手车软件覆盖省份": "Second-hand_vehicle_software_covering_provinces", "二手车软件代言人": "Second-hand_car_software_advocate"}}, "世界湖泊": {"sqlite": "CREATE TABLE 湖泊 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  地理位置 VARCHAR(50), -- Geographical location\n  占地面积 VARCHAR(50), -- Area of land area\n  蓄水量 INTEGER, -- Water storage\n  最大深度 INTEGER, -- Maximum depth\n  属性 INTEGER, -- Properties\n  接壤国家数 BINARY, -- Number of countries bordering\n);\nCREATE TABLE 湖泊接壤国家 (\n  湖泊id INTEGER PRIMARY KEY, -- Lakesid\n  国家 INTEGER, -- National\n  接壤方式 VARCHAR(50), -- Means of bordering\n);\nCREATE TABLE 湖泊沿岸城市 (\n  湖泊id BINARY PRIMARY KEY, -- Lakesid\n  城市 INTEGER, -- Urban\n  国家 VARCHAR(50), -- National\n);\nCREATE TABLE 河流 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  流域面积 VARCHAR(50), -- Watershed area\n  河长 INTEGER, -- River Leader\n);\nCREATE TABLE 湖泊注入河流 (\n  湖泊id INTEGER PRIMARY KEY, -- Lakesid\n  河流id INTEGER, -- Riverid\n);\nCREATE TABLE 湖泊流出河流 (\n  湖泊id INTEGER PRIMARY KEY, -- Lakesid\n  河流id INTEGER, -- Riverid\n);\n-- 湖泊流出河流.湖泊id can be joined with 湖泊.湖泊\n-- 湖泊注入河流.河流id can be joined with 河流.河流\n-- 湖泊沿岸城市.湖泊id can be joined with 湖泊.湖泊\n-- 湖泊流出河流.河流id can be joined with 河流.河流\n-- 湖泊注入河流.湖泊id can be joined with 湖泊.湖泊\n-- 湖泊接壤国家.湖泊id can be joined with 湖泊.湖泊", "columns_en": {"词条id": "Phrase_id", "名称": "Name", "地理位置": "Geographical_location", "占地面积": "Area_of_land_area", "蓄水量": "Water_storage", "最大深度": "Maximum_depth", "属性": "Properties", "接壤国家数": "Number_of_countries_bordering", "湖泊id": "Lakesid", "国家": "National", "接壤方式": "Means_of_bordering", "城市": "Urban", "流域面积": "Watershed_area", "河长": "River_Leader", "河流id": "Riverid"}, "table_en": {"湖泊": "Lakes", "湖泊接壤国家": "Countries_bordering_lakes", "湖泊沿岸城市": "Lakes-coastal_cities", "河流": "River", "湖泊注入河流": "The_lake_pours_into_the_river", "湖泊流出河流": "The_lake_flows_out_of_the_river"}}, "银行贷款": {"sqlite": "CREATE TABLE 城市 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  首套房首付比例 VARCHAR(50), -- First suite down payment ratio\n  二套房首付比例 INTEGER, -- The first payment rate for the second suite\n  平均房价 INTEGER, -- Average house price\n);\nCREATE TABLE 银行 (\n  词条id INTEGER PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  公司类型 VARCHAR(50), -- Type of company\n  500强排名 VARCHAR(50), -- 500 rankings\n);\nCREATE TABLE 银行房贷利率 (\n  银行id INTEGER PRIMARY KEY, -- Bankid\n  城市id INTEGER, -- Urban id\n  首套房贷款利率 INTEGER, -- First suite loan rate\n  二套房贷款利率 INTEGER, -- Interest rate on second-bedroom loan\n  提前还款最低年限 INTEGER, -- Minimum age for advance repayment\n);\n-- 银行房贷利率.城市id can be joined with 城市.城市\n-- 银行房贷利率.银行id can be joined with 银行.银行", "columns_en": {"词条id": "Phrase_id", "名称": "Name", "首套房首付比例": "First_suite_down_payment_ratio", "二套房首付比例": "The_first_payment_rate_for_the_second_suite", "平均房价": "Average_house_price", "公司类型": "Type_of_company", "500强排名": "500_rankings", "银行id": "Bankid", "城市id": "Urban_id", "首套房贷款利率": "First_suite_loan_rate", "二套房贷款利率": "Interest_rate_on_second-bedroom_loan", "提前还款最低年限": "Minimum_age_for_advance_repayment"}, "table_en": {"城市": "Urban", "银行": "Bank", "银行房贷利率": "Interest_rate_on_bank_mortgages"}}, "空难": {"sqlite": "CREATE TABLE 航空公司 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  总部地点 VARCHAR(50), -- Headquarters locations\n  成立时间 VARCHAR(50), --  Other Organiser\n  营业收入 DATETIME, -- Operating income\n  净利润 INTEGER, -- Net profit\n  国内客运收入占比 INTEGER, -- Share of revenue from domestic passenger transport\n  港澳台客运收入占比 INTEGER, -- Revenue from Hong Kong and Macao passenger traffic\n  国际客运收入占比 INTEGER, -- Share of international passenger revenue\n  全年客座率 INTEGER, -- Year-round occupancy rate\n);\nCREATE TABLE 空难 (\n  词条id INTEGER PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  发生时间 VARCHAR(50), -- Time of occurrence\n  遇难人数 DATETIME, -- Number of persons killed\n  生还人数 INTEGER, -- Number of survivors\n  事故原因 INTEGER, -- Cause of the accident\n  航空公司id VARCHAR(50), -- Airlineid\n  起飞地 INTEGER, -- Grounds for take-off\n  目的地 VARCHAR(50), -- Destination\n);\n-- 空难.航空公司id can be joined with 航空公司.航空公司", "columns_en": {"词条id": "Phrase_id", "名称": "Name", "总部地点": "Headquarters_locations", "成立时间": "_Other_Organiser", "营业收入": "Operating_income", "净利润": "Net_profit", "国内客运收入占比": "Share_of_revenue_from_domestic_passenger_transport", "港澳台客运收入占比": "Revenue_from_Hong_Kong_and_Macao_passenger_traffic", "国际客运收入占比": "Share_of_international_passenger_revenue", "全年客座率": "Year-round_occupancy_rate", "发生时间": "Time_of_occurrence", "遇难人数": "Number_of_persons_killed", "生还人数": "Number_of_survivors", "事故原因": "Cause_of_the_accident", "航空公司id": "Airlineid", "起飞地": "Grounds_for_take-off", "目的地": "Destination"}, "table_en": {"航空公司": "Airlines", "空难": "Air_crash"}}, "留学移民签证公司": {"sqlite": "CREATE TABLE 移民中介 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  位于城市 VARCHAR(50), -- It's in the city\n  创立时间 VARCHAR(50), --  Other Organiser\n  服务人数 DATETIME, -- Number of persons served\n  成功人数 INTEGER, -- Number of successful\n  点赞数 INTEGER, -- It's a good one\n  分享数 INTEGER, -- Number of shares\n  咨询数 INTEGER, -- Number of consultations\n  收藏数 INTEGER, -- Collections\n  总得票数 INTEGER, -- Number of votes obtained\n);\nCREATE TABLE 移民费用 (\n  移民中介id INTEGER PRIMARY KEY, -- Migrant Brokerid\n  国家 INTEGER, -- National\n  移民类型 VARCHAR(50), -- Type of immigrant\n  最低费用 VARCHAR(50), -- Minimum cost\n  中介费用 INTEGER, -- Intermediary costs\n);\nCREATE TABLE 留学中介 (\n  词条id INTEGER PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  申请成功率 VARCHAR(50), -- Application success rate\n  国内排名 INTEGER, -- Domestic rankings\n);\nCREATE TABLE 留学费用 (\n  留学中介id INTEGER PRIMARY KEY, -- Intermediary id\n  申请国家 INTEGER, -- Applicant State\n  学校排名 VARCHAR(50), -- School ranking\n  前期收费 INTEGER, -- Prior-period charges\n  排名收费 INTEGER, -- Ranking fees\n  未录取退费比例 INTEGER, -- Percentage of non-entitled refunds\n);\n-- 移民费用.移民中介id can be joined with 移民中介.移民中介\n-- 留学费用.留学中介id can be joined with 留学中介.留学中介", "columns_en": {"词条id": "Phrase_id", "名称": "Name", "位于城市": "It's_in_the_city", "创立时间": "_Other_Organiser", "服务人数": "Number_of_persons_served", "成功人数": "Number_of_successful", "点赞数": "It's_a_good_one", "分享数": "Number_of_shares", "咨询数": "Number_of_consultations", "收藏数": "Collections", "总得票数": "Number_of_votes_obtained", "移民中介id": "Migrant_Brokerid", "国家": "National", "移民类型": "Type_of_immigrant", "最低费用": "Minimum_cost", "中介费用": "Intermediary_costs", "申请成功率": "Application_success_rate", "国内排名": "Domestic_rankings", "留学中介id": "Intermediary_id", "申请国家": "Applicant_State", "学校排名": "School_ranking", "前期收费": "Prior-period_charges", "排名收费": "Ranking_fees", "未录取退费比例": "Percentage_of_non-entitled_refunds"}, "table_en": {"移民中介": "Migrant_intermediaries", "移民费用": "Immigration_costs", "留学中介": "Intermediaries_for_study", "留学费用": "Cost_of_studying_abroad"}}, "考研": {"sqlite": "CREATE TABLE 高校 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  所在城市 VARCHAR(50), -- It's in the city\n  是否985 VARCHAR(50), -- Is it 985?\n  是否211 BINARY, -- Is it 211?\n  本科毕业人数 BINARY, -- Number of graduates of undergraduate studies\n  继续深造人数 INTEGER, -- Number of persons continuing their studies\n  本科就业率 INTEGER, -- Undergraduate employment rate\n);\nCREATE TABLE 各专业推免生 (\n  学校id INTEGER PRIMARY KEY, -- School id\n  专业 INTEGER, -- Professional\n  专业全国排名 VARCHAR(50), -- Professional national ranking\n  专业毕业人数 INTEGER, -- Number of professional graduates\n  硕士导师数量 INTEGER, -- Number of master ' s mentors\n  硕士招生人数 INTEGER, -- Number of master ' s students enrolled\n  推免生人数 INTEGER, -- Number of births\n);\nCREATE TABLE 各省考研报名情况 (\n  省份 INTEGER PRIMARY KEY, -- Province\n  考生性别 VARCHAR(50), -- Sex of candidates\n  考生数量 VARCHAR(50), -- Number of candidates\n);\nCREATE TABLE 报考高校 (\n  考生生源高校id INTEGER PRIMARY KEY, -- Quest students                                                                                                                                                     \n  考生报考高校id INTEGER, -- Candidates for higher education ed\n  考生数量 INTEGER, -- Number of candidates\n);\n-- 报考高校.考生生源高校id can be joined with 高校.高校\n-- 报考高校.考生报考高校id can be joined with 高校.高校\n-- 各专业推免生.学校id can be joined with 高校.高校", "columns_en": {"词条id": "Phrase_id", "名称": "Name", "所在城市": "It's_in_the_city", "是否985": "Is_it_985?", "是否211": "Is_it_211?", "本科毕业人数": "Number_of_graduates_of_undergraduate_studies", "继续深造人数": "Number_of_persons_continuing_their_studies", "本科就业率": "Undergraduate_employment_rate", "学校id": "School_id", "专业": "Professional", "专业全国排名": "Professional_national_ranking", "专业毕业人数": "Number_of_professional_graduates", "硕士导师数量": "Number_of_master_'_s_mentors", "硕士招生人数": "Number_of_master_'_s_students_enrolled", "推免生人数": "Number_of_births", "省份": "Province", "考生性别": "Sex_of_candidates", "考生数量": "Number_of_candidates", "考生生源高校id": "Quest_students_____________________________________________________________________________________________________________________________________________________", "考生报考高校id": "Candidates_for_higher_education_ed"}, "table_en": {"高校": "Colleges_of_higher_education", "各专业推免生": "I've_got_a_lot_of_pros_and_pros", "各省考研报名情况": "Registration_of_candidates_by_province", "报考高校": "I'm_going_to_go_to_college"}}, "足球世界杯": {"sqlite": "CREATE TABLE 球队 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  中文队名 INTEGER, -- Chinese Team Name\n  所属地区 VARCHAR(50), -- Territory to which it belongs\n  成立时间 VARCHAR(50), --  Other Organiser\n  FIFA排名 DATETIME, -- FIFA ranking\n  冠军次数 INTEGER, -- Number of champions\n);\nCREATE TABLE 世界杯 (\n  词条id INTEGER PRIMARY KEY, -- Phrase id\n  名称 INTEGER, -- Name\n  举办时间 VARCHAR(50), -- Date of holding\n  举办国家 DATETIME, -- Host country\n  参赛球队数量 VARCHAR(50), -- Number of teams participating\n  比赛场数 INTEGER, -- Number of competitions\n  决赛场地 INTEGER, -- The finals\n);\nCREATE TABLE 世界杯进球记录 (\n  球员 VARCHAR(50) PRIMARY KEY, -- The players\n  球队id VARCHAR(50), -- Team id\n  进球数量 INTEGER, -- Number of goals\n);\nCREATE TABLE 世界杯四强 (\n  年份 INTEGER PRIMARY KEY, -- Year\n  世界杯名称 DATETIME, -- World Cup name\n  冠军球队id VARCHAR(50), -- ♪ The team of champions ♪ ♪ the team of champions ♪ ♪ the team of champions ♪ ♪ the team of champions ♪ ♪ ♪ the team of champions ♪ ♪ ♪ the team of champions ♪ ♪ ♪ the team of champions ♪ ♪ ♪ the team of champions ♪ ♪ ♪ the team of champions ♪ ♪ ♪ the team of champions ♪\n  亚军球队id INTEGER, -- Yakuza id\n  季军球队id INTEGER, -- Seasonal team id\n  殿军球队id INTEGER, -- Quarterback id\n);\nCREATE TABLE 世界杯比分记录 (\n  年份 INTEGER PRIMARY KEY, -- Year\n  世界杯名称 DATETIME, -- World Cup name\n  赢方id VARCHAR(50), -- Winner id\n  输方id INTEGER, -- Loser id\n  比分 INTEGER, -- Score\n);\n-- 世界杯四强.亚军球队id can be joined with 球队.球队\n-- 世界杯比分记录.输方id can be joined with 球队.球队\n-- 世界杯四强.季军球队id can be joined with 球队.球队\n-- 世界杯四强.殿军球队id can be joined with 球队.球队\n-- 世界杯比分记录.赢方id can be joined with 球队.球队\n-- 世界杯四强.冠军球队id can be joined with 球队.球队\n-- 世界杯进球记录.球队id can be joined with 球队.球队", "columns_en": {"词条id": "Phrase_id", "中文队名": "Chinese_Team_Name", "所属地区": "Territory_to_which_it_belongs", "成立时间": "_Other_Organiser", "FIFA排名": "FIFA_ranking", "冠军次数": "Number_of_champions", "名称": "Name", "举办时间": "Date_of_holding", "举办国家": "Host_country", "参赛球队数量": "Number_of_teams_participating", "比赛场数": "Number_of_competitions", "决赛场地": "The_finals", "球员": "The_players", "球队id": "Team_id", "进球数量": "Number_of_goals", "年份": "Year", "世界杯名称": "World_Cup_name", "冠军球队id": "♪_The_team_of_champions_♪_♪_the_team_of_champions_♪_♪_the_team_of_champions_♪_♪_the_team_of_champions_♪_♪_♪_the_team_of_champions_♪_♪_♪_the_team_of_champions_♪_♪_♪_the_team_of_champions_♪_♪_♪_the_team_of_champions_♪_♪_♪_the_team_of_champions_♪_♪_♪_the_team_of_champions_♪", "亚军球队id": "Yakuza_id", "季军球队id": "Seasonal_team_id", "殿军球队id": "Quarterback_id", "赢方id": "Winner_id", "输方id": "Loser_id", "比分": "Score"}, "table_en": {"球队": "Team", "世界杯": "World_Cup", "世界杯进球记录": "World_Cup_goal_record", "世界杯四强": "World_Cup_Four", "世界杯比分记录": "World_Cup_score"}}, "翻拍电视剧": {"sqlite": "CREATE TABLE 电视剧 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  剧名 INTEGER, -- The title of the play\n  原著 VARCHAR(50), -- Original\n  拍摄年份 VARCHAR(50), -- Year of shoot\n  导演 DATETIME, -- Director\n  评分 VARCHAR(50), -- Rating\n);\nCREATE TABLE 主题曲 (\n  词条id INTEGER PRIMARY KEY, -- Phrase id\n  主题曲名称 INTEGER, -- Theme song name\n  演唱者 VARCHAR(50), -- Artist\n  作词 VARCHAR(50), -- Words\n  作曲 VARCHAR(50), -- Composing\n  电视剧id VARCHAR(50), -- TV dramad\n);\nCREATE TABLE 演员 (\n  姓名 INTEGER PRIMARY KEY, -- Name\n  电视剧id VARCHAR(50), -- TV dramad\n  饰演角色 INTEGER, -- Play a role\n  主配角 VARCHAR(50), -- Main Angle\n);\n-- 演员.电视剧id can be joined with 电视剧.电视剧\n-- 主题曲.电视剧id can be joined with 电视剧.电视剧", "columns_en": {"词条id": "Phrase_id", "剧名": "The_title_of_the_play", "原著": "Original", "拍摄年份": "Year_of_shoot", "导演": "Director", "评分": "Rating", "主题曲名称": "Theme_song_name", "演唱者": "Artist", "作词": "Words", "作曲": "Composing", "电视剧id": "TV_dramad", "姓名": "Name", "饰演角色": "Play_a_role", "主配角": "Main_Angle"}, "table_en": {"电视剧": "A_TV_show", "主题曲": "Theme", "演员": "Actors"}}, "中国歌手及歌曲": {"sqlite": "CREATE TABLE 歌手 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  姓名 INTEGER, -- Name\n  民族 VARCHAR(50), -- Nationalities\n  身高 VARCHAR(50), -- Height\n  体重 INTEGER, -- body weight\n  出生地 INTEGER, -- Place of birth\n  出生日期 VARCHAR(50), -- Date of birth\n  毕业院校 DATETIME, -- Graduate schools\n);\nCREATE TABLE 专辑 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  专辑名 INTEGER, -- Album Name\n  歌手id VARCHAR(50), -- Singer id\n  曲目数量 INTEGER, -- Number of Tracks\n  发行时间 INTEGER, -- Release time\n  风格 DATETIME, -- Style\n  唱片公司 VARCHAR(50), -- The record company\n);\nCREATE TABLE 歌曲 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  歌曲名称 INTEGER, -- Song Name\n  所属专辑id VARCHAR(50), -- Entitled id\n  时长 INTEGER, -- Length\n  原唱歌手id INTEGER, -- Original singer id\n  发行时间 INTEGER, -- Release time\n  填词 DATETIME, -- Fill\n  谱曲 VARCHAR(50), -- Spectrum\n  编曲 VARCHAR(50), -- Composing\n  语言 VARCHAR(50), -- Languages\n);\nCREATE TABLE 翻唱歌曲 (\n  歌曲id VARCHAR(50) PRIMARY KEY, -- Songid\n  歌手id INTEGER, -- Singer id\n  评分 INTEGER, -- Rating\n);\nCREATE TABLE 歌手与作词人 (\n  歌手id INTEGER PRIMARY KEY, -- Singer id\n  作词人 INTEGER, -- Lyric\n  合作曲目数量 VARCHAR(50), -- Number of collaborative tracks\n);\nCREATE TABLE 台湾金曲奖 (\n  届数 INTEGER PRIMARY KEY, -- Number of sessions\n  具体奖项 INTEGER, -- Specific awards\n  人物id VARCHAR(50), -- Personal id\n  歌曲id INTEGER, -- Songid\n);\n-- 台湾金曲奖.歌曲id can be joined with 歌曲.歌曲\n-- 专辑.歌手id can be joined with 歌手.歌手\n-- 台湾金曲奖.人物id can be joined with 歌手.歌手\n-- 歌曲.所属专辑id can be joined with 专辑.专辑\n-- 歌曲.原唱歌手id can be joined with 歌手.歌手\n-- 翻唱歌曲.歌曲id can be joined with 歌曲.歌曲\n-- 歌手与作词人.歌手id can be joined with 歌手.歌手\n-- 翻唱歌曲.歌手id can be joined with 歌手.歌手", "columns_en": {"词条id": "Phrase_id", "姓名": "Name", "民族": "Nationalities", "身高": "Height", "体重": "body_weight", "出生地": "Place_of_birth", "出生日期": "Date_of_birth", "毕业院校": "Graduate_schools", "专辑名": "Album_Name", "歌手id": "Singer_id", "曲目数量": "Number_of_Tracks", "发行时间": "Release_time", "风格": "Style", "唱片公司": "The_record_company", "歌曲名称": "Song_Name", "所属专辑id": "Entitled_id", "时长": "Length", "原唱歌手id": "Original_singer_id", "填词": "Fill", "谱曲": "Spectrum", "编曲": "Composing", "语言": "Languages", "歌曲id": "Songid", "评分": "Rating", "作词人": "Lyric", "合作曲目数量": "Number_of_collaborative_tracks", "届数": "Number_of_sessions", "具体奖项": "Specific_awards", "人物id": "Personal_id"}, "table_en": {"歌手": "Singer", "专辑": "Album", "歌曲": "Songs", "翻唱歌曲": "♪_Rolling_a_song_♪", "歌手与作词人": "Singers_and_phonographers", "台湾金曲奖": "Taiwan_Golden_Argument"}}, "企业营收": {"sqlite": "CREATE TABLE 企业 (\n  词条id VARCHAR(50) PRIMARY KEY, -- Phrase id\n  公司名 INTEGER, -- Name of company\n  股票代码 VARCHAR(50), -- Stock Code\n  注册资本 INTEGER, -- Registered capital\n  成立日期 INTEGER, --  Other Organiser\n  行业领域 DATETIME, -- Industry\n  经营范围 VARCHAR(50), -- Scope of operation\n);\nCREATE TABLE 企业年报 (\n  企业id VARCHAR(50) PRIMARY KEY, -- Enterprise id\n  年份 INTEGER, -- Year\n  营收 DATETIME, -- Collection\n  收入增长率 INTEGER, -- Income growth rate\n  净利润 INTEGER, -- Net profit\n  净利润增长率 INTEGER, -- Net profit growth rate\n  每股收益 INTEGER, -- Income per share\n);\nCREATE TABLE 企业股价 (\n  股票代码 INTEGER PRIMARY KEY, -- Stock Code\n  年份 INTEGER, -- Year\n  最高股价 DATETIME, -- Highest share price\n  最低股价 INTEGER, -- Minimum share price\n  目标价 INTEGER, -- Target price\n);\nCREATE TABLE 企业当前股价 (\n  股票代码 INTEGER PRIMARY KEY, -- Stock Code\n  昨收股价 INTEGER, -- The stock price was collected yesterday\n  今开股价 INTEGER, -- Let's start with the stock price\n  最低股价 INTEGER, -- Minimum share price\n  最高股价 INTEGER, -- Highest share price\n  当前价 INTEGER, -- Current price\n  成交量 INTEGER, -- Deal\n);\n-- 企业年报.企业id can be joined with 企业.企业\n-- 企业股价.股票代码 can be joined with 企业.企业\n-- 企业当前股价.股票代码 can be joined with 企业.企业", "columns_en": {"词条id": "Phrase_id", "公司名": "Name_of_company", "股票代码": "Stock_Code", "注册资本": "Registered_capital", "成立日期": "_Other_Organiser", "行业领域": "Industry", "经营范围": "Scope_of_operation", "企业id": "Enterprise_id", "年份": "Year", "营收": "Collection", "收入增长率": "Income_growth_rate", "净利润": "Net_profit", "净利润增长率": "Net_profit_growth_rate", "每股收益": "Income_per_share", "最高股价": "Highest_share_price", "最低股价": "Minimum_share_price", "目标价": "Target_price", "昨收股价": "The_stock_price_was_collected_yesterday", "今开股价": "Let's_start_with_the_stock_price", "当前价": "Current_price", "成交量": "Deal"}, "table_en": {"企业": "Enterprise", "企业年报": "Enterprise_annual_report", "企业股价": "Enterprise_share_price", "企业当前股价": "Current_share_price_of_the_enterprise"}}}